Essential C++

官方网站 
http://www.aw1.com/cseng/titles/0-201-48518-4 （已失效）、 http://www.objectwrite.com （已失效）。

☆
作者：Stanley B.Lippman
其他书籍： 《C++ Primer》、《深度探索C++对象模型》。

知识点 
1.	C++基础知识。

代码 
1.  书籍代码。

前言
	本书的结构与组织
	关于程序代码
	致谢
	更多信息
	字形习惯
1. C++编程基础
	1.1 如何撰写C++程序
	1.2 对象的定义与初始化
	1.3 撰写表达式
	1.4 条件语句和循环语句
	1.5 如何运用数组和向量
	1.6 指针带来弹性
	1.7 文件的读写
2. 面向过程的编程风格
	2.1 如何撰写函数
	2.2 调用一个函数
	2.3 提供默认参数值
	2.4 使用局部静态对象
	2.5 声明一个inline函数
	2.6 提供重载函数
	2.7 定义并使用模板函数
	2.8 函数指针带来更大的弹性
	2.9 设定头文件
3. 泛型编程风格
	3.1 指针的算术运算
	3.2 了解泛型指针
	3.3 所有容器的共通操作
	3.4 使用序列式容器
	3.5 使用泛型算法
	3.6 如何设计一个泛型算法
	3.7 使用Map
	3.8 使用Set
	3.9 如何使用Iterator Inserters
	3.10 使用iostream Iterators
4. 基于对象的编程风格
	4.1 如何实现一个class
	4.2 什么是构造函数和析构函数
	4.3 何谓可变和不变
	4.4 什么是this指针
	4.5 静态的类成员
	4.6 打造一个Iterator Class
	4.7 合作关系必须建立在友谊的基础上
	4.8 实现一个copy assignment operator
	4.9 实现一个function object
	4.10 将iostream运算符重载 
	4.11 指针：指向Class Member Functions
5. 面向对象编程风格
	5.1 面向对象编程概念
	5.2 漫游：面向对象编程思维
	5.3 不带继承的多态
	5.4 定义一个抽象基类
	5.5 定义一个派生类
	5.6 运用继承体系
	5.7 基类应该多么抽象
	5.8 初始化、析构、复制
	5.9 在派生类中定义一个虚拟函数
	5.10 执行期的型别鉴定机制
6. 以template进行编程
	6.1 被参数化的型别
	6.2 Class Template的定义
	6.3 Template型别参数的处理
	6.4 实现一个Class Template
	6.5 一个以Function Template完成Output运算符
	6.6 常量表达式与默认参数
	6.7 以Template参数作为一种设计策略
	6.8 Member Template Functions
7. 异常处理
	7.1 抛出异常
	7.2 捕捉异常
	7.3 提炼异常
	7.4 局部资源管理 
	7.5 标准异常
附录
	附录A 习题解答
	附录B 泛型算法参考手册
	附录C 中英术语对照
	索引
泛型编程与STL（Generic Programming and the STL）

官方网站：
http://www.sgi.com/Technology/stl

☆
作者：Matthew H.Austern

知识点 
1.	C++标准库基础知识。 

前言
	泛型编程
		★	一个泛型算法实际上具有两个部分：（1）用来描述算法步骤的实际指令。（2）正确指定“其引数型别必须满足之性质”的一组需求条件。
	如何阅读本书
	谁该阅读本书
	本书由来
	致谢
第一篇 泛型编程导入
	第1章 STL巡礼
		1.1 一个简单的例子
		1.2 总结
	第2章 算法和区间
		2.1 线性查找 
			2.1.1 以C完成线性查找
			2.1.2 Ranges
			2.1.3 以C++完成线性查找
		2.2 Concepts和Modeling
		2.3 Iterators
			2.3.1 Input Iterators
			2.3.2 Output Iterators
			2.3.3 Forward Iterators
			2.3.4 Bidiectional Iterators
			2.3.5 Random Access Iterators
		2.4 Rifinement
		2.5 总结
	第3章 再论Iterators（迭代器or泛型指针）
		3.1 迭代器特征与相关型别
			3.1.1 数值型别
			3.1.2 差距型别
			3.1.3 Referenct Type和Pointer Type
			3.1.4 算法的处理与Iterator Tags
			3.1.5 把一切统合起来
			3.1.6 没有iterator_traits，如何制作迭代器特征
		3.2 定义新组件
			3.2.1 Iterator Adapters
			3.2.2 定义Iterator时的建议
			3.2.3 定义算法时建议
		3.3 总结
	第4章 函数对象
		4.1 将线性查找一般化
		4.2 函数对象概念
			4.2.1 单参与双参Function Objects
			4.2.2 Predicates和Binary Predicates
			4.2.3 相关型别
		4.3 函数对象配接器
		4.4 预定义的Function Objects
		4.5 总结
	第5章 容器
		5.1 一个简单的Container
			5.1.1 一个Array Class
			5.1.2 它是如何动作的
			5.1.3 最后讨论
		5.2 Container Concepts
			5.2.1 元素的容纳
			5.2.2 Iterators
			5.2.3 Containers的阶层架构
			5.2.4 最平淡无奇的Container
		5.3 大小可变的Container Concepts
			5.3.1 Sequences
			5.3.2 关联式容器
			5.3.3 配置器
		5.4 总结
			5.4.1 我们应该使用什么样的Container？
			5.4.2 设计你自己的Container
第二篇 参考手册：STL Concepts
	第6章 基本概念
		6.1 Assignable
		6.2 Default Constructible
		6.3 Equality Comparable
		6.4 可序性
			6.4.1 LessThan Comparable
			6.4.2 Strict Weakly Comparable
	第7章 Iterators（迭代器or泛型指针）
		7.1 Trivial Iterator
		7.2 Input Iterator
		7.3 Output Iterator
		7.4 Forward Iterator
		7.5 Bidiectional Iterator
		7.6 Random Access Iterator
	第8章 函数对象
		8.1 基本的Function Objects
			8.1.1 Generator
			8.1.2 Unary Function
			8.1.3 Binary Function
		8.2 Adaptable Fuction Objects
			8.2.1 Adaptable Generator
			8.2.2 Adaptable Unary Function
			8.2.3 Adaptable Binary Function
		8.3 Predicates
			8.3.1 Predicate
			8.3.2 Binary Predicate
			8.3.3 Adaptable Predicate
			8.3.4 Adaptable Binary Predicate
			8.3.5 Strict Weak Ordering
		8.4 特化的Concept
			8.4.1 Random Number Generator
			8.4.2 散列函数
	第9章 容器
		9.1 General Container Concepts
			9.1.1 Container
			9.1.2 Forward Container
			9.1.3 Reversible Container
			9.1.4 Random Access Container
		9.2 序列：循序式容器
			9.2.1 Sequence
			9.2.2 Front Insertion Sequence
			9.2.3 Back Insertion Sequence
		9.3 关联式容器
			9.3.1 Associative Container
			9.3.2 Unique Associative Container
			9.3.3 Multiple Associative Container
			9.3.4 Simple Associative Container
			9.3.5 Pair Associative Container
			9.3.6 Sorted Associative Container
			9.3.7 Hashed Associative Container
		9.4 空间配置器
第三篇 参考手册：算法与类
	第10章 基本组件
		10.1 pair
		10.2 Iterator基本要素
			10.2.1 iterator_traits
			10.2.2 Iterator Tag Classes
			10.2.3 distance
			10.2.4 advance
			10.2.5 Iterator Base Class
		10.3 allocator
		10.4 内存管理基本要素
			10.4.1 construct
			10.4.2 destroy
			10.4.3 uninitialized_copy
			10.4.4 uninitialized_fill
			10.4.5 uninitialized_fill_n
		10.5 临时缓冲区
			10.5.1 get_temporary_buffer
			10.5.2 return_temporary_buffer
	第11章 “不改变操作对象之内容”的算法
		11.1 线性查找
			11.1.1 find
			11.1.2 find_if
			11.1.3 adjacent_find
			11.1.4 find_first_of
		11.2 子序列匹配
			11.2.1 search
			11.2.2 find_end
			11.2.3 search_n
		11.3 计算元素个数 
			11.3.1 count
			11.3.2 count_if
		11.4 for_each
		11.5 比较两个Ranges
			11.5.1 equal
			11.5.2 mismatch
			11.5.3 lexlcographical_compare
		11.6 最大值与最小值
			11.6.1 min
			11.6.2 max
			11.6.3 min_element
			11.6.4 max_element
	第12章 “会改变操作对象之内容”的算法
		12.1 拷贝某个区间
			12.1.1 copy
			12.1.2 copy_backward
		12.2 互换元素
			12.2.1 swap
			12.2.2 iter_swap
			12.2.3 swap_ranges
		12.3 transform
		12.4 替换元素
			12.4.1 replace
			12.4.2 replace_if
			12.4.3 replace_copy
			12.4.4 replace_copy_if
		12.5 充填整个区间
			12.5.1 fill
			12.5.2 fill_n
			12.5.3 generate
			12.5.4 generate_n
		12.6 移除元素
			12.6.1 remove
			12.6.2 remove_if
			12.6.3 remove_copy
			12.6.4 remove_copy_if
			12.6.5 unique
			12.6.6 unique_copy
		12.7 排列算法
			12.7.1 reverse
			12.7.2 reverse_copy
			12.7.3 rotate
			12.7.4 rotate_copy
			12.7.5 next_permutation
			12.7.6 prev_permutation
		12.8 分割
			12.8.1 partition
			12.8.2 stable_partition
		12.9 随机重排与抽样
			12.9.1 random_shuffle
			12.9.2 random_sample
			12.9.3 random_sample_n
		12.10 一般化之数值算法 
			12.10.1 accumulate
			12.10.2 inner_product
			12.10.3 partial_sum
			12.10.4 adjacent_difference
	第13章 排序和查找
		13.1 对某个区间排序
			13.1.1 sort
			13.1.2 stable_sort
			13.1.3 partial_sort
			13.1.4 partial_sort_copy
			13.1.5 nth_element
			13.1.6 is_sorted
		13.2 sorted ranges上的操作行为
			13.2.1 二分查找法
				13.2.1.1 binary_search
				13.2.1.2 lower_bound
				13.2.1.3 upper_bound
				13.2.1.4 equal_range
			13.2.2 合并两个Sorted Ranges
				13.2.2.1 merge
				13.2.2.2 inplace_merge
			13.2.3 在Sorted Ranges身上执行集合相关操作
				13.2.3.1 includes
				13.2.3.2 set_union
				13.2.3.3 set_intersection
				13.2.3.4 set_difference
				13.2.3.5 set_symmetric_difference
		13.3 堆的相关操作
			13.3.1 make_heap
			13.3.2 push_heap
			13.3.3 pop_heap
			13.3.4 sort_heap
			13.3.5 is_heap
	第14章 迭代器类
		14.1 Insert Iterators
			14.1.1 front_insert_iterator
			14.1.2 back_insert_iterator
			14.1.3 insert_iterator
		14.2 Stream Iterators
			14.2.1 istream_iterator
			14.2.2 ostream_iterator
			14.2.3 istreambuf_iterator
			14.2.4 ostreambuf_iterator
		14.3 reverse_iterator
		14.4 raw_storage_iterator
	第15章 函数对象类
		15.1 Function Object Base Classes
			15.1.1 unary_function
			15.1.2 binary_function
		15.2 算术运算	
			15.2.1 plus
			15.2.2 minus
			15.2.3 multiplies
			15.2.4 divides
			15.2.5 modulus
			15.2.6 negate
		15.3 大小比较
			15.3.1 equal_to
			15.3.2 not_equal_to
			15.3.3 less
			15.3.4 greater
			15.3.5 less_equal
			15.3.6 greater_equal
		15.4 逻辑运算
			15.4.1 logical_and
			15.4.2 logical_or
			15.4.3 logical_not
		15.5 证同与投射
			15.5.1 identity
			15.5.2 project1st
			15.5.3 project2nd
			15.5.4 select1st
			15.5.5 select2nd
		15.6 特殊的Function Objects
			15.6.1 hash
			15.6.2 subtractive_rng
		15.7 Member Function Adaptes
			15.7.1 mem_fun_t
			15.7.2 mem_fun_ref_t
			15.7.3 mem_func_t
			15.7.4 mem_func_ref_t
			15.7.5 const_mem_fun_t
			15.7.6 const_mem_fun_ref_t
			15.7.7 const_mem_func_t
			15.7.8 const_mem_func_ref_t
		15.8 其他的Adapters
			15.8.1 binder1st
			15.8.2 binder2nd
			15.8.3 pointer_to_unary_function
			15.8.4 pointer_to_binary_function
			15.8.5 unary_negate
			15.8.6 binary_negate
			15.8.7 unary_compose
			15.8.8 binary_compose
	第16章 容器类
		16.1 序列
			16.1.1 vector
			16.1.2 list
			16.1.3 slist
			16.1.4 deque
		16.2 关联式容器
			16.2.1 set
			16.2.2 map
			16.2.3 multiset
			16.2.4 multimap
			16.2.5 hash_set
			16.2.6 hash_map
			16.2.7 hash_multiset
			16.2.8 hash_multimap
		16.3 Container Adapters
			16.3.1 stack
			16.3.2 queue
			16.3.3 priority_queue
附录A 可移植性与标准化
	A.1 语言上的变动 
		A.1.1 Template编译模型
		A.1.2 带缺省值的Template参数
		A.1.3 Member Template
		A.1.4 偏特化
		A.1.5 新加入的关键字
	A.2 程序库的变动 
		A.2.1 Allocator
		A.2.2 Container Adapters
		A.2.3 次要的程序库变动 
	A.3 命名及包装
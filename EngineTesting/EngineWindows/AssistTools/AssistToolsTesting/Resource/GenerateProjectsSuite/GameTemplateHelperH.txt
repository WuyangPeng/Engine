// Threading Core Render Engine
// ◊˜’ﬂ£∫≈ÌŒ‰—Ù£¨≈ÌÍ ∂˜£¨≈ÌÍ ‘Û
// Copyright (c) 2011-%EndYear%
//
// %ProjectChineseName%∞Ê±æ£∫%Versions% (%Date% %Hour%:%Minute%)

#ifndef %ProjectCapital%_%ProjectCapital%_HELPER_H
#define %ProjectCapital%_%ProjectCapital%_HELPER_H

#include "Framework/MainFunctionHelper/WindowMainFunctionHelper.h"
#include "Framework/WindowsAPIFrame/WindowsAPIFrameBuild.h"
#include "Framework/WindowProcess/WindowProcess.h"
#include "%SolutionName%Message.h"

namespace %SolutionName%
{
	typedef Framework::WindowMainFunctionHelper<Framework::WindowsAPIFrameBuild,%SolutionName%MessageWindowProcessHandle>
			WindowMainFunctionHelperBase;

	class %SolutionName%Helper : public WindowMainFunctionHelperBase
	{
	public:
		typedef %SolutionName%Helper ClassType;		
		typedef WindowMainFunctionHelperBase ParentType;
		typedef Framework::WindowApplicationInformation WindowApplicationInformation;
		typedef Framework::EnvironmentDirectory EnvironmentDirectory;

	public:
		%SolutionName%Helper(HInstance instance,char* commandLine,const WindowApplicationInformation& information,const EnvironmentDirectory& environmentDirectory);
		virtual ~%SolutionName%Helper();
		
		CLASS_INVARIANT_VIRTUAL_DECLARE;	
	};
}

#endif // %ProjectCapital%_%ProjectCapital%_HELPER_H

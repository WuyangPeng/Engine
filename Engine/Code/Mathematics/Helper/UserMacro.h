// Copyright (c) 2011-2020
// Threading Core Render Engine
// 作者：彭武阳，彭晔恩，彭晔泽
// 
// 引擎版本：0.0.2.5 (2020/03/18 19:03)

#ifndef MATHEMATICS_HELPER_USER_MACRO_H
#define MATHEMATICS_HELPER_USER_MACRO_H

#include "System/Helper/ConfigMacro.h"
#include "CoreTools/Helper/UserMacro.h"

#define CLOSE_USE_EXPORT_TEMPLATE (0x01)
#define CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN (0x01 << 1) 
#define CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE (0x01 << 2) 
#define CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE (0x01 << 3) 
#define CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE (0x01 << 4) 
#define CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE (0x01 << 5) 
#define CLOSE_MATHEMATICS_MAX (((CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE) << 1) - 1)

// 编译测试（默认为0，最大值为0x3F）
#define COMPILE_MATHEMATICS_CLOSE 0x00

static_assert(0 <= COMPILE_MATHEMATICS_CLOSE, "COMPILE_MATHEMATICS_CLOSE Must be greater than or equal 0.");
static_assert(COMPILE_MATHEMATICS_CLOSE <= CLOSE_MATHEMATICS_MAX, "COMPILE_MATHEMATICS_CLOSE Must be less than or equal CLOSE_MATHEMATICS_MAX.");

// 是否编译为静态库
#ifdef BUILDING_STATIC
	#define  BUILDING_MATHEMATICS_STATIC
#endif // BUILDING_STATIC

#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_EXPORT_TEMPLATE) != CLOSE_USE_EXPORT_TEMPLATE
	#define MATHEMATICS_EXPORT_TEMPLATE
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_EXPORT_TEMPLATE) != CLOSE_USE_EXPORT_TEMPLATE   

#ifdef MATHEMATICS_EXPORT_TEMPLATE

	#define MATHEMATICS_TEMPLATE_DEFAULT_DECLARE MATHEMATICS_DEFAULT_DECLARE	

#else // !MATHEMATICS_EXPORT_TEMPLATE

	#define MATHEMATICS_TEMPLATE_DEFAULT_DECLARE	

#endif // MATHEMATICS_EXPORT_TEMPLATE 

// 如果希望Rational类在构造函数传递浮点无穷大或NaN时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN
	#define MATHEMATICS_ASSERT_ON_RATIONAL_CONVERT_NAN
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN) != CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN

// 如果希望Vector2D<Real>::GetBarycentrics在输入退化三角形时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE
	#define MATHEMATICS_ASSERT_ON_BARYCENTRIC2_DEGENERATE
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE

// 如果希望Vector3D<Real>::GetBarycentrics在输入退化四面体时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE
	#define MATHEMATICS_ASSERT_ON_BARYCENTRIC3_DEGENERATE
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE

// 如果要在VariableLengthVector<Real>中检查索引范围，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE
	#define MATHEMATICS_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE

// 如果要在VariableMatrix<Real>中检查索引范围，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE
	#define MATHEMATICS_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE
#endif // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE

#endif // MATHEMATICS_HELPER_USER_MACRO_H

网络多人游戏架构与编程 （Multiplayer Game Programming）

官方网站：
https://github.com/MultiplayerBook。

★★★
作者：Joshua Glazer、Sanjay Madhav
其他书籍：Sanjay Madhav 《游戏编程算法与技巧》。

知识点 
1.	网络多人游戏编程基础知识。 
2.	网络多人游戏编程基础习题。

代码

要点
1.	最好将IP包的数据限制在1300字节以内。（2.5.1.4 分片）
2.	通过以太网传输的末被分片的数据部分最多是1460字节，也被称为最大分段大小。（2.6.2.3 数据传输）

复习题
第1章 网络游戏概述
	1.	本地多人游戏和网络多人游戏的区别是什么？
		本地多人游戏与单人游戏的编程在很大程度上是相似的，唯一的典型差异是对多视点和多个输入设备的支持。
		网络多人游戏有两台或更多的计算机在一个活动的游戏传话中彼此连接。
	2.	本地网络连接的3种不同类型是什么？
		早期网络多人游戏、多用户网络游戏和局域网游戏。
	3.	将网络游戏的运行从局域网转换到互联网的主要考虑是什么？
		玩家通过一些大型网络将地理位置上有一定距离的计算机彼此连接起来。
	4.	MUD是什么？它发展为什么类型的游戏？
		多用户网络游戏，它发展成角色扮演类游戏。
	5.	MMO与标准在线游戏的区别是什么？
		大多数的多人在线游戏在每个游戏会话中仍然限制玩家的数量，然而，
		在MMO中，成百上千的玩家将同时出现在同一个游戏会话中。
	6.	在《星际围攻：部落》模型中，哪个系统来提供可靠性？
		事件管理器。
	7.	描述一下，当数据包丢失时，《星际围攻：部落》网络模型中的ghost管理器如何重建最小必要的传输。
		一旦ghost管理器决定了要传输哪些对象，它们的数据将会被添加到出站数据包中。
	8.	在《帝国时代》的点对点模型中，轮班计时器的目的是什么？每个节点传送什么信息到其他节点？
		轮班计时器的目的是什么：不同的玩家运行游戏采用不同的帧速率，同时不同玩家的网络连接质量也不一样。
		每个节点传送什么信息到其他节点：每个玩家的命令。
第2章 互联网
	1.	列出TCP/IP模型的5层并简要描述每一层。在一些模型中，哪一层被认为不是单独的一层？
		物理层：物理层提供信号传输的媒介。
		链路层：链路层提供互联主机之间的通信。
		网络层：网络层的数据链路层的硬件地址之上提供逻辑地址系统，允许不同数据链路层网络的主机之间的通信。
		传输层：传输层提供远处主机进程之间端到端的通信。
		应用层：包括DHCP协议、DNS协议和游戏代码。
		在一些模型中，物理层被认为不是单独的一层。
	2.	为什么使用ARP协议？它是如何工作的？
		链路层需要一些方法来找出IP地址所对应的MAC地址。
		当网络层需要使用链路层向一台主机发送数据包时，首先查询ARP对应表获取目录IP地址所以应的MAC地址。
		如果表中没有找到映射，那么ARP模块通过给链路层网络中所有可达的主机发送ARP报文，来获得对应MAC地址。
	3.	解释一下有多个网卡的主机（如路由器）是如何在不同子网之间路由数据包的。
		见2.5.1.3 子网和间接路由。
	4.	MTU代表什么？它是什么意思？以太网的MTU是什么？
		MTU代表一次传输中所能传递数据的最大容量，称为最大输出单元。
		以太网标准规定帧内封装的报文数据最大长度为1500字节。
	5.	解释一下包分片是如何工作的。假设数据链路层的MTU是400，
		举一个需要分成两帧的数据包头部的例子，分片后这两帧的头部是什么？
		见2.5.1.4 分片。
	6.	避免IP分片有什么好外？
		（1）增加了网络上发送的数据量。
		（2）如果一个分片数据包在传输中丢失了，那么接收方必须丢弃整个数据包。
	7.	不使用分片技术，发送尽可能大的数据包的好处是什么？
		（1）增加了网络上发送的数据量。
		（2）如果一个分片数据包在传输中丢失了，那么接收方必须丢弃整个数据包。
	8.	不可靠的数据传输和可靠的数据传输有什么区别？
		可靠的数据传输保证所有的数据都按序抵达接收方。
	9.	描述一下建立连接时TCP握手的流程。交换了什么重要的数据？
		见2.6.2.2 三次握手。
	10.	描述一下TCP是如何做到可靠数据传输的。
		见2.6.2.3 数据传输。
	11.	公开可路由的IP地址和本地可路由的IP地址的区别是什么？
		互联网上的公开路由器都没有如何到达本地IP地址的路由信息，
		所以多个本地网络内部使用相同的本地IP地址是没关系的。
	12.	NAT是什么？使用NAT有哪些好处，有哪些开销？
		见2.8 NAT。
	13.	解释一下客户端是如何使用NAT向公开可路由的服务器发送数据包并收到响应数据包的。
		见2.8 NAT。
	14.	STUN是什么？为什么需要STUN？它是如何工作的？
		见2.8 NAT的NAT 穿越。

第1章 网络游戏概述
	★	数据类型：
	1.	非保障数据。
	2.	保障数据。
	3.	最近的状态数据。
	4.	最快保障数据。
第2章 互联网
	★	分组交换：它取消了电路一个时刻专用于一个传输的限制，提供更高的可用性。
		它的实现是将传输的信息拆分成小块，称为分组，基于一种叫作存储转发的技术将它们发送到共享的线路中。
	★	五层网络模型：物理层、链路层、网络层、传输层和应用层。每层的职责包括：
		1.	接收上一层数据。
		2.	通过添加头部，有时尾部，对数据进行封装。
		3.	接收下一层传输来的数据。
		4.	去掉报头，解封装传输来的数据包。
		5.	将数据转发到上一层做进一步处理。
	★	物理层：
		物理层为网络中的计算机或主机提供物理连接。信息传输所必需的是物理介质。
	★	链路层：
		它的任务是提供一种网络实体之间通信的方法。
		链路层必须提供一种方法，该方法可以实现源主机封装信息、通过物理层传输信息、
		目的主机接收封装好的信息并从中提取所需的信息。
	★	链路层的数据传输单元称为帧：实体之间通过链路层彼此发送帧数据。链路层的职责包括：
		1.	定义主机的唯一标识方法，方便帧数据对接收方进行编址。
		2.	定义帧的格式，包括目的地址的格式和所传输数据的格式。
		3.	定义帧的长短，以便确定上层每一次传输所能发送的数据大小。
		4.	定义一种将帧转换为电子信号的物理方法，以便数据可以通过物理层传输，并被接收方接收。
	★	帧的传输是不可靠的。
	★	链路层不做任何操作来确认帧是否抵达接收方或者保证如果帧没有抵达重新发送。
		因此，链路层的通信是不可靠的。任何需要可靠数据传输的上层协议都必须自己来实现这一点。
	★	对于每种被选择作为物理层实现的物理介质，都有对应的协议或协议族来提供链路层所需的服务。
	★	两个远距离的主机之间的网络连接不会仅仅使用一种物理介质和一种链路层协议。
	★	为了给每台主机一个唯一标识，以太网引入了介质访问控制地址的概念，也就是MAC地址。
	★	MAC地址中的前24比特叫作组织唯一标识符，是由IEEE给厂家分配的唯一代码。
		后24比特是由厂家自己分配的，来保证所生产的硬件是唯一标识的。
	★	以太网链路层帧的格式：
		（0-7）前导序列和帧开始标志：0x55 0x55 0x55 0x55 0x55 0x55 0x55 0xD5
		（8-13）目的地址：帧接收方的MAC地址。FF:FF:FF:FF:FF:FF称为广播地址。
				表示同时向局域网中的所有主机都发送该帧。
		（14-19）源地址。
		（20-21）帧长度/类型域：值小于等于1500，它表示帧长度。
								如果取值大于等于1536，它表示协议类型。
		（22-？）数据（46-1500字节）。帧内封装的报文数据。
									  通常这是一个网络层数据包，通过在链路层交付到适当的主机。
		帧检验序列：是由两个地址域、帧长度/类型域、数据域和其他填充信息生成的循环冗余检验值。
	★	链路层的不足：
		1.	烧在硬件中的MAC地址限制了硬件的灵活性。
		2.	链路层不支持将互联网划分成更小的局域网络。
		3.	链路层不支持使用不同的链路层协议进行主机之间的通信。
	★	IPv4数据包的结构：
		（0-3）版本号：对于IPv4，该取值为4。
		（4-7）包头长度：描述IP包头的长度，以32比特为单位。
						 因为在IP数据包的包头中有变长的可选部分，所以IP数据包的包头长度是可变的。
		（8-15）服务类型：用于从拥塞控制到差异化服务识别的各种目的。
		（16-31）IP数据包的包总长：以字节为单位计算IP数据包的长度，包括头部和数据。
		（32-63）片标识符（16比特）、片标记（3比特）、片偏移（13比特）。
		（64-71）生存时间，用于限制数据包转发的次数。
		（72-79）标识用于解释数据内容所用的协议。
		（80-95）用于IPv4头部正确性的检测。
		（96-127）源地址：数据包发送方的IP地址。
		（128-159）目标地址：既可以是数据包接收方的IP地址，也可以是发送给多台主机的特殊地址。
		（160-？）可选项。
	★	链路层协议需要一些方法来找出IP地址所对应的MAC地址：
		有一个链路层协议提供了这样一种方法，即地址解析协议（ARP）。
	★	ARP报文格式：
		（0-1）硬件类型：指明了链路层所使用的硬件接口类型，以太网的取值为1。
		（2-3）协议类型：指明了正在使用的网络层协议所对应的以太网类型值。IPv4是0x0800。
		（4）硬件地址长度：指明了以字节为单位的链路层硬件地址长度。
						   在大部分情况下，该取值为MAC地址长度，即6。
		（5）IP地址长度：指明了以字节为单位的网络层协议逻辑地址长度。
						 对于IPv4，该取值为IP地址的长度，即4。
		（6-7）操作类型，取值是1或者2，表示报文是信息请示还是响应。
		发送方硬件地址：长度可变，是报文发送方的硬件地址。
		发送方IP地址：长度可度，是报文发送方的网络层地址。
		目标硬件地址和目标IP地址：均为长度可变，是报文接收方的硬件地址和IP地址。
								  如果报文类型是请示，那么目标硬件地址是未知的，被接收方忽略。
	★	子网掩码：
		是一个32比特数，如果主机的IP地址与子网掩码做按位与运算得到结果相同，那么这些主机在同一个子网中。
	★	网络层的任务是实现远程网络上两台遥远主机之间的通信，而传输层的任务是实现这些主机上单独进程之间的通信。
	★	端口是16比特的无符号数，是一台特定主机的通信端点。
	★	端口号1024-49151称为用户端口或注册端口。
	★	端口号0到1023称为系统端口或预留端口。
	★	端口49152到65535称为动态端口。
	★	用户数据报协议（UDP）是一个轻量级的协议 ，封装数据并将其从一台主机的一个端口发送到另一台主机的一个端口。
		UDP数据报包含一个8字节的报头，后面跟着数据。
	★	UDP报头：
		1.	源端口号（16比特）标识数据发送方将UDP数据报发送出去的端口。
		2.	目标端口号（16比特）是数据报的目标端口。
		3.	数据报长度（16比特）指包括报头和数据部分在内的总字节数。
		4.	检验和（16比特）由UDP报头、数据部分和IP头的某些域计算得到。它是一个可选项。
	★	传输控制协议（TCP）是在两台主机之间创建持久性的连接，提供可靠数据流传输。
	★	TCP保证所有的数据都按序抵达招收方。
	★	应用层：
		1.	DHCP：动态主机配置协议通过允许主机在接入网络时请示自动配置信息来解决。
		2.	DNS：域名系统协议 能够将域名和子域名翻译为IP地址。
		3.	NAT：如果一个IP地址被称为公开可路由的，互联网上任意正确配置的路由器都可以给这个IP地址所在的主机发送数据包。
第3章 伯克利套接字

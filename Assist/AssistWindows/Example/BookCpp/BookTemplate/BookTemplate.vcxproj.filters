<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="源文件">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="头文件">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>
    </Filter>
    <Filter Include="资源文件">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
    <Filter Include="资源文件\Todo">
      <UniqueIdentifier>{b1cce216-4d14-4cee-a90d-a5a51450327a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book">
      <UniqueIdentifier>{860110d9-3202-4aec-8515-355f3c4ba891}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates">
      <UniqueIdentifier>{2bde2233-d667-4cac-bc02-5073de689dcc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）">
      <UniqueIdentifier>{ea0dab6d-6250-4132-9aa3-ee229530746b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Placeholder 源文件">
      <UniqueIdentifier>{95328f86-18c2-4648-b27d-b29eb7574048}</UniqueIdentifier>
    </Filter>
    <Filter Include="Placeholder 头文件">
      <UniqueIdentifier>{e2f96ccf-577c-4ec6-a6f7-9b14a04a5eb2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Helper 头文件">
      <UniqueIdentifier>{21cae860-9443-4c8d-8f31-95e91d773a42}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言">
      <UniqueIdentifier>{15c39b19-76a6-4373-9a3f-e7cb3f296c46}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言\0.1 序">
      <UniqueIdentifier>{0b35c9de-59c1-45c7-91a0-7b1f77a84f4e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言\0.2 致谢">
      <UniqueIdentifier>{c2ef0769-00fd-4a0f-b544-37c6d0be9f6d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言\0.2 致谢\0.2.0">
      <UniqueIdentifier>{f9e4d648-a5d1-4676-adda-311d4b1dfe5c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言\0.2 致谢\0.2.1 Noco的致谢">
      <UniqueIdentifier>{fe22d25b-d4ad-4a55-9f9c-9c8d25fc42b4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\0. 前言\0.2 致谢\0.2.2 David的致谢">
      <UniqueIdentifier>{6ae33726-a7d1-4a5c-955b-30b3933e758e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础">
      <UniqueIdentifier>{1ab87060-a9ba-4c41-8e60-6c1405bdf401}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章">
      <UniqueIdentifier>{ed6165fd-7f7e-45cd-8467-01a80f1bf27f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.1 阅读本书所需具备的知识">
      <UniqueIdentifier>{93872099-6a60-402a-a31d-3276621ecab9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.2 本书的整体结构">
      <UniqueIdentifier>{fa4cdb7d-49e5-443d-8fa8-dbae05ae6250}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.3 如何阅读本书">
      <UniqueIdentifier>{a2c4e8ba-8a04-4f77-8bb7-551cb6b92908}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.4 关于编程风格的一些说明">
      <UniqueIdentifier>{564212ea-2506-40de-8974-fd188cd6bc5d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.5 标准和现实">
      <UniqueIdentifier>{e64a2e17-5382-4bd4-95b7-c8fa6501bb83}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.6 代码例子和更多信息">
      <UniqueIdentifier>{08d2f5ab-499c-4185-b046-f95871e6db4f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\1. 第1章 关于本章\1.7 反馈">
      <UniqueIdentifier>{84d55bef-51ab-446b-b2d5-dfad173e165c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板">
      <UniqueIdentifier>{eda1c103-b6e1-45b4-b932-c4d8c40c5c9f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.1 初探函数模板">
      <UniqueIdentifier>{9a7e730f-38d3-4708-a048-bb6f39a9b210}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.1 初探函数模板\2.1.1 定义模板">
      <UniqueIdentifier>{4a9fb364-5872-4c3e-91e4-293f6a4b377e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.1 初探函数模板\2.1.2 使用模板">
      <UniqueIdentifier>{f1552e44-86f2-420e-89f2-307ce90e8de8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.2 实参的演绎%28deduction%29">
      <UniqueIdentifier>{747b4f94-6e0e-497d-bef6-aa37c371ec97}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.3 模板参数">
      <UniqueIdentifier>{6a1c0266-6370-45bf-a2a0-8a1b35223cb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.4 重载函数模板">
      <UniqueIdentifier>{388dbed2-972d-49fd-8ed8-7193cd2f0fd8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第2章 函数模板\2.5 小结">
      <UniqueIdentifier>{952a4070-4ed3-49a1-97fe-4bc649f4f67f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板">
      <UniqueIdentifier>{dbe25b1f-1009-4a16-a130-7da0c2b59bda}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.1 类模板Stack的实现">
      <UniqueIdentifier>{ae4076ca-9a81-4678-bb56-b6d77fa8518f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.1 类模板Stack的实现\3.1.1 类模板的声明">
      <UniqueIdentifier>{65e7bb3d-e9b4-4744-a97f-175da35ad73e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.1 类模板Stack的实现\3.1.2 成员函数的实现">
      <UniqueIdentifier>{b1548ee0-6726-474d-9b14-7ef375a0ba48}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.2 类模板Stack的使用">
      <UniqueIdentifier>{64fa367b-4243-4637-82f9-7527fa0e0262}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.3 类模板的特化">
      <UniqueIdentifier>{7bf077b5-f933-4499-8036-161d743d414a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.4 局部特化">
      <UniqueIdentifier>{4927292b-3d3d-40ea-967c-5b724c9c5bc1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.5 缺省模板实参">
      <UniqueIdentifier>{4af80052-6611-42dd-a1ee-91dee0823cfc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第3章 类模板\3.6 小结">
      <UniqueIdentifier>{e000221a-f897-4134-ba9c-a84864a0cd2a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第4章 非类型模板参数">
      <UniqueIdentifier>{2f8997a8-92ac-4f3d-8d7d-6f902fd76172}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第4章 非类型模板参数\4.1 非类型的类模板参数">
      <UniqueIdentifier>{14bfc906-1415-4ec8-9519-137dedf17ec4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第4章 非类型模板参数\4.2 非类型的函数模板参数">
      <UniqueIdentifier>{3115df1f-4c84-4dc3-8682-6d264e65e71a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第4章 非类型模板参数\4.3 非类型模板参数的限制">
      <UniqueIdentifier>{9e0c98fe-d111-4a39-9d7c-8350267ab752}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第4章 非类型模板参数\4.4 小结">
      <UniqueIdentifier>{70040551-2382-4a61-890e-95ef272595fa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识">
      <UniqueIdentifier>{2dfa5646-eb2e-4f3f-8a26-f84f1bf5b9b5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.1 关键字typename">
      <UniqueIdentifier>{58ba8484-11b1-4d49-8e82-6792ea4ccaf5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.2 使用this-&gt;">
      <UniqueIdentifier>{f714ab0c-37ec-4c80-a181-2272c5515445}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.3 成员模板">
      <UniqueIdentifier>{cca8b368-1997-430b-af36-c4641257dd15}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.4 模板的模板参数">
      <UniqueIdentifier>{c7a7dd00-ca53-43f0-a50a-02feadd645b8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.5 零初始化">
      <UniqueIdentifier>{a3a0a76b-b5c9-40fa-b2ab-29d250db9905}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.6 使用字符串作为函数模板的实参">
      <UniqueIdentifier>{4e55b107-2f4e-470c-8637-6011fa6db85e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第5章 技巧性基础知识\5.7 小结">
      <UniqueIdentifier>{89bc1092-8f43-4d90-81ba-c67e6d10b60f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战">
      <UniqueIdentifier>{2439c64f-07b2-4c28-9108-5b1f368006e5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.1 包含模型">
      <UniqueIdentifier>{ddfb14b3-a854-4d62-86eb-5602cbbeeb80}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.1 包含模型\6.1.1 链接器错误">
      <UniqueIdentifier>{64f00919-688f-4c21-915b-212996bfc73c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.1 包含模型\6.1.2 头文件中的模板">
      <UniqueIdentifier>{5bea5da4-271d-4aa4-9d52-7d76563bbeeb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.2 显式实例化">
      <UniqueIdentifier>{75c1666d-9b3a-4ebe-9fa3-31911249560d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.2 显式实例化\6.2.1 显式实例化的例子">
      <UniqueIdentifier>{bc8beba8-9208-40fd-a77b-b569f7d2583c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.2 显式实例化\6.2.2 整合包含模型和显式实例化">
      <UniqueIdentifier>{cff00ba3-e40b-486b-b3bb-1e44d87c4519}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.3 分离模型">
      <UniqueIdentifier>{6db1a51e-09bc-41f5-ae2b-1a64bea081c4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.3 分离模型\6.3.1 关键字export">
      <UniqueIdentifier>{263bbfde-bec7-4106-8b74-a94f0064fc11}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.3 分离模型\6.3.2 分离模型的限制">
      <UniqueIdentifier>{15fb168c-41b1-4b86-833e-ed9ca525091f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.3 分离模型\6.3.3 为分离模型做好准备">
      <UniqueIdentifier>{ec7512a3-8296-4601-9a51-d44609fe9b25}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.4 模板和内联">
      <UniqueIdentifier>{5587717a-442b-4350-b2a4-9d8db6e75d1e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.5 预编译头文件">
      <UniqueIdentifier>{2acb54ee-45a8-4d4e-824c-2f47b219d8f9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板">
      <UniqueIdentifier>{564e8304-3d79-4f0e-8239-a682f4e60068}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.1 理解长段的错误信息">
      <UniqueIdentifier>{27097b86-4c4e-4781-9556-5b56463a95b6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.2 浅式实例化">
      <UniqueIdentifier>{36508c1d-2889-4bdb-beb1-a42b9fd894fc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.3 长符号串">
      <UniqueIdentifier>{f2042011-01f2-43ad-ba2c-fd9ad1f0e304}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.4 跟踪程序">
      <UniqueIdentifier>{505735c5-2aaa-468d-8a64-5789ad8fb8cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.5 oracles">
      <UniqueIdentifier>{cd68fa50-f733-4859-aa6a-2acb9a294be3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.6 调试模板\6.6.6 archetypes">
      <UniqueIdentifier>{ab307863-950c-42be-acd6-08508fa3a811}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.7 本章后记">
      <UniqueIdentifier>{2bad5454-e353-479b-b253-333b46bcfe07}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第6章 模板实战\6.8 小结">
      <UniqueIdentifier>{f2f59555-0899-4201-bb14-348593b63ca4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语">
      <UniqueIdentifier>{f5171149-97ab-44ea-a2b7-036423fe66bf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语\7.1 &quot;类模板&quot;还是&quot;模板类&quot;">
      <UniqueIdentifier>{e6f4b2cc-5f43-4ff6-827e-1d5ff14aa848}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语\7.2 实例化和特化">
      <UniqueIdentifier>{1c134def-4ea7-4787-a1a8-94bf11b4ce47}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语\7.3 声明和定义">
      <UniqueIdentifier>{7093ba66-223f-4c7b-a94c-b175d02a1612}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语\7.4 一处定义原则">
      <UniqueIdentifier>{040fa487-7eff-4fa1-ad57-52ecff5e54f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第1部分 基础\第7章 模板术语\7.5 模板实参和模板参数">
      <UniqueIdentifier>{f4025527-fa92-4cae-a4ca-8ead0958158e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板">
      <UniqueIdentifier>{0fb134f2-c5eb-416c-ab33-7e747b5765fc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础">
      <UniqueIdentifier>{e35b7fcb-026a-4570-8f32-dbb29ac86037}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.1 参数化声明">
      <UniqueIdentifier>{dbcef7f2-836e-4fc9-9d91-16f835c5a2cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.1 参数化声明\8.1.1 虚成员函数">
      <UniqueIdentifier>{b22ee1d3-0e19-4ce0-a65f-738a7851d9c6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.1 参数化声明\8.1.2 模板的链接">
      <UniqueIdentifier>{e57543d2-6486-494a-acae-7c87b11b70c1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.1 参数化声明\8.1.3 基本模板">
      <UniqueIdentifier>{05b104d7-fa43-45f2-97e9-53912dc15c19}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.2 模板参数">
      <UniqueIdentifier>{f73c1770-9676-451c-be7c-e472fc035ddb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.2 模板参数\8.2.1 类型参数">
      <UniqueIdentifier>{96551eee-1b2e-4de9-a82e-fe7440c1393e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.2 模板参数\8.2.2 非类型参数">
      <UniqueIdentifier>{5280dde1-c992-4761-92d3-5de64cabb900}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.2 模板参数\8.2.3 模板的模板参数">
      <UniqueIdentifier>{fc0a5d05-ebb5-48ab-becd-ddc686e2a01c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.2 模板参数\8.2.4 缺省模板实参">
      <UniqueIdentifier>{1a57f1b0-1675-43a8-88c0-fefdb5f8ec50}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参">
      <UniqueIdentifier>{18a475a7-3e1b-4b35-b42a-ed77e10c5be2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参\8.3.1 函数模板实参">
      <UniqueIdentifier>{c6568d7d-9f22-4842-b1ac-862cc311002c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参\8.3.2 类型实参">
      <UniqueIdentifier>{c7ec4fbc-9589-4bea-ae85-bc16b85d1bf1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参\8.3.3 非类型实参">
      <UniqueIdentifier>{d8b05cbd-6cf5-42b6-ae79-08cb635f78e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参\8.3.4 模板的模板实参">
      <UniqueIdentifier>{f2c52b93-1e6b-46af-b78e-bef2086de964}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.3 模板实参\8.3.5 实参的等价性">
      <UniqueIdentifier>{b32a953c-b6b0-4c31-9d8c-ce464438d59b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.4 友元">
      <UniqueIdentifier>{93187f49-244b-45ee-b484-67b85770adef}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.4 友元\8.4.1 友元函数">
      <UniqueIdentifier>{c3d3e75f-e2c2-4387-a095-a5e2fba83178}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.4 友元\8.4.2 友元模板">
      <UniqueIdentifier>{dca23083-11aa-4908-be86-0728d6637712}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第8章 深入模板基础\8.5 本章后记">
      <UniqueIdentifier>{14bc8232-c74d-4b8d-8fa1-a8bcd26658fd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称">
      <UniqueIdentifier>{d6aa5423-32b1-46f9-9b5c-26c20b1c1f40}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.1 名称的分类">
      <UniqueIdentifier>{685c777a-6523-45f0-ac07-04f4acf12d54}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.2 名称查找">
      <UniqueIdentifier>{9fb25a9d-e7fc-4916-a6d1-e6d09752e389}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.2 名称查找\9.2.1 Argument-Dependent Lookup%28ADL%29">
      <UniqueIdentifier>{ec9165e7-9e3a-4f08-908a-dd93da0062e6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.2 名称查找\9.2.2 友元名称插入">
      <UniqueIdentifier>{3e9db244-c2eb-4640-83fb-b9d53bdfc3f8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.2 名称查找\9.2.3 插入式类名称">
      <UniqueIdentifier>{97fef193-2a1d-4874-8eb3-e24dcaf703a4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板">
      <UniqueIdentifier>{eab008c4-a3d4-4699-a359-cff36e19d980}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板\9.3.1 非模板中的上下文相关性">
      <UniqueIdentifier>{fd13fc6f-1105-49fa-8c46-a8a6a860ce8b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板\9.3.2 依赖型类型名称">
      <UniqueIdentifier>{6cd8a135-58ae-48e2-a849-ec6d3400151d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板\9.3.3 依赖型模板名称">
      <UniqueIdentifier>{93fd6ed0-74b6-4a6f-81bd-91d7c47d3cfc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板\9.3.4 using-declaration中的依赖型名称">
      <UniqueIdentifier>{dbb5e9bb-f919-4299-943e-f42822be11bb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.3 解析模板\9.3.5 ADL和显式模板实参">
      <UniqueIdentifier>{92b369c4-96ac-4b65-811a-b163238010a5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.4 派生和类模板">
      <UniqueIdentifier>{c0fd841d-41b7-404e-a964-1bc5c1e227f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.4 派生和类模板\9.4.1 非依赖型基类">
      <UniqueIdentifier>{8737ef4d-f8fe-4baa-b14f-18f266d723c4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.4 派生和类模板\9.4.2 依赖型基类">
      <UniqueIdentifier>{695cf896-b413-40a6-8a54-a9487b5456a9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第9章 模板中的名称\9.5 本章后记">
      <UniqueIdentifier>{d4fe23c8-45ea-42a5-a831-15b32cf8b630}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化">
      <UniqueIdentifier>{874a9299-0f44-433f-a0b5-62421c64af6a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.1 On-Demand实例化">
      <UniqueIdentifier>{803c3c47-0542-4181-b22f-0f840422a450}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.2 延迟实例化">
      <UniqueIdentifier>{961c9608-3f22-40bb-ad2f-9abbb9122f20}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型">
      <UniqueIdentifier>{ebe269a7-47f1-44f8-8e36-293c1310e7e5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型\10.3.1 两阶段查找">
      <UniqueIdentifier>{6cdb00e2-a760-40b7-a793-c9d7b29412d3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型\10.3.2 POI">
      <UniqueIdentifier>{f659e654-3ca1-4913-9001-9e142f62d6cc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型\10.3.3 包含模型与分离模型">
      <UniqueIdentifier>{882d8d79-6514-48cf-8eb8-ff05c1c9ecae}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型\10.3.4 跨翻译单元查找">
      <UniqueIdentifier>{684878b4-4fe6-49b2-9714-a03e00f4327c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.3 C++的实例化模型\10.3.5 例子">
      <UniqueIdentifier>{8c94f571-a001-4e7c-ba39-093516d63715}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.4 几种实现方案">
      <UniqueIdentifier>{ad697fc0-606a-46f0-b8d4-99f2c44fb693}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.4 几种实现方案\10.4.1 贪婪实例化">
      <UniqueIdentifier>{7b947d6d-d800-496c-a7fe-2efa21f98e28}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.4 几种实现方案\10.4.2 询问实例化">
      <UniqueIdentifier>{8e710670-0d4f-415e-acad-3d2e5876a8b0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.4 几种实现方案\10.4.3 迭代实例化">
      <UniqueIdentifier>{4de359ec-4929-4592-b8af-b1bc673b9d45}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.5 显式实例化">
      <UniqueIdentifier>{8044624b-25e0-43a3-b36c-8ea352ba3f1f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第10章 实例化\10.6 本章后记">
      <UniqueIdentifier>{bb416955-6730-44bc-a73a-ce0019a8c8a1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译">
      <UniqueIdentifier>{9316372f-fa60-4978-b4bf-d372e5843297}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.1 演绎的过程">
      <UniqueIdentifier>{03de0f46-346b-4c7d-9ec4-c1157ed3816c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.2 演绎的上下文">
      <UniqueIdentifier>{f829ab1f-dc85-4648-935d-514fced32965}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.3 特殊的演绎情况">
      <UniqueIdentifier>{7541a318-9b4a-4680-88a0-ce0fb92a8cee}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.4 可接受的实参转型">
      <UniqueIdentifier>{560273fe-7a33-4f0d-82f1-c36c135290a3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.5 类模板参数">
      <UniqueIdentifier>{db0beec7-7bb6-4921-b3ff-7be60f004583}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.6 缺省调用实参">
      <UniqueIdentifier>{651171d3-9e97-44b4-abc5-4d464533a9e0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.7 Barton-Nackman方法">
      <UniqueIdentifier>{bb18d308-0e09-456a-af1c-6561af2b6914}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第11章 模板实参演译\11.8 本章后记">
      <UniqueIdentifier>{a795e3d7-25a4-4ce3-bb54-436d73473068}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载">
      <UniqueIdentifier>{c385f448-b834-41c0-a732-2e84a0193497}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.1 当泛型代码不再适用的时候">
      <UniqueIdentifier>{93e8b229-10bb-4707-a06f-361b626f5d79}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.1 当泛型代码不再适用的时候\12.1.1 透明自定义">
      <UniqueIdentifier>{54fb85eb-03c7-46c2-bfce-b8405e0cd42a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.1 当泛型代码不再适用的时候\12.1.2 语义的透明性">
      <UniqueIdentifier>{f74764ea-8b7d-4148-890e-b4d71740f801}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.2 重载函数模板">
      <UniqueIdentifier>{f863e0b6-9800-4762-bc61-92cdec853b7c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.2 重载函数模板\12.2.1 签名">
      <UniqueIdentifier>{5731bab7-1fdf-46a0-958e-0aab399d0e87}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.2 重载函数模板\12.2.2 重载的函数模板的局部排序">
      <UniqueIdentifier>{bb83b590-6c8f-493a-a204-29f52fff6a3d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.2 重载函数模板\12.2.3 正式的排序原则">
      <UniqueIdentifier>{66203b7a-da60-410e-b1c7-c525fc4b5fa3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.2 重载函数模板\12.2.4 模板和非模板">
      <UniqueIdentifier>{315f9689-1ffd-4add-975b-631b2f90d46c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.3 显式特化">
      <UniqueIdentifier>{babcc632-381d-48ac-9f98-57937f54f06c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.3 显式特化\12.3.1 全局的类模板特化">
      <UniqueIdentifier>{673bf16c-2f69-4205-bbda-a5f2a4880587}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.3 显式特化\12.3.2 全局的函数模板特化">
      <UniqueIdentifier>{5ecaad9b-dfc9-4da0-a167-bbf9521da87d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.3 显式特化\12.3.3 全局成员特化">
      <UniqueIdentifier>{10af8b5c-e8b4-4db5-aad3-4217d2dd7cc7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.4 局部的类模板特化">
      <UniqueIdentifier>{46681e4d-7323-48f3-abec-f77bba603def}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第12章 特化与重载\12.5 本章后记">
      <UniqueIdentifier>{8e581906-6ad6-40f0-8aa4-a57f3d413b56}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向">
      <UniqueIdentifier>{f52fa93b-6826-4827-8916-44d6a25ff842}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.1 尖括号Hack">
      <UniqueIdentifier>{ec02401a-51bf-4ea7-a7ed-2c86aefd7ae6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.2 放松typename的原则">
      <UniqueIdentifier>{c6ec9cc5-0384-4a11-9fa3-b00be3903884}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.3 缺省函数模板实参">
      <UniqueIdentifier>{4eede037-a7cb-414c-84c1-5b8106634d67}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.4 字符串文字和浮点型模板实参">
      <UniqueIdentifier>{4984ce4d-bd98-4429-8705-4dbe68e04855}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.5 放松模板的模板参数的匹配">
      <UniqueIdentifier>{82cdcac7-09a8-4031-897c-ab63ccee15e2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.6 typedef模板">
      <UniqueIdentifier>{159729ae-4c5a-45f1-8039-de4b6891fab1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.7 函数模板的局部特化">
      <UniqueIdentifier>{ed080406-bdef-4b64-8c17-9057248e56af}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.8 typeof运算符">
      <UniqueIdentifier>{826f6fac-380d-4af3-8233-39da3d7cb4e4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.9 命名模板实参">
      <UniqueIdentifier>{104a4c46-6c10-47e8-b441-b804d25e581a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.10 静态属性">
      <UniqueIdentifier>{dbd74e32-50a2-427a-b179-3fdc99f64fb6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.11 客户端的实例化诊断信息">
      <UniqueIdentifier>{f36d081e-2a72-4308-86ee-eb1fc95685d0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.12 重载类模板">
      <UniqueIdentifier>{026125c9-aeaf-467c-8130-4896b4547b18}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.13 List参数">
      <UniqueIdentifier>{2ae6472c-d6d1-457e-8be3-33412314870d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.14 布局控制">
      <UniqueIdentifier>{2d6ce025-899a-475e-b2c2-d1cb897c8f0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.15 初始化器的演绎">
      <UniqueIdentifier>{35786726-c632-4482-b75f-b003d31a0a8d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.16 函数表达式">
      <UniqueIdentifier>{7b85accd-1d52-49d9-ad90-2828bb858df9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第2部分 深入模板\第13章 未来的方向\13.17 本章后记">
      <UniqueIdentifier>{9287c2cf-b966-41fa-a66a-83fff67cc303}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计">
      <UniqueIdentifier>{ac360b17-2076-4e1e-b7dc-3e4a04c61a82}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力">
      <UniqueIdentifier>{ea420ec3-17fa-4b98-b9dc-bfe106f7d2c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.1 动多态">
      <UniqueIdentifier>{773125cb-d3f1-4604-b9d3-27fb89fb7ed7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.2 静多态">
      <UniqueIdentifier>{4409b466-e647-4a53-a1ca-e26949300236}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.3 动多态和静多态">
      <UniqueIdentifier>{ae293fff-f42c-45d8-925e-cb52f37dba63}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.3 动多态和静多态\14.3.1 术语">
      <UniqueIdentifier>{9447e8db-86e2-4a1d-9727-999fbfca5aab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.3 动多态和静多态\14.3.2 优点和缺点">
      <UniqueIdentifier>{c5e2dd7b-45fc-4cdb-82b4-5b0af6f6e962}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.3 动多态和静多态\14.3.3 组合这两种多态">
      <UniqueIdentifier>{ec324e82-b293-4a73-9a4d-6f44e3732935}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.4 新形式的设计模板">
      <UniqueIdentifier>{cdb05f64-5d1c-45d2-927e-11ff54881b79}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.5 泛型程序设计">
      <UniqueIdentifier>{04fefaa3-88b3-4a69-bd9c-c51b1073d3fe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第14章 模板的多态威力\14.6 本章后记">
      <UniqueIdentifier>{b48e5cb2-4c10-4101-94de-1a23fd04451f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类">
      <UniqueIdentifier>{42bd431d-9940-4628-88b2-8b10af7e4967}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.1 动多态">
      <UniqueIdentifier>{c6522c60-3f01-4332-8b9a-d34189ac1029}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.2 静多态">
      <UniqueIdentifier>{8fa8554c-ea84-45e0-bbfd-4ee10cee7a4a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.3 动多态和静多态">
      <UniqueIdentifier>{91a82e79-614c-457e-bc69-d51170460d98}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.3 动多态和静多态\14.3.1 术语">
      <UniqueIdentifier>{2acf4145-7a72-4d92-a675-5b3e5b0aef1d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.3 动多态和静多态\14.3.2 优点和缺点">
      <UniqueIdentifier>{d48e180e-6e26-46af-b3f7-ada1fd0081f7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.3 动多态和静多态\14.3.3 组合这两种多态">
      <UniqueIdentifier>{94bb0cd5-9c29-49c5-b068-dac586ff4bfe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.4 新形式的设计模板">
      <UniqueIdentifier>{7b70a140-7d5c-4eac-bfcf-3e30807780f4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.5 泛型程序设计">
      <UniqueIdentifier>{6849cdd2-7515-4ce3-b612-3ac7efec75da}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第15章 trait与policy类\14.6 本章后记">
      <UniqueIdentifier>{e4b21df9-c939-4228-9877-34e6e86b997e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承">
      <UniqueIdentifier>{eac4a79a-f0e0-4a33-a54a-f749d59f128b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.1 命名模板参数">
      <UniqueIdentifier>{96eca712-07cf-425f-8838-957efb006838}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.2 空基类优化">
      <UniqueIdentifier>{8e841d20-1dae-4b91-a055-ef922c0ce354}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.2 空基类优化\16.2.1 布局原则">
      <UniqueIdentifier>{57f424d7-5ad1-4153-9bd1-21886dc1e369}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.2 空基类优化\16.2.2 成员作基类">
      <UniqueIdentifier>{3b1c0141-4d41-4aa7-a231-3c1cbf63b054}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.3 奇特的递归模板模式">
      <UniqueIdentifier>{3d16bea4-3ba0-491d-a491-653cb4df51f2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.4 参数化虚拟性">
      <UniqueIdentifier>{92c5c5c7-7410-4c2b-98b1-cd6fa9ec8f88}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第16章 模板与继承\16.5 本章后记">
      <UniqueIdentifier>{4a00a842-2b91-42e1-b388-ff6deaea932b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram">
      <UniqueIdentifier>{7ba7c702-ae65-4270-8197-b2716b07c2c2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.1 metaprogram的第一个实例">
      <UniqueIdentifier>{1fbf4710-9cda-4ef3-918e-e5c76bbf9f2a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.2 枚举值和静态常量">
      <UniqueIdentifier>{dcf3beda-a92f-426b-aa87-f44b3c4c7920}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.3 第2个例子：计算平方根">
      <UniqueIdentifier>{89606da7-b85b-4bd0-b1b7-09d68d490584}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.4 使用归纳变量">
      <UniqueIdentifier>{1ca8bb78-84fd-4799-bed5-2a0b8d54b375}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.5 计算完整性">
      <UniqueIdentifier>{9134aeab-5b9f-4e0b-b664-285a72c57915}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.6 递归实例化和递归模板实参">
      <UniqueIdentifier>{60aa1283-5b92-41ae-9dfe-905af739359a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.7 使用metaprogram来展开循环">
      <UniqueIdentifier>{c8813cc4-119c-4a7b-a931-5cc604a8829d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第17章 metaprogram\17.8 本章后记">
      <UniqueIdentifier>{f052f3c8-db52-4421-8d28-2732314fefee}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板">
      <UniqueIdentifier>{84cb5ba1-5386-4500-b8d1-c8be8515e14a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.1 临时变量和分割循环">
      <UniqueIdentifier>{8ddd844d-ad22-458b-a2b2-ca014198fab8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式">
      <UniqueIdentifier>{8b330c7d-ede3-4497-a798-4c198fd18d53}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式\18.2.1 表达式模板的操作数">
      <UniqueIdentifier>{6ccb8310-dfbc-4534-a04f-a4aee383a79a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式\18.2.2 Array类型">
      <UniqueIdentifier>{2007e814-0f11-4623-bb8b-5ce97c827833}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式\18.2.3 运算符">
      <UniqueIdentifier>{99d6e307-c089-4432-bdb5-39b6f5088268}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式\18.2.4 回顾">
      <UniqueIdentifier>{d0aa3720-f876-4599-8ee8-0f785d4bfaa8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.2 在模板实参中编码表达式\18.2.5 表达式模板赋值">
      <UniqueIdentifier>{c3eaecd7-8d6a-49ec-a676-120cb733eea8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.3 表达式模板的性能与约束">
      <UniqueIdentifier>{8e52f325-5556-4215-bdbc-8b42392458ba}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第3部分 模板与设计\第18章 表示式模板\18.4 本章后记">
      <UniqueIdentifier>{d3cb577e-b5a7-401f-836e-ca53d35ed063}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序">
      <UniqueIdentifier>{e4622fec-5c07-40c7-8b78-1d356ab8b407}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分">
      <UniqueIdentifier>{456b340f-eff6-4de3-9f9d-99ac23c0a07f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.1 辨别基本类型">
      <UniqueIdentifier>{aea84fa9-9e33-4970-881d-5c7b2ec46dad}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.2 辨别组合类型">
      <UniqueIdentifier>{a3639f5a-f56f-4c87-bce6-bf3067598e9b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.3 辨别函数类型">
      <UniqueIdentifier>{5fa88c9c-b501-4873-bcb8-2ad74218c88b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.4 运用重载解析辨别枚举类型">
      <UniqueIdentifier>{acd419ac-f97e-4650-838d-4e7d2278e467}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.5 辨别class类型">
      <UniqueIdentifier>{cd64e2fa-680a-43a4-a6bf-4c2ea683149b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.6 辨别所有类型的函数模板">
      <UniqueIdentifier>{f5d64961-d844-40b1-a7c4-42e316cd7883}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第19章 类型区分\19.7 本章后记">
      <UniqueIdentifier>{d9940c70-2205-4c13-90e2-dd0f4d7cb8bb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针">
      <UniqueIdentifier>{51acce67-d1bd-4c79-8565-5a7f89e5ee17}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule">
      <UniqueIdentifier>{36bec49e-df26-48c9-bd28-c842c24a8bb3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.1 安全处理异常">
      <UniqueIdentifier>{ffd766bf-8d9e-4a98-a70f-80f391978b99}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.2 holder">
      <UniqueIdentifier>{3a84612d-2555-4467-bb8d-2d06656c9b17}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.3 作为成员的holder">
      <UniqueIdentifier>{2a7b3fcd-4a0b-4d3b-8b62-d67fd8b43fc1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.4 资源获取于初始化">
      <UniqueIdentifier>{04d6626c-3b56-403f-beda-5a02824f3245}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.5 holder的局限">
      <UniqueIdentifier>{0bc5243b-5cf5-43fe-a11e-6e3cff673db4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.6 复制holder">
      <UniqueIdentifier>{ddfb3cde-bccd-4eb7-94b0-80f23aed04b4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.7 跨函数调用来复制holder">
      <UniqueIdentifier>{60b52516-ed82-4c38-b3f4-6b75a5fcb62a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.1 holder和trule\20.1.8 trule">
      <UniqueIdentifier>{81ddd714-6360-4b4a-b669-21ca24b872bc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数">
      <UniqueIdentifier>{4b453003-c427-4063-b89e-b067d8141ba4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.1 计数器在什么地方">
      <UniqueIdentifier>{fadeb6d0-82d2-400f-b11b-132f3b659060}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.2 并发访问计数器">
      <UniqueIdentifier>{75b5d66a-a5c2-49c6-b798-3756c6e9f0e4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.3 析构和释放">
      <UniqueIdentifier>{739c4dd2-7338-449f-a2b1-dd9a7c5665ee}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.4 CountingPtr模板">
      <UniqueIdentifier>{ab14ad68-0d27-42d6-a5c2-9778fe6b7bda}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.5 一个简单的非侵入式计数器">
      <UniqueIdentifier>{d033714a-8c26-490d-a858-c88afa8b7cae}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.6 一个简单的侵入式计数器模板">
      <UniqueIdentifier>{844e675b-5642-4982-b129-420ee97b2ee6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.7 常数性">
      <UniqueIdentifier>{ca566016-f207-49f3-8a4e-eac7e074d463}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.8 隐式转型">
      <UniqueIdentifier>{457cc79a-8e64-4b1a-873d-b52c06134f53}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.2 引用记数\20.2.9 比较">
      <UniqueIdentifier>{8e7404a2-8be3-47a8-a426-b7cfeba20af2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第20章 智能指针\20.3 本章后记">
      <UniqueIdentifier>{7d7a3cd2-83aa-4506-9408-198fb5836891}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple">
      <UniqueIdentifier>{fdee461a-9453-4cc6-80fe-86641657f66e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.1 duo">
      <UniqueIdentifier>{8d947894-8d6e-434b-9d9f-885cf43cb528}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.2 可递归duo">
      <UniqueIdentifier>{ea14e2ba-a1f6-4d11-8434-8f0a1b338a68}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.2 可递归duo\21.2.1 域的个数">
      <UniqueIdentifier>{7a40b157-0eb4-40e3-8cce-7a7e55f01ae0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.2 可递归duo\21.2.2 域的类型">
      <UniqueIdentifier>{6d9ea8da-49c6-4d70-b5e3-cda882de153e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.2 可递归duo\21.2.3 域的值">
      <UniqueIdentifier>{47cfa591-26e5-46f8-aa75-633ba9616ccb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.3 tuple构造">
      <UniqueIdentifier>{0c0b4436-6165-47ad-ba93-12b51396e3c1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第21章 tuple\21.4 本章后记">
      <UniqueIdentifier>{8aa6844d-b88b-4c88-bc50-8676fc4e40c4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调">
      <UniqueIdentifier>{4bb72d40-f242-48e7-a8fc-ed2a6454e427}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.1 直接调用、间接调用与内联调用">
      <UniqueIdentifier>{1799acfa-106b-429c-b01c-45b0e22e9ef8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.2 函数指针与函数引用">
      <UniqueIdentifier>{688d0996-9d8e-4e45-a204-2a5aa164440a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.3 成员函数指针">
      <UniqueIdentifier>{302844d9-5fca-4890-a70a-65768bb2cfa8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.4 class类型的仿函数">
      <UniqueIdentifier>{a61b5c36-b397-40a1-920d-f4810f908ec0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.4 class类型的仿函数\22.4.1 class类型仿函数的第1个实例">
      <UniqueIdentifier>{19bd1c02-65b0-4589-8862-acaf54110ed7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.4 class类型的仿函数\22.4.2 class类型仿函数的类型">
      <UniqueIdentifier>{1fba9520-3491-4439-bc24-a70722fd9e4f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数">
      <UniqueIdentifier>{f8efea71-fec4-4919-80fe-037c761f8d68}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数\22.5.1 作为模板类型实参的仿函数">
      <UniqueIdentifier>{224e21cf-b6fe-4790-83e1-185c86e6811b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数\22.5.2 作为函数调用实参的仿函数">
      <UniqueIdentifier>{013e35cc-c3a2-4676-aaf0-4ecfd33c1e04}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数\22.5.3 结合函数调用参数和模板类型参数">
      <UniqueIdentifier>{9702a5b5-3cd3-45a3-9dba-37ca6b381207}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数\22.5.4 作为非类型模板实参的仿函数">
      <UniqueIdentifier>{7dc06450-2885-4294-af15-1e4e83986ffd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.5 指定仿函数\22.5.5 函数指针的封装">
      <UniqueIdentifier>{59aef576-d90a-4594-8772-8d1b7b24533a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.6 内省">
      <UniqueIdentifier>{97649f08-a68e-40b6-8a5c-53fdec624f86}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.6 内省\22.6.1 分析一个仿函数的类型">
      <UniqueIdentifier>{109a164b-83f8-4a10-9062-715aee6d12e5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.6 内省\22.6.2 访问参数的类型">
      <UniqueIdentifier>{38962ddf-9758-4104-8744-4412fa1b6546}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.6 内省\22.6.3 封装函数指针">
      <UniqueIdentifier>{b40d06e8-d431-4428-b2a9-e3da5bd05225}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.7 函数对象组合">
      <UniqueIdentifier>{77ccb133-a5dc-46a5-a4d2-6089d4b46080}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.7 函数对象组合\22.7.1 简单的组合">
      <UniqueIdentifier>{2cf742d3-4e79-4bdf-9f98-6d435243a626}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.7 函数对象组合\22.7.2 混合类型的组合">
      <UniqueIdentifier>{7887425d-8043-44f1-9459-6969adacccb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.7 函数对象组合\22.7.3 减少参数的个数">
      <UniqueIdentifier>{ae1002fe-c7f7-4bee-9292-0258c33a013f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.8 值绑定">
      <UniqueIdentifier>{9df88e45-d90d-4af9-b6fe-0384c5bbdd6e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.8 值绑定\22.8.1 选择绑定的目标">
      <UniqueIdentifier>{a899f7b7-9f4f-4a76-8ca0-29751e9e9b09}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.8 值绑定\22.8.2 绑定签名">
      <UniqueIdentifier>{e36443b5-9851-4bc2-b722-7279549fccfd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.8 值绑定\22.8.3 实参选择">
      <UniqueIdentifier>{a7189b38-bcfc-4b32-a50b-f2741f5f17c4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.8 值绑定\22.8.4 辅助函数">
      <UniqueIdentifier>{acd64eed-652b-4b19-a995-e8ba4f85229b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.9 仿函数操作：一个完整的实现">
      <UniqueIdentifier>{ef39aa51-6c77-421b-bc87-8904a3f2249e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\第4部分 高级应用程序\第22章 函数对象和回调\22.10 本章后记">
      <UniqueIdentifier>{68e65af3-bc02-46c7-ade2-716205090b98}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录">
      <UniqueIdentifier>{83290eb4-8be8-4e55-b978-a0cfb0b1ea98}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则">
      <UniqueIdentifier>{85522fcf-8ff4-451e-a3b5-a722dcad5f89}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.1 翻译单元">
      <UniqueIdentifier>{865df6ec-33d4-4d2b-a85b-a10f17a376de}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.2 声明和定义">
      <UniqueIdentifier>{e8a92754-b47d-418b-a649-d4ab25c20e15}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.3 一处定义原则的细节">
      <UniqueIdentifier>{f59fc1d8-6a88-4b0b-bb2b-218a92020067}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.3 一处定义原则的细节\A.3.1 程序的一处定义约束">
      <UniqueIdentifier>{8b7e732b-6476-48f0-a8d2-a6ccd3b2febb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.3 一处定义原则的细节\A.3.2 翻译单元的一处定义约束">
      <UniqueIdentifier>{ea1377fd-fc84-4b83-8b4b-f827c5d0e797}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录A 一处定义原则\A.3 一处定义原则的细节\A.3.3 跨翻译单元的等价性约束">
      <UniqueIdentifier>{179fa93f-367d-4908-91fe-ce3420b8d06d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析">
      <UniqueIdentifier>{01c65097-a63d-49d6-9c4e-3235c9c5f5fd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.1 何时应用重载解析">
      <UniqueIdentifier>{0d64ddba-2944-4afb-95f1-a6b5664c0a48}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.2 简化过的重载解析">
      <UniqueIdentifier>{d76f2062-a260-4c9d-a8e2-8352513d8bb8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.2 简化过的重载解析\B.2.1 成员函数的隐含实参">
      <UniqueIdentifier>{5d5f7cb9-10ae-43fe-8119-8941b3f6a2fa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.2 简化过的重载解析\B.2.2 细化完美匹配">
      <UniqueIdentifier>{b5065e77-3393-40f4-8804-7da26439d6b9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节">
      <UniqueIdentifier>{8681956b-748e-4585-b5c2-ada9e84462fd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节\B.3.1 非模板优先">
      <UniqueIdentifier>{63b17916-28e9-443b-82f6-0ef76fb88318}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节\B.3.2 转型序列">
      <UniqueIdentifier>{aa6faed7-06e0-4bc8-92db-1ade72bac2e3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节\B.3.3 指针的转型">
      <UniqueIdentifier>{f8a3a746-730e-4d34-a5fe-544339e69b4a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节\B.3.4 仿函数和代理函数">
      <UniqueIdentifier>{507dc0c5-f9bb-49ab-b788-2cd0f09ae9d0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Templates\附录\附录B 重载解析\B.3 重载的细节\B.3.5 其他的重载情况">
      <UniqueIdentifier>{7ca69b15-5391-4f56-80e5-8fbfe4cdc540}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.">
      <UniqueIdentifier>{a1af5a6c-e5f6-435a-b073-65d45ea3344e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述">
      <UniqueIdentifier>{b5a0ed23-40f0-4e16-8f77-204e0dd42a72}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.1 序言">
      <UniqueIdentifier>{f90e9a7b-049b-42df-a708-ccfe7bf29550}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言">
      <UniqueIdentifier>{30bc90ce-bdb7-4316-b4e1-6e33d9e81c50}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.0">
      <UniqueIdentifier>{8b3b4610-c392-458b-aee8-c341b29e4546}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.1 补充材料">
      <UniqueIdentifier>{5b8cff7f-1f21-4ab5-8bd6-7713e9bfbe3e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.2 试验">
      <UniqueIdentifier>{a865af65-2369-4c34-b2e9-f547eb4b22cc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢">
      <UniqueIdentifier>{59ac0cc0-5e84-4f37-a598-3bb439151b4d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.0">
      <UniqueIdentifier>{f275c1eb-4699-403e-a14e-e769e41d2ae6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.1 Dave的致谢">
      <UniqueIdentifier>{3fccc706-1b29-48d4-9573-1276fd033ebe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.2 Aleksey的致谢">
      <UniqueIdentifier>{906de57c-2951-4e02-ba0f-094975442521}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.1 起步走">
      <UniqueIdentifier>{4d250f99-0d3d-448e-a89d-a1858d1e5b36}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.2 元程序的概念">
      <UniqueIdentifier>{a86da6cc-cdff-4e53-a022-6384fa12e4d9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.3 在宿主语言中进行元编程">
      <UniqueIdentifier>{c6fbe472-79ea-4f04-93c4-6f9acf5460d1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程">
      <UniqueIdentifier>{415c6776-6685-41df-ba3f-c6e4e2367a5e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.1 数值计算">
      <UniqueIdentifier>{2b9de804-7af0-4d1b-a79b-c9e783366dfe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.2 类型计算">
      <UniqueIdentifier>{acdb0665-715f-4a16-963f-aa622a445dc6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程">
      <UniqueIdentifier>{59930a97-cf1c-4554-b0d6-f55ec477fba5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.1 替代方案1：运行期计算">
      <UniqueIdentifier>{3dabbc7c-441d-496e-9a8e-3a85f02fd674}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.2 替代方案2：用户分析">
      <UniqueIdentifier>{5801642d-3568-4593-8a69-77203e2a9810}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.3 为何进行C++元编程">
      <UniqueIdentifier>{0c6d8372-2a73-47b6-8524-34960bb8ae1a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.6 何时进行元编程">
      <UniqueIdentifier>{7d9ab5f9-6978-4749-b741-1e66730ba4bd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.7 为何需要元编程程序库">
      <UniqueIdentifier>{d0fde0f3-1ab1-4466-997d-d9357cf6c8ea}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵">
      <UniqueIdentifier>{f78b6141-86e5-4c63-af11-68c40c26b70a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联">
      <UniqueIdentifier>{2c7d18d9-4a11-4065-a167-1b589d215642}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.1 采用一种直接的方式">
      <UniqueIdentifier>{cec9c0f1-e131-4f96-9a3d-fdfe3eb6e800}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.2 采用一种迂回方式">
      <UniqueIdentifier>{898f2b60-753f-4bed-aa57-7c9574769150}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.3 寻找一个捷径">
      <UniqueIdentifier>{78593998-2749-475e-9dc3-59f6826429a6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.2 元函数">
      <UniqueIdentifier>{5b9354e0-ce5a-48de-b037-7b595530aa16}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.3 数值元函数">
      <UniqueIdentifier>{43ff1d89-ae3f-49ea-99cc-938226bf9658}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择">
      <UniqueIdentifier>{8ec16a72-2bd2-4192-afad-ed86ee55fb77}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.1 进一步讨论iter_swap">
      <UniqueIdentifier>{c52db3e7-95c0-45c7-b786-684679a0453d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.2 美中不足">
      <UniqueIdentifier>{3cbcec33-71e9-4594-990f-a0805c4cfbd4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.3 另一个美中不足">
      <UniqueIdentifier>{dfaffcbd-3838-4fec-ab0b-edd87f0f2d2f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.4 “美中不足”之外覆器">
      <UniqueIdentifier>{1843773e-a8a9-4b50-8054-4bd3833b1d72}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览">
      <UniqueIdentifier>{e3cff678-d74b-489f-995c-2fa3f8fa045c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.1 一般知识">
      <UniqueIdentifier>{c354c247-f341-4c44-be23-36775949fcfd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.2 主类型归类（PrimaryTypeCategorization）">
      <UniqueIdentifier>{af7e1d71-6204-440e-8f02-7efa6514d7a8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.3 次类型归类（SecondaryTypeCategorization%29">
      <UniqueIdentifier>{6316549a-5a64-4ff9-9134-4d93469445ac}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.4 类型属性">
      <UniqueIdentifier>{b495476a-bfb9-41ad-b6fc-278d5b655c4a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.5 类型之间的关系">
      <UniqueIdentifier>{340e49de-e34a-4a4c-93c2-38df8c9137f8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.6 类型转化">
      <UniqueIdentifier>{d709f588-8040-497f-b750-6662d9387b82}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.6 无参元函数">
      <UniqueIdentifier>{a64d8f61-4a79-4ae1-bd54-cb5e569f4fc9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.7 元函数的定义">
      <UniqueIdentifier>{721adc13-c68c-46bd-ae16-3993032a760a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.8 历史">
      <UniqueIdentifier>{e4418d8e-d973-4bb5-8025-06e18139ade7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节">
      <UniqueIdentifier>{a0c141ce-964c-4752-bb7a-37bc52a2dce5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.1 特化">
      <UniqueIdentifier>{af9f527d-800e-4f96-bc0b-3688bdd32419}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.2 实例化">
      <UniqueIdentifier>{5fb29dc8-a963-4483-9f8a-e42d7ececd2d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.3 多态">
      <UniqueIdentifier>{4ae34c34-e64e-4795-952e-53a4216af376}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.10 练习">
      <UniqueIdentifier>{d64a4411-767c-4806-975e-8b928b8c0305}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数">
      <UniqueIdentifier>{a16922e3-dea7-4248-8ca2-00c916eba954}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析">
      <UniqueIdentifier>{d2afe253-c910-433a-80a3-16527df8163f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.1 量纲的表示">
      <UniqueIdentifier>{de329717-ca3a-4494-a423-30baed1de2b3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.2 物理量的表示">
      <UniqueIdentifier>{63aa5bfe-9a05-44f6-ba6d-3d58432eb90f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.3 实现加法和减法">
      <UniqueIdentifier>{d24ee081-c107-4751-a66d-180d1b81a930}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.4 实现乘法">
      <UniqueIdentifier>{ca43a1f5-474a-4807-b2c8-7c6499c6c1c2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.5 实现除法">
      <UniqueIdentifier>{0027b535-6ccd-42cb-addf-45da675efd8e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.2 高阶元函数">
      <UniqueIdentifier>{abc68eeb-1d2e-4219-b567-ce7a76ec1e4b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符">
      <UniqueIdentifier>{af677072-7b47-4bd6-84a6-0ffa3fe83edf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.1 lambda元函数">
      <UniqueIdentifier>{1fff9e18-bec9-466c-ace4-3a63e70cffdb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.2 apply元函数">
      <UniqueIdentifier>{26dd3d78-5418-487d-8c00-807d547b8f90}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力">
      <UniqueIdentifier>{42e8f31d-b376-4775-9af3-d7e55e48940b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.1 偏元函数应用">
      <UniqueIdentifier>{4726182b-1c83-4b81-a48f-53af2a0ad490}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.2 元函数复合">
      <UniqueIdentifier>{ce3ca575-442e-46cb-b428-60ea02d46485}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节">
      <UniqueIdentifier>{18fd77e2-2988-4d20-ba0a-b44a69b227ff}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.1 占位符">
      <UniqueIdentifier>{176b8440-7b9e-49af-bc0c-8a63860f64df}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.2 占位符表达式的定义">
      <UniqueIdentifier>{4536f9a7-0995-4201-986c-7cf771553f6d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.3 Lambda和非元函数模板">
      <UniqueIdentifier>{97885ba1-2564-4039-a328-401c09c1c653}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.4“懒惰”的重要性">
      <UniqueIdentifier>{fcbad5c0-e36b-4009-9d42-3fb13f9fbfcb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.6 细节">
      <UniqueIdentifier>{5a448d34-adea-45ba-a408-7f392162a110}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.7 练习">
      <UniqueIdentifier>{09404c16-6668-40eb-93d9-be813179e3a8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作">
      <UniqueIdentifier>{f86bdc02-ba17-4e81-af00-fc40d59c2d21}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作">
      <UniqueIdentifier>{bd3b7566-7498-4da1-997a-e323e9ec63a5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.1 类型选择">
      <UniqueIdentifier>{aa707978-750c-4f2c-b13d-cf8d2ff7146d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.2 缓式类型选择">
      <UniqueIdentifier>{314a4c28-a53d-4fe6-88b0-f62b0309f8e7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.3 逻辑运算符">
      <UniqueIdentifier>{f3b97612-0d5b-41c8-9ebe-59397ea21fa4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算">
      <UniqueIdentifier>{0afef381-c75d-446a-903b-126d7e5cd74b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.1 整型运算符">
      <UniqueIdentifier>{069333e1-403a-4536-af63-271111093274}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.2 _c整型速记法">
      <UniqueIdentifier>{7e40475e-b8bc-495c-ad98-0fce8dbf2a2f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.3 练习">
      <UniqueIdentifier>{75b1e8b0-7ed2-42d6-8036-33fe6d06049e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器">
      <UniqueIdentifier>{5921744d-643a-428e-8a34-d0d8abc89c08}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.1 Concepts">
      <UniqueIdentifier>{0820950d-9f6c-46f5-b923-b3734de2fe20}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.2 序列和算法">
      <UniqueIdentifier>{a7afbdec-e5c1-45b6-bc52-7ec46b4d5c7d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.3 迭代器">
      <UniqueIdentifier>{246e01ab-f193-44f9-bc08-b87e8969f8bb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.4 迭代器Concepts">
      <UniqueIdentifier>{37d12ca8-e5b2-4a3f-bcd5-3e041cfd170a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.4 迭代器Concepts\5.4.1 前向迭代器">
      <UniqueIdentifier>{a2e48562-accb-4b61-b297-78076f6887e6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.4 迭代器Concepts\5.4.2 双向迭代器">
      <UniqueIdentifier>{6844ad22-3ff0-4ab9-b717-2f8eb719f7ba}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.4 迭代器Concepts\5.4.3 随机访问迭代器">
      <UniqueIdentifier>{f2fa84f4-7d00-4519-b8b9-958f70ea6894}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.5 序列Concepts">
      <UniqueIdentifier>{2b7fef98-7ef0-4687-aa50-e6355485168b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.5 序列Concepts\5.5.1 序列遍历Concepts">
      <UniqueIdentifier>{31e6d2a2-eb4d-4b56-b2cd-43fce9fa8b7f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.5 序列Concepts\5.5.2 可扩展性">
      <UniqueIdentifier>{59847c19-9b50-426d-8ac6-cdb0e449dcd2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.5 序列Concepts\5.5.3 关联式序列">
      <UniqueIdentifier>{9ba75a97-598f-4661-b3de-22122b06f291}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.5 序列Concepts\5.5.4 可扩展的关联式序列">
      <UniqueIdentifier>{926c6d7c-0afe-472a-8e96-913b73bc6887}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.6 序列相等性">
      <UniqueIdentifier>{65ba6047-0e6f-4ba6-8a7f-79fb5841b79d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.7 固有的序列操作">
      <UniqueIdentifier>{c2aadcab-13d2-46b4-b29d-046fb21e694a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类">
      <UniqueIdentifier>{227fe164-2a96-43e4-a91b-1ede904b0135}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.1 list">
      <UniqueIdentifier>{c2a09391-bc88-4d1c-b435-cc3460ad6b08}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.2 vector">
      <UniqueIdentifier>{7017bd4d-f65f-4a4e-91a6-566d518329c9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.3 deque">
      <UniqueIdentifier>{474aa456-4bb5-432f-8f33-08c7c790c772}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.4 range_c">
      <UniqueIdentifier>{aefce210-3256-433e-96c1-69c62a24854d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.5 map">
      <UniqueIdentifier>{70e491df-129f-4f5d-ad3d-fe74afcc980e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.6 set">
      <UniqueIdentifier>{4c5cdb57-3d2f-46b5-8a9b-09f58d7b20fe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.8 序列类\5.8.7 iterator_range">
      <UniqueIdentifier>{485ce0e8-7cb0-49d8-a35d-3c90df4f0152}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.9 整型序列外覆器">
      <UniqueIdentifier>{50877d67-720c-46c3-8c82-738cbae7a119}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.10 序列派生">
      <UniqueIdentifier>{b996edf8-e058-4509-8cc2-9668cf12e692}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列">
      <UniqueIdentifier>{db3c3bfc-2a3d-4d6d-99f1-98888e6783f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.1 构建tiny序列">
      <UniqueIdentifier>{707e6726-c4e6-4bb2-8eb8-1af960a20cc9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.2 迭代器的表示">
      <UniqueIdentifier>{d8ddff82-e623-4f41-b9f5-48e7891ca85e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.3 为tiny实现at">
      <UniqueIdentifier>{916a0a38-31c9-4f20-9971-b01cfc16a385}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.4 完成tiny_iterator的实现">
      <UniqueIdentifier>{2366c1c5-66d2-4e91-9fcc-e97ef4e981be}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.5 begin和end">
      <UniqueIdentifier>{f8aef6a2-2eee-4096-95db-28828f5bf11b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.11 编写你自己的序列\5.11.6 加入扩充性">
      <UniqueIdentifier>{a52b8ec1-b8d1-418c-b851-b644a4db4f2c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.12 细节">
      <UniqueIdentifier>{2b2d9d59-852e-42d6-a6b2-e02a630f3334}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第5章 序列和迭代器\5.13 练习">
      <UniqueIdentifier>{929b1463-e9cc-4399-b12e-57e8e1f19a10}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法">
      <UniqueIdentifier>{446d54c4-1b01-45f2-befd-62734aed973c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.1 算法、惯用法、复用和抽象">
      <UniqueIdentifier>{e2a05039-f1ee-4cbc-868d-5d24e35befc3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.2 MPL中的算法">
      <UniqueIdentifier>{cbbe9e59-ebb8-490d-95ab-03edce2a7dab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.3 插入器">
      <UniqueIdentifier>{0b7394fa-a38c-4873-ad2c-8f9e2b37cb61}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.4 基础序列算法">
      <UniqueIdentifier>{c39bde09-89d8-468a-a895-1066a91ce9da}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.5 查询算法">
      <UniqueIdentifier>{6e348964-00df-4082-a586-250a3f137b9d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.6 序列构建算法">
      <UniqueIdentifier>{28997cff-7566-4736-baa6-37cab4c0337f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.7 编写你自己的算法">
      <UniqueIdentifier>{c764049d-34b1-41ee-9cf9-95fe03863cb8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.8 细节">
      <UniqueIdentifier>{77521c65-2f5f-485f-a95d-de59e6441f0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第6章 算法\6.9 练习">
      <UniqueIdentifier>{27969377-cd69-4fe2-942f-a9f8c86a35be}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器">
      <UniqueIdentifier>{011b6d5d-a9cd-4ee5-bf83-efed2cb073cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.1 一些例子">
      <UniqueIdentifier>{d2e63336-77b4-4269-bd05-f8ab3c0b0fa6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.1 一些例子\7.1.1 对从序列元素计算出来的值进行比较">
      <UniqueIdentifier>{76b0e74a-7b9f-415b-ad9c-564982dfa26c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.1 一些例子\7.1.2 联合多个序列">
      <UniqueIdentifier>{4069ebea-eb45-4f42-a04b-adab04b2236d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.1 一些例子\7.1.3 避免不必要的计算">
      <UniqueIdentifier>{dd98e95e-4d99-4253-a18c-6df0195523dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.1 一些例子\7.1.4 选择性的元素处理">
      <UniqueIdentifier>{0e07f7b6-4b49-4dd6-93a0-c709f6cb2067}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.2 视图Concept">
      <UniqueIdentifier>{1a8b00d2-d2bf-42e9-91b4-4298f8ddcb0a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.3 迭代器适配器">
      <UniqueIdentifier>{061265a2-6cb4-4d6a-a234-7249461c9342}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.4 编写你自己的视图">
      <UniqueIdentifier>{ae882db5-c21b-4078-87d3-3ec2f341b058}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.5 历史">
      <UniqueIdentifier>{ecdde1e2-d195-4e43-a543-990b56458906}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第7章 视图与迭代器适配器\7.6 练习">
      <UniqueIdentifier>{06d57409-1ab8-48a6-906f-bce44a966353}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断">
      <UniqueIdentifier>{4613a9ba-4891-406b-809d-011cf3b27365}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.1 调试错误">
      <UniqueIdentifier>{9d573bb1-3810-4a15-b8f2-0ed956ecbfa2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.1 调试错误\8.1.1 实例化回溯">
      <UniqueIdentifier>{ec27abe6-c846-48b3-9876-874b48403e0b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.1 调试错误\8.1.2 错误消息格式化怪癖">
      <UniqueIdentifier>{dfff001a-8081-4118-b39a-351be5a26cf4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.2 使用工具进行诊断分析">
      <UniqueIdentifier>{254491cc-3d3d-40a2-9c99-f16ff913b268}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.2 使用工具进行诊断分析\8.2.1 听取他者的意见">
      <UniqueIdentifier>{5f466b6f-b4d2-48a4-9214-351796819a0a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.2 使用工具进行诊断分析\8.2.2 使用导航助手">
      <UniqueIdentifier>{fdce13c4-c8e5-4764-b21b-9c3e3ffc3e07}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.2 使用工具进行诊断分析\8.2.3 清理场面">
      <UniqueIdentifier>{988b8fbe-4754-4c5c-91cc-1cfc724e9fce}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.3 有目的的诊断消息生成">
      <UniqueIdentifier>{94850e41-4b33-4672-9a61-db4ea30127a1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.3 有目的的诊断消息生成\8.3.1 静态断言">
      <UniqueIdentifier>{7e64f53b-395d-4b59-8c16-158117f6d9af}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.3 有目的的诊断消息生成\8.3.2 MPL静态断言">
      <UniqueIdentifier>{43d0e6f1-31f5-4382-a407-9b0851f740f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.3 有目的的诊断消息生成\8.3.3 类型打印">
      <UniqueIdentifier>{a84001ab-c306-44f9-8a5a-028a17d2b763}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.4 历史">
      <UniqueIdentifier>{34b65c87-1269-42fa-9d38-e94635ca8eb3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.5 细节">
      <UniqueIdentifier>{b23dbfd5-0c48-4775-9401-b25633a0629c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第8章 诊断\8.6 练习">
      <UniqueIdentifier>{8580e0c3-884c-43a7-ace7-5c54aac6940c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界">
      <UniqueIdentifier>{ce9af733-dd1d-481d-89a9-73475a8d73dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.1 for_each">
      <UniqueIdentifier>{8dc5a069-d58e-41e2-b326-7b43c8daf7e9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.1 for_each\9.1.1 类型打印">
      <UniqueIdentifier>{f43322d9-c8eb-411a-81ab-5275ca2055f2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.1 for_each\9.1.2 类型探访">
      <UniqueIdentifier>{4a6755e7-3ed9-4f87-8bb4-bf2468b16b6a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.2 实现选择">
      <UniqueIdentifier>{f620474b-2978-40dc-9d9e-32015f5e63da}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.2 实现选择\9.2.1 if语句">
      <UniqueIdentifier>{982ef03d-1e18-4a1a-9aac-157c7c6afa09}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.2 实现选择\9.2.2 类模板特化">
      <UniqueIdentifier>{017e2d14-6c18-4128-91cb-42b3ebb3025d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.2 实现选择\9.2.3 标签分派">
      <UniqueIdentifier>{0c41401e-a9aa-42ad-8e3d-fb1712bdbc42}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.3 对象生成器">
      <UniqueIdentifier>{6ce4b13a-9c45-4e39-9764-1b66d46297d6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.4 结构选择">
      <UniqueIdentifier>{712d21c2-5b52-49e1-aa56-0489a1376714}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.5 类复合">
      <UniqueIdentifier>{517e2077-d503-4d88-8945-280f2127d13c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.6（成员）函数指针作为模板实参">
      <UniqueIdentifier>{465c576d-652b-4ca6-9b25-79debbd2bd92}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除">
      <UniqueIdentifier>{ea6e30de-e96d-42bf-9371-ae18293f5f68}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除\9.7.1 一个例子">
      <UniqueIdentifier>{802031d1-eecb-4b38-845d-c7635dec5872}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除\9.7.2 一般化">
      <UniqueIdentifier>{f962e7f3-777c-4e3c-8c5b-66a81bcfe1fa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除\9.7.3“手工”类型擦除">
      <UniqueIdentifier>{d30b6713-a265-4952-8a19-3d43b547802c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除\9.7.4 自动类型擦除">
      <UniqueIdentifier>{37a11a5d-55af-4213-b5b4-93a29e0939c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.7 类型擦除\9.7.5 保持接口">
      <UniqueIdentifier>{3183c802-519c-4d53-b3dc-605848fed622}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.8 奇特的递归模板模式">
      <UniqueIdentifier>{27095b69-ce36-4882-bb73-b8f94e437c48}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.8 奇特的递归模板模式\9.8.1 生成函数">
      <UniqueIdentifier>{06d8ca56-d7df-477e-9d74-345e509a7f9d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.8 奇特的递归模板模式\9.8.2 管理重载决议">
      <UniqueIdentifier>{5dbb9e97-70e6-447d-aac3-e686a2701edf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.9 显式管理重载集">
      <UniqueIdentifier>{459da8c9-be16-423e-9f9a-287bed616ab9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.10 sizeof技巧">
      <UniqueIdentifier>{716ee1ad-ad91-4ddb-8fc9-7c5f9e7be2ad}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.11 总结">
      <UniqueIdentifier>{bff8080a-9a83-4d35-94cb-f4f73588d82e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第9章 跨越编译期和运行期边界\9.12 练习">
      <UniqueIdentifier>{6b586f23-0dda-44d7-9281-fac995d392af}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言">
      <UniqueIdentifier>{878c6b30-44ec-40d2-8ff2-9f6de7d41553}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.1 一个小型语言">
      <UniqueIdentifier>{50cca23a-541c-4db4-9438-87977269e1dc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.2 路漫漫其修远兮">
      <UniqueIdentifier>{cbdbaa7e-1353-410f-9185-8451ca6f4b94}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.2 路漫漫其修远兮\10.2.1 Make工具语言">
      <UniqueIdentifier>{496e7302-2146-4944-a087-940f9c4876d5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.2 路漫漫其修远兮\10.2.2 巴科斯——诺尔模式">
      <UniqueIdentifier>{dfae7656-2f07-411e-a8fe-d4fd5c4c7b1c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.2 路漫漫其修远兮\10.2.3 YACC">
      <UniqueIdentifier>{a1cd4135-3ee3-463b-b52e-1bbe417d5e54}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.2 路漫漫其修远兮\10.2.4 DSL摘要">
      <UniqueIdentifier>{417aec45-c8d4-418a-afe2-7f55e19f03d6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.3 DSL">
      <UniqueIdentifier>{351b90f8-95e0-427e-8fb2-e1b82a1915fd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.4 C++用作宿主语言">
      <UniqueIdentifier>{664f907b-dfa7-4a7f-a434-8749e7e1b07a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.5 Blitz++和表达式模板">
      <UniqueIdentifier>{ffc60e76-8da5-4793-ba89-57fe408282ff}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.5 Blitz++和表达式模板\10.5.1 问题">
      <UniqueIdentifier>{0fe52e18-7736-4dbc-a069-8187f856d277}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.5 Blitz++和表达式模板\10.5.2 表达式模板">
      <UniqueIdentifier>{5cae5e56-a807-4777-b7ee-39cc643177c2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.5 Blitz++和表达式模板\10.5.3 更多的Blitz++魔法">
      <UniqueIdentifier>{ccad9550-8d86-411a-a40b-1b8879b11234}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.6 通用DSEL">
      <UniqueIdentifier>{98af38b9-900c-4ed6-ac70-046f72360528}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.6 通用DSEL\10.6.1 具名参数">
      <UniqueIdentifier>{3e9ca2fd-e0f4-41f5-bcb8-41dcf55c041b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.6 通用DSEL\10.6.2 构建匿名函数">
      <UniqueIdentifier>{88cde9f1-01a1-4364-89af-4510bd45245f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.7 Boost Spirit程序库">
      <UniqueIdentifier>{cb4b4e4b-9532-4794-9928-40619313be5f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.7 Boost Spirit程序库\10.7.1 闭包">
      <UniqueIdentifier>{08b9d82e-4476-462d-9743-9c307eed753f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.7 Boost Spirit程序库\10.7.2 子规则">
      <UniqueIdentifier>{15cb372a-73c9-4f40-9c23-96f52c5258a4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.8 总结">
      <UniqueIdentifier>{08881262-5d8d-4719-84d2-bfcfc2b7f280}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第10章 领域特定的嵌入式语言\10.9 练习">
      <UniqueIdentifier>{5e8bb6e5-b89d-4688-aaf1-62cef86aa66e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练">
      <UniqueIdentifier>{3f67e5bf-c207-421d-a924-484c8581e57b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.1 有限状态机">
      <UniqueIdentifier>{fc921c66-7f44-48b3-96c8-0147d9f28031}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.1 有限状态机\11.1.1 领域抽象">
      <UniqueIdentifier>{916b775a-e928-4d42-9d33-6fe2c205b6fa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.1 有限状态机\11.1.2 符号">
      <UniqueIdentifier>{db188963-1050-4ed2-b013-5830ecbe768b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.2 框架设计目标">
      <UniqueIdentifier>{c13a8d08-b314-4012-8be1-74f1af4d60cb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.3 框架接口基础">
      <UniqueIdentifier>{4b1cbdc8-a667-45f8-b403-c53149fdd55b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.4 选择一个DSL">
      <UniqueIdentifier>{ea1e7c51-1604-4b14-b725-afbc30c976dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.4 选择一个DSL\11.4.1 转换表">
      <UniqueIdentifier>{ea1cd292-1745-4fad-bf51-6f9525bebfc0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.4 选择一个DSL\11.4.2 组装成一个整体">
      <UniqueIdentifier>{4a151fcf-6da7-49a4-886a-214fe65247b2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.5 实现">
      <UniqueIdentifier>{c6a0c3bb-5d4e-439d-8d83-22cb1968020d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.6 分析">
      <UniqueIdentifier>{b5a90ba8-c24e-4643-9058-6772e784fd94}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.7 语言方向">
      <UniqueIdentifier>{ac230a2b-e811-4c87-b434-9eb68e23e503}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第11章 DSEL设计演练\11.8 练习">
      <UniqueIdentifier>{5f949d42-ff7e-44c8-9923-b10b1c9e0657}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\附录">
      <UniqueIdentifier>{edc1c001-b229-4af3-9452-7b40b465e5f5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\附录\附录A 预处理元编程简介">
      <UniqueIdentifier>{90bc54b9-da88-43f7-b376-05d84c4c2c7a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\附录\附录B typename和template关键字">
      <UniqueIdentifier>{0053557a-b4de-4e73-abe7-164f1e6831f7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\附录\附录C 编译期性能">
      <UniqueIdentifier>{e913cbef-8af8-4a71-98ce-b6bd967c5548}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\附录\附录D MPL可移植性摘要">
      <UniqueIdentifier>{13dc5914-a6f1-44fc-bf53-200687237306}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.0">
      <UniqueIdentifier>{fe0f6ab0-b133-42f4-95fb-e87c5fae0918}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.0">
      <UniqueIdentifier>{708467d9-160a-49bf-b564-74bccfc776cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.0">
      <UniqueIdentifier>{d8910e00-8332-4e88-97e7-69d6e2788153}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.0">
      <UniqueIdentifier>{3ee955a2-24a0-4138-aec2-d53b4149bdfd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.0">
      <UniqueIdentifier>{1494ce19-90cf-4b41-bf47-14628973756e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.0">
      <UniqueIdentifier>{affbe22b-5f08-42fb-97dc-7481f6a89648}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.0">
      <UniqueIdentifier>{a3fb1763-228b-4fce-89ba-9c09006defad}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.0">
      <UniqueIdentifier>{bf72c317-4569-4e3b-86a0-45ef2b482352}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.0">
      <UniqueIdentifier>{e103357c-9721-45c7-b5a3-9a7ad0e1f575}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.0">
      <UniqueIdentifier>{f63980ce-d5b2-4dd1-9ddf-c550948cdf80}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.0">
      <UniqueIdentifier>{b1c3e684-3144-4cd6-b3a9-e929f4865890}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.0">
      <UniqueIdentifier>{8e78a902-ae8c-4340-be6e-2f4b45bb9ced}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.0">
      <UniqueIdentifier>{d570e9fc-580d-4cbf-979e-3411eb38cfe3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.0">
      <UniqueIdentifier>{1ff44b46-711b-4d63-b722-a6180d935730}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.0">
      <UniqueIdentifier>{5a668b09-e93d-4e36-8059-557e93c663db}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.0">
      <UniqueIdentifier>{c7b3fffb-bd9a-4f2e-8673-66688a4a51c7}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <Text Include="Resource\ReadMe.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Schedule.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 0.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 1.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 2.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 3.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 4.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 5.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 6.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 7.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 8.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 9.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\C++ Templates.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\C++ Template Metaprogramming.txt">
      <Filter>资源文件</Filter>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplate.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateDll.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateExport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateFwd.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateImport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateLib.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\BookTemplateNoImport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\DllLib.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Helper\BookTemplateCustomAssertMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Helper\Helper.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Helper\HelperFwd.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Helper\UserMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Helper\BookTemplateClassInvariantMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Placeholder\Placeholder.h">
      <Filter>Placeholder 头文件</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\DllLib.cpp">
      <Filter>源文件</Filter>
    </ClCompile>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\DllMain.cpp">
      <Filter>源文件</Filter>
    </ClCompile>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\Placeholder\Placeholder.cpp">
      <Filter>Placeholder 源文件</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplates\Preface\序.png">
      <Filter>Book\C++ Templates\0. 前言\0.1 序</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplates\Preface\David的致谢.png">
      <Filter>Book\C++ Templates\0. 前言\0.2 致谢\0.2.2 David的致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplates\Preface\Noco的致谢.png">
      <Filter>Book\C++ Templates\0. 前言\0.2 致谢\0.2.1 Noco的致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplates\Preface\致谢.png">
      <Filter>Book\C++ Templates\0. 前言\0.2 致谢\0.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\序言.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.1 序言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\Aleksey的致谢.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.2 Aleksey的致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\Dave的致谢.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.1 Dave的致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\补充材料.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.1 补充材料</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\前言.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\试验.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.2 前言\0.2.2 试验</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Preface\致谢.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\0.\0.3 致谢\0.3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\第1章 概述.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.1 起步走.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.1 起步走</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.2 元程序的概念（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.2 元程序的概念</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.2 元程序的概念（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.2 元程序的概念</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.3 在宿主语言中进行元编程.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.3 在宿主语言中进行元编程</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.4 在C++中进行元编程.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.4.1 数值计算（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.1 数值计算</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.4.1 数值计算（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.1 数值计算</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.4.1 数值计算（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.1 数值计算</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.4.2 类型计算.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.4 在C++中进行元编程\1.4.2 类型计算</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.5 为何进行元编程.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.5.1 替代方案1：运行期计算.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.1 替代方案1：运行期计算</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.5.2 替代方案2：用户分析.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.2 替代方案2：用户分析</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.5.3 为何进行C++元编程.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.5 为何进行元编程\1.5.3 为何进行C++元编程</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.6 何时进行元编程.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.6 何时进行元编程</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter1\1.7 为何需要元编程程序库.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第1章 概述\1.7 为何需要元编程程序库</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\第2章 Traits和类型操纵.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.10 练习（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.10 练习</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.10 练习（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.10 练习</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.10 练习（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.10 练习</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.9.3 多态（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.3 多态</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.9.3 多态（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.3 多态</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.9.2 实例化.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.2 实例化</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.9.1 特化.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.1 特化</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.9 细节.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.9 细节\2.9.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.8 历史.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.8 历史</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.7 元函数的定义.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.7 元函数的定义</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.6 无参元函数.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.6 无参元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.6 类型转化.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.6 类型转化</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.5 类型之间的关系.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.5 类型之间的关系</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.4 类型属性.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.4 类型属性</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.3 次类型归类.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.3 次类型归类（SecondaryTypeCategorization%29</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.2 主类型归类.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.2 主类型归类（PrimaryTypeCategorization）</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5.1 一般知识.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.1 一般知识</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.5 BoostTypeTraits程序库概览.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.5 BoostTypeTraits程序库概览\2.5.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.4 “美中不足”之外覆器（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.4 “美中不足”之外覆器</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.4 “美中不足”之外覆器（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.4 “美中不足”之外覆器</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.3 另一个美中不足（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.3 另一个美中不足</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.3 另一个美中不足（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.3 另一个美中不足</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.2 美中不足.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.2 美中不足</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.1 进一步讨论iter_swap（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.1 进一步讨论iter_swap</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4.1 进一步讨论iter_swap（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.1 进一步讨论iter_swap</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.4 在编译期作出选择.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.4 在编译期作出选择\2.4.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.3 数值元函数.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.3 数值元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.2 元函数（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.2 元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.2 元函数（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.2 元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.2 元函数（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.2 元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.1 类型关联.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.1.1 采用一种直接的方式.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.1 采用一种直接的方式</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.1.2 采用一种迂回方式（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.2 采用一种迂回方式</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.1.2 采用一种迂回方式（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.2 采用一种迂回方式</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter2\2.1.3 寻找一个捷径.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第2章 Traits和类型操纵\2.1 类型关联\2.1.3 寻找一个捷径</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\第3章 深入探索元函数.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.7 练习.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.7 练习</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.6 细节（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.6 细节</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.6 细节（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.6 细节</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.6 细节（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.6 细节</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.4“懒惰”的重要性.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.4“懒惰”的重要性</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.3 Lambda和非元函数模板.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.3 Lambda和非元函数模板</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.2 占位符表达式的定义.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.2 占位符表达式的定义</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.1 占位符（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.1 占位符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.1 占位符（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.1 占位符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5.1 占位符（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.1 占位符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.5 Lambda的细节.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.5 Lambda的细节\3.5.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.4.2 元函数复合.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.2 元函数复合</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.4.1 偏元函数应用.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.1 偏元函数应用</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.4 lambda的其他能力.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.4 lambda的其他能力\3.4.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.3.2 apply元函数.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.2 apply元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.3.1 lambda元函数.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.1 lambda元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.3 处理占位符.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.3 处理占位符\3.3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.2 高阶元函数（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.2 高阶元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.2 高阶元函数（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.2 高阶元函数</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.5 实现除法（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.5 实现除法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.5 实现除法（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.5 实现除法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.5 实现除法（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.5 实现除法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.4 实现乘法（4）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.4 实现乘法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.4 实现乘法（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.4 实现乘法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.4 实现乘法（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.4 实现乘法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.4 实现乘法（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.4 实现乘法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.3 实现加法和减法.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.3 实现加法和减法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.2 物理量的表示.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.2 物理量的表示</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.1 量纲的表示（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.1 量纲的表示</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.1 量纲的表示（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.1 量纲的表示</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1.1 量纲的表示（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.1 量纲的表示</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1 量纲分析（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter3\3.1 量纲分析（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第3章 深入探索元函数\3.1 量纲分析\3.1.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\第4章 整型外覆器和操作.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1 布尔外覆器和操作.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.1 类型选择（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.1 类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.1 类型选择（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.1 类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.1 类型选择（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.1 类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.2 缓式类型选择（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.2 缓式类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.2 缓式类型选择（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.2 缓式类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.2 缓式类型选择（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.2 缓式类型选择</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.3 逻辑运算符（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.3 逻辑运算符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.3 逻辑运算符（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.3 逻辑运算符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.1.3 逻辑运算符（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.1 布尔外覆器和操作\4.1.3 逻辑运算符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2 整数外覆器和运算（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2 整数外覆器和运算（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2 整数外覆器和运算（3）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2.1 整型运算符（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.1 整型运算符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2.1 整型运算符（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.1 整型运算符</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2.2 _c整型速记法（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.2 _c整型速记法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.2.2 _c整型速记法（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.2 整数外覆器和运算\4.2.2 _c整型速记法</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.3 练习（2）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.3 练习</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookTemplate\CppTemplateMetaprogramming\Chapter4\4.3 练习（1）.png">
      <Filter>Book\C++ Template Metaprogramming（C++ 模板元编程）\第4章 整型外覆器和操作\4.3 练习</Filter>
    </Image>
  </ItemGroup>
</Project>
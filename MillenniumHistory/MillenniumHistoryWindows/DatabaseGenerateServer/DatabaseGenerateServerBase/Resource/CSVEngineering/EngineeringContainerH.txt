$Copyright$

#ifndef $NamespaceUppercaseSeparator$_$NamespaceUppercaseSeparator$_CONTAINER_H
#define $NamespaceUppercaseSeparator$_$NamespaceUppercaseSeparator$_CONTAINER_H

#include "CoreTools/CoreToolsDll.h"

#include "$Namespace$Fwd.h"
#include "System/Helper/UnicodeUsing.h"

#include <filesystem>
#include <memory>

namespace $Namespace$
{
    class $Namespace$Container final
    {
    public:
        using ClassType = $Namespace$Container;

        using String = System::String;
$ContainerSharedPtrUsing$
    public:
        explicit $Namespace$Container(const String& directory);

        CLASS_INVARIANT_DECLARE;

$GetContainerSharedPtrUsing$
    private:
        void Parsing(const String& directory);
        void Parsing(const std::filesystem::directory_entry& inputPath);
        void Verify() const;

    private:
$ContainerSharedPtr$    };
}

#endif  // $NamespaceUppercaseSeparator$_$NamespaceUppercaseSeparator$_CONTAINER_H

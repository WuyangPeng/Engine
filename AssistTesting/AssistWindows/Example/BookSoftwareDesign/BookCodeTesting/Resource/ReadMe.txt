书・软件设计・代码单元测试模块 

1. 代码大全 （Code Complete）
（第2版)

官方网站：
http://www.cc2e.com/

★★★
作者：Steve McConnell

第1章 欢迎进入软件构建的世界
第2章 用隐喻来更充分地理解软件开发
第3章 三思而后行：前期准备
第4章 关键的“构建”决策
第5章 软件构建中的设计
第6章 可以工作的类
第7章 高质量的子程序
第8章 防范式编程
第9章 伪代码编程过程
第10章 使用谜题的一般事项
第11章 变量名的力量
第12章 基础数据类型
第13章 不常见的数据类型
第14章 组织直线型代码
第15章 使用条件语句
第16章 控制循环
第17章 不常见的控制结构
第18章 表驱动方法
第19章 一般控制问题
第20章 软件质量概述
第21章 协同构造
第22章 开发者测试
第23章 调试
第24章 重构
第25章 代码调整策略
第26章 代码调整方法
第27章 程序规模对“构筑”的影响
第28章 管理“构筑”
第29章 集成
第30章 编程工具
第31章 布局与风格
第32章 自说明代码 
第33章 个人性格
第34章 软件工发艺术的有关问题
第35章 何处有更多信息

2. 代码整洁之道 （Clean Code）

★★★
作者：Robert C.Martin 

第1章 整洁代码
第2章 有意义的命名
第3章 函数
第4章 注释
第5章 格式
第6章 对象和数据结构
第7章 错误处理
第8章 边界
第9章 单元测试
第10章 类
第11章 系统
第12章 迭进
第13章 并发编程
第14章 逐步改进
第15章 JUnit内幕
第16章 重构SerialDate
第17章 味道和启发

3. 代码质量 （Code Quality）

★★★
作者：Diomidis Spinellis 

第1章 导论
第2章 可靠性
第3章 案例性
第4章 时间性能
第5章 空间性能
第6章 可移植性
第7章 可维护性
第8章 浮点运算

4. 代码阅读 （Code Reading）

官方网站：
http://www.pragmaticprogrammer.com

★★★
作者： Diomidis Spinellis 

第1章 导论
第2章 基本编程元素
第3章 高级C数据类型
第4章 C数据结构
第5章 高级控制流程
第6章 应对大型项目
第7章 编码规范和约定
第8章 文档
第9章 架构
第10章 代码阅读工具
第11章 完整示例

5. 代码整洁之道：程序员的职业素养（The Clean Coder）

★★★
作者：Robert C.Martin 

必读引言
第1章 专业主义
第2章 说“不”
第3章 说“是”
第4章 编码
第5章 测试驱动开发
第6章 练习
第7章 验收测试
第8章 测试策略
第9章 时间管理
第10章 预估
第11章 压力
第12章 协作
第13章 团队与项目
第14章 辅导、学徒期与技艺
附录 工具

6.  编程匠艺：编写卓越的代码（Code Craft）

★★ 
作者：Pete Goodliffe

第1篇 代码表面
	第1章 善于防守：健壮代码的防御性编程技巧
	第2章 精心布局：源代码的版面和样式
	第3章 名正言顺：为有意义的事物起有意义的名称
	第4章 不言自明：编写“自文档化”代码的技巧
	第5章 随篇注释：如何编写代码注释
	第6章 人非圣贤：处理不可避免的情况――代码中的错误情形
第2篇 代码的神秘生命
	第7章 欲善其事，先利其器：使用工具构建软件
	第8章 测试时代：测试代码的魔术
	第9章 寻找缺陷（调试）：当事情进展得不顺利时该怎么办
	第10章 代码构建：将源代码转换为可执行代码的过程
	第11章 追求速度：优化程序和编写高效的代码
	第12章 不安全感综合症：编写安全的程序
第3篇 代码的形成过程
	第13章 崇尚设计：如何创作出优秀的软件设计
	第14章 软件体系结构：奠定软件设计的基础
	第15章 改良与革命：代码是如何成长的
第4篇 “一群”程序员
	第16章 代码猴子：培养正确的编程态度和方法
	第17章 团结就是力量：团队合作与个人程序员
	第18章 安全措施：源代码控制与自我控制
第5篇 开发过程的组成部分
	第19章 注意细节：编写软件规范
	第20章 代码审查：执行代码审查 
	第21章 时间估计：软件时间范围估计的魔术
第6篇 从高处鸟瞰
	第22章 程序秘方：代码开发的方法和过程
	第23章 编程领域大观：不同的编程分支
	第24章 下一步呢：结果好就一切都好

7. 代码之美 （Beautiful Code）

官方网站：
http://www.oreilly.com 、https://www.oreilly.com.cn/

★ 
作者： Andy Oram、Greg Wilson

第1章 正则表达式匹配器
第2章 Subversion中的增量编辑器：灵活的接口
第3章 我从未编写过的最漂亮的代码
第4章 查找
第5章 正确、优美、迅速（按重要性排序）：从设计XML验证器中学到的经验
第6章 集成测试框架：脆弱之美
第7章 漂亮的测试
第8章 图像处理中的即时代码生成
第9章 自顶向下的运算符优先级
第10章 寻求快速的种群计数
第11章 安全通信：自由的技术
第12章 在BioPerl里培育漂亮代码
第13章 基因排序器的设计
第14章 优雅代码随硬件发展的演化
第15章 漂亮的设计会给你带来长远的益处
第16章 Linux内核驱动模型：协作的好处
第17章 额外的间接层
第18章 Python的字典类：如何打造全能战士
第19章 NumPy中的多维迭代器
第20章 NASA火星漫步者任务中的高可靠企业系统
第21章 ERP5：最大可适性的设计
第22章 一匙污水
第23章 MapReduce分布式编程
第24章 美丽的并发
第25章 句法抽象：syntax-case 展开器
第26章 节省劳动的架构：一个面向对象的网络化软件框架
第27章 以REST方式集成业务伙伴
第28章 漂亮的调试
第29章 代码如散文
第30章 当你与世界的联系只有一个按钮时
第31章 Emacspeak：全功能音频桌面
第32章 变动的代码
第33章 为“The Book”编写程序

8.  编写可读代码的艺术（The Art fo Readable Code）

官方网站：
http://www.oreilly.com、 https://www.oreilly.com.cn/

★★ 
作者： Dustin Boswell、Trevor Foucher

第1章 代码应当易于理解
第一部分 表面层次的改进
	第2章 把信息装到名字里
	第3章 不会误解的名字
	第4章 审美
	第5章 该写什么样的注释
	第6章 写出言简意赅的注释
第二部分 简化循环和逻辑
	第7章 把控制流变得易读
	第8章 拆分超长的表达式
	第9章 变量与可读性
第三部分 重新组织代码 
	第10章 抽取不相关的子问题
	第11章 一次只做一件事
	第12章 把想法变成代码 
	第13章 少写代码
第四部分 精选话题
	第14章 测试与可读性
	第15章 设计并改进“分钟/小时计数器”

9.修改代码的艺术（Working Effectively with Legacy Code）

官方网站：
http://www.objectmentor.com、 http://www.michaelfeathers.com （已失效）

★ 
作者：Michael C.Feathers 

第一部分 修改机理
	第1章 修改软件
	第2章 带着反馈工作
	第3章 感知和分离
	第4章 接缝模型
	第5章 工具
第二部分 修改代码的技术
	第6章 时间紧迫，但必须修改
	第7章 漫长的修改
	第8章 添加特性
	第9章 无法将类放入测试用具中
	第10章 无法在测试用具中运行方法
	第11章 修改时应当测试哪些方法
	第12章 在同一地进行多处修改，是否应该将相关的所有类都解依赖
	第13章 修改时应该怎样写测试
	第14章 棘手的库依赖问题
	第15章 到处都是API调用 
	第16章 对代码的理解不足
	第17章 应用毫无结构可言
	第18章 测试代码碍手碍脚
	第19章 对非面向对象的项目，如何案例地对它进行修改
	第20章 处理大类
	第21章 需要修改大量相同的代码
	第22章 要修改一个巨型方法，却没法为它编写测试
	第23章 降低修改的风险
	第24章 当你感到绝望时
第三部分 解依赖技术
	第25章 解依赖技术

10. 梦断代码 （Dreaming In Code）

★ 
作者：Scott Rosenberg 

第0章 软件时间
第1章 死定了
第2章 Agenda之魂
第3章 原型与Python
第4章 乐高王国
第5章 管束奇客和狗
第6章 完成设计方案
第7章 细节视图
第8章 白板上的即时贴
第9章 方法
第10章 工程师和艺术家
第11章 通往狗食版之路

11. 代码之殇（I.M.Wright's "Hard Code"）
（第2版)

★ 
作者：Eric Brechner

第1章 项目管理失当
第2章 过程改进，没有灵丹妙药
第3章 根除低下的效率
第4章 跨越工种
第5章 软件质量不是梦
第6章 有时间就做软件设计
第7章 职业生涯历险记
第8章 自我完善
第9章 成为管理者，而不是邪恶的化身
第10章 微软，你会喜欢它的

12. 代码之外的功夫：程序员精进之路（Programming Beyond Practices）

★ 
作者：Gregory T.Brown

第1章 善用设计原型，探索项目创意
第2章 观察增量变量，发掘隐藏依赖
第3章 准确识别痛点，高效集成服务
第4章 设计严密方案，逐步解决问题
第5章 谨记自底向上，优化软件设计
第6章 认清现实瑕疵，改善数据建模
第7章 逐渐改善流程，合理安排时间
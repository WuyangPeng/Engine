C++ 模板元编程（C++ Template Metaprogramming）

官方网站：
http://www.boost-consulting.com/mplbook （已失效）。
http://www.crystalclearsoftware.com/cgi-bin/boost_wiki/wiki.pl?CPP_Template_Metaprogramming_Book_-_Answers_Page

★★★★
作者： David Abrahams、Aleksey Gurtovoy

习题：

2-0.  见Exercise2_0.h。
2-1.  见Exercise2_1.h。
2-2.  见Exercise2_2.h。
2-3.  见Exercise2_3.h。
2-4.  见Exercise2_4.h。
2-5.  见Exercise2_5.h。
2-6.  已经有提供获得signed integer类型的nusigned对应物的方式 ，估计遗漏的traits已被补全。
2-7.  静态类型系统对能够传递给特定函数的值有所限制。
	  使用静态类型的编程语言是在编译时执行类型检查，而不是在运行时执行类型检查。
2-8.  静态多态：允许不同类型的对象以同样的方式被操纵，只要它们支持某种共通的语法即可。
	  一个操作元数据并可以在编译期调用的函数。
	  一个模板或类只有当它不具有非类型元数据并且返回一个名为type的类型时，才被称为一个元函数。
      传给类模板的实参就是编译期计算的输入，::type成员则是其返回结果。

3-0.  见Exercise3_0.h。
3-1.  见Exercise3_1.h。
3-2.  见Exercise3_2.h。
3-3.  见Exercise3_3.h。
3-4.  见Exercise3_4.h。
3-5.  见Exercise3_5.h。
3-6.  见Exercise3_6.h。
3-7.  见Exercise3_7.h。
3-8.  见Exercise3_8.h。
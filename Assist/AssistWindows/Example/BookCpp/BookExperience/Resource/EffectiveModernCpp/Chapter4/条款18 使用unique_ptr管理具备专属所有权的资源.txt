条款18 使用std::unique_ptr管理具备专属所有权的资源
	★	 在默认情况下std::unique_ptr和裸指针有着相同的尺寸，并且对于大多数的操作，它们都是精确地执行了相同的指令。
	★	 std::unique_ptr的一个常见用法是在对象继承谱系中作为工厂函数的返回型别。
	★	 若析构器是函数指针，那么std::unique_ptr的尺寸一般会增加一到两个字长。
		 若析构器是函数对象，则带来的尺寸变化取决于函数对象中存储了多少状态。
		 无状态的函数对象不会浪费任何存储尺寸。
		 这意味着当一个自定义析构器既可以用函数，又可于用无捕获的lambda表达式来实现时，lambda表达式是更好的选择。
	★	 std::unique_ptr是小巧、高速的、具备只移型别的智能指针，对托管资源实施专属所有权语义。
	★	 默认地，资源析构采用delete运算符来实现，但可以指定自定义删除器。
		 有状态的删除器和采用函数指针实现的删除器会增加std::unique_ptr型别的对象尺寸。
	★	 将std::unique_ptr转换成std::shared_ptr是容易实现的。
More Exceptional C++

官方网站：
http://www.gotw.ca。

★★★
作者：Herb Sutter
其他书籍：《Exceptional C++》、《C++ 编程剖析》、《C++ 编程规范》

知识点 
1.	C++ 基础知识。 

序
	★	怎样才能成为专家？
		1. 掌握基础知识。
		2. 将相同的内容再学习一遍，但这一次，请将你的注意力集中在细节上——这些细节的重要性，你头一次可能并没有认识到。
前言
	何为“More”
	你应该知道的
	如何阅读本书
	名字空间、typename、URL引用以及其它约定
	致谢
泛型程序设计与C++标准库
	条款1 流
	条款2 Predicates，之一：remove()删除了什么？
	条款3 Predicates，之二：状态带来的问题
	条款4 可扩充的模板：使用继承还是traits？
	条款5 typename
	条款6 容器、指针和“不是容器的容器”
	条款7 使用vector和deque
	条款8 使用set和map
	条款9 等同的代码吗？
	条款10 模板特殊化与重载
	条款11 Mastermindx
优化与性能
	条款12 内联
	条款13 缓式优化，之一：一个普通的旧式String
	条款14 缓式优化，之二：引入缓式优化
	条款15 缓式优化，之三：迭代器与引用 
	条款16 缓式优化，之四：多线程环境
异常安全议题及技术
	条款17 构造函数失败，之一：对象生命期
	条款18 构造函数失败，之二：吸收异常？
	条款19 未捕获的异常
	条款20 未管理指针存在的问题，之一：参数求值
	条款21 未管理指针存在的问题，之二：使用auto_ptr？
	条款22 异常安全与类的设计，之一：拷贝赋值
	条款23 异常安全与类的设计，之二：继承
继承与多态
	条款24 为什么要使用多继承？
	条款25 模拟多继承
	条款26 多继承与连体双婴问题
	条款27 （非）纯虚函数
	条款28 受控的多态
内存及资源管理
	条款29 使用auto_ptr
	条款30 智能指针成员，之一：auto_ptr存在的问题
	条款31 智能指针成员，之二：设计ValuePtr
自由函数与宏	
	条款32 递归声明 
	条款33 模拟嵌套函数
	条款34 预处理宏
	条款35 宏定义
杂项议题
	条款36 初始化
	条款37 前置声明
	条款38 typedef
	条款39 名字空间，之一：using声明和using指令
	每款40 名字空间，之二：迁徙到名字空间
后记
	附录A （在多线程环境下）并非优化
	附录B 单线程String实现与多线程安全String实现的对比测试结果
C++ Primer

官方网站 
http://www.informit.com/store/product.aspx?isbn=0201721481 、
http://www.informit.com/title/0321714113。

第4版
★★★
作者：Stanley B.Lippman、Josee Lajoie、Barbara E.Moo。

知识点 
1.	C++基础知识。
2.	C++基础知识练习。
3.	C++标准库知识。

代码 
1.  书籍代码。

要点 
1.	删除0值的指针是安全的（5.11	new和delete表达式）。
2.	通常来说，除非找到选择使用其他容器的更好理由，否则vector容器都是最佳选择（9.5 容器的选用）。
3.	在处理算法时，最好将关联容器上的迭代器视为支持自减运算的输入迭代器，
	而不是完整的双向迭代器（11.3 再谈迭代器）。
4.	按照与成员声明一致的次序编写构造函数初始化列表是个好主意。
	此外，尽可能避免使用成员来初始化其他成员（12.4 构造函数）。
5.	编写模板代码时，对实参类型的要求尽可能少是很有益的（16.1 模板定义）。
6.	抛出指针通常是个坏主意：抛出指针要求在对应处理代码存在的任意地方存在指针所指向的对象（17.1 异常处理）。

第5版
★★★★
作者：Stanley B.Lippman、Josee Lajoie、Barbara E.Moo。
 
知识点 
1.	C++基础知识。
2.	C++基础知识练习。
3.	C++11基础知识。
4.	C++标准库知识（附录A）。
5.	decltype类型指示符（2.5.3 decltype类型指示符）。
6.	确定使用哪种顺序容器（9.1 顺序容器概述）。
7.	无序容器（11.4 无序容器）。
8.	三/五法则（13.1.4 三/五法则）。
9.	对象移动（13.6 对象移动）。
10.	文本查询程序。
11.	转发（16.2.7 转发）。
12.	sizeof...运算符（16.4 可变参数模板）。
13.	正则表达式（17.3 正则表达式）。

代码
1.	书籍代码。

要点 
1.	切勿混用带符号类型和无符号类型（2.1.2 类型转换）。
2.	动态分配一个空数组是合法的（12.2 动态数组）。
3.	使用move的代码应该使用std::move而不是move。这样做可以避免潜在的名字冲突（13.6 对象移动）。
4.	不抛出异常的移动构造函数和移动赋值运算符必须标记为noexcept（13.6 对象移动）。
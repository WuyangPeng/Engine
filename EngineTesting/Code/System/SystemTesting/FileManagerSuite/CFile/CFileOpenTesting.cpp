///	Copyright (c) 2010-2021
///	Threading Core Render Engine
///
///	作者：彭武阳，彭晔恩，彭晔泽
///	联系作者：94458936@qq.com
///
///	标准：std:c++17
///	引擎测试版本：0.7.1.3 (2021/05/18 15:40)

#include "CFileOpenTesting.h"
#include "System/FileManager/CFile.h"
#include "System/FileManager/Flags/CFileFlags.h"
#include "CoreTools/Helper/AssertMacro.h"
#include "CoreTools/Helper/ClassInvariant/SystemClassInvariantMacro.h"
#include "CoreTools/UnitTestSuite/UnitTestDetail.h"

using namespace std::literals;

System::CFileOpenTesting::CFileOpenTesting(const OStreamShared& stream)
    : ParentType{ stream }
{
    SYSTEM_SELF_CLASS_IS_VALID_9;
}

CLASS_INVARIANT_PARENT_IS_VALID_DEFINE(System, CFileOpenTesting)

void System::CFileOpenTesting::DoRunUnitTest()
{
    ASSERT_NOT_THROW_EXCEPTION_0(MainTest);
}

void System::CFileOpenTesting::MainTest()
{
    ASSERT_NOT_THROW_EXCEPTION_0(OpenTest);
    ASSERT_NOT_THROW_EXCEPTION_0(OpenErrorTest);
}

void System::CFileOpenTesting::OpenTest()
{
    const auto cFileName = SYSTEM_FILE_TEXT("Resource/CFileTesting/CFileTestingText.txt"s);

    FILE* file{ nullptr };
    ASSERT_TRUE(OpenCFile(file, cFileName, SYSTEM_FILE_TEXT("r"s)));
    ASSERT_UNEQUAL_NULL_PTR(file);
    ASSERT_TRUE(CloseCFile(file));
}

void System::CFileOpenTesting::OpenErrorTest()
{
    const auto cFileErrorName = SYSTEM_FILE_TEXT("Resource/CFileTesting/CErrorFileTestingText.txt"s);

    FILE* file{ nullptr };
    ASSERT_FALSE(OpenCFile(file, cFileErrorName, SYSTEM_FILE_TEXT("r"s)));
    ASSERT_EQUAL_NULL_PTR(file);
}

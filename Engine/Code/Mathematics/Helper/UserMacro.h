///	Copyright (c) 2011-2020
///	Threading Core Render Engine
///
///	作者：彭武阳，彭晔恩，彭晔泽
///	联系作者：94458936@qq.com
///
///	标准：std:c++17
///	引擎版本：0.5.2.2 (2020/11/05 16:08)

#ifndef MATHEMATICS_HELPER_USER_MACRO_H
#define MATHEMATICS_HELPER_USER_MACRO_H

#include "CoreTools/Helper/UserMacro.h"

#define MATHEMATICS_ClOSE_BEGIN (0x01)

#define CLOSE_USE_EXPORT_TEMPLATE (MATHEMATICS_ClOSE_BEGIN)
#define CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN (MATHEMATICS_ClOSE_BEGIN << 1)
#define CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE (MATHEMATICS_ClOSE_BEGIN << 2)
#define CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE (MATHEMATICS_ClOSE_BEGIN << 3)
#define CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE (MATHEMATICS_ClOSE_BEGIN << 4)
#define CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE (MATHEMATICS_ClOSE_BEGIN << 5)
#define CLOSE_USE_MATHEMATICS_TEMPLATE_TEST (MATHEMATICS_ClOSE_BEGIN << 6)  // 默认关闭

#define MATHEMATICS_ClOSE_END CLOSE_USE_MATHEMATICS_TEMPLATE_TEST

#define CLOSE_MATHEMATICS_MAX (((MATHEMATICS_ClOSE_END) << 1) - 1)

// 编译测试（默认为40，最大值为0x7F）
#define COMPILE_MATHEMATICS_CLOSE 0x00

static_assert(0 <= COMPILE_MATHEMATICS_CLOSE, "COMPILE_MATHEMATICS_CLOSE Must be greater than or equal 0.");
static_assert(COMPILE_MATHEMATICS_CLOSE <= CLOSE_MATHEMATICS_MAX, "COMPILE_MATHEMATICS_CLOSE Must be less than or equal CLOSE_MATHEMATICS_MAX.");

#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_EXPORT_TEMPLATE) != CLOSE_USE_EXPORT_TEMPLATE

    #ifndef BUILDING_STATIC
        #define MATHEMATICS_EXPORT_TEMPLATE static_cast<void>(0)
    #endif  // BUILDING_STATIC

#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_EXPORT_TEMPLATE) != CLOSE_USE_EXPORT_TEMPLATE

#ifdef MATHEMATICS_EXPORT_TEMPLATE

    #define MATHEMATICS_TEMPLATE_DEFAULT_DECLARE MATHEMATICS_DEFAULT_DECLARE
    #define MATHEMATICS_TEMPLATE_HIDDEN_DECLARE MATHEMATICS_HIDDEN_DECLARE

#else  // !MATHEMATICS_EXPORT_TEMPLATE

    #define MATHEMATICS_TEMPLATE_DEFAULT_DECLARE
    #define MATHEMATICS_TEMPLATE_HIDDEN_DECLARE

#endif  // MATHEMATICS_EXPORT_TEMPLATE

// 如果希望Rational类在构造函数传递浮点无穷大或NaN时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN
    #define MATHEMATICS_ASSERT_ON_RATIONAL_CONVERT_NAN static_cast<void>(0)
#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN) != CLOSE_USE_ASSERT_ON_RATIONAL_CONVERT_NAN

// 如果希望Vector2D<Real>::GetBarycentrics在输入退化三角形时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE
    #define MATHEMATICS_ASSERT_ON_BARYCENTRIC2_DEGENERATE static_cast<void>(0)
#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC2_DEGENERATE

// 如果希望Vector3D<Real>::GetBarycentrics在输入退化四面体时断言，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE
    #define MATHEMATICS_ASSERT_ON_BARYCENTRIC3_DEGENERATE static_cast<void>(0)
#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE) != CLOSE_USE_ASSERT_ON_BARYCENTRIC3_DEGENERATE

// 如果要在VariableLengthVector<Real>中检查索引范围，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE
    #define MATHEMATICS_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE static_cast<void>(0)
#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_VECTOR_OUT_OF_RANGE

// 如果要在VariableMatrix<Real>中检查索引范围，请启用此定义。
#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE
    #define MATHEMATICS_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE static_cast<void>(0)
#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE) != CLOSE_USE_ASSERT_VARIABLE_MATRIX_OUT_OF_RANGE

#if !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_MATHEMATICS_TEMPLATE_TEST) != CLOSE_USE_MATHEMATICS_TEMPLATE_TEST

    #ifndef BUILDING_STATIC
        #define MATHEMATICS_TEMPLATE_TEST static_cast<void>(0)
    #endif  // BUILDING_STATIC

#endif  // !defined(COMPILE_MATHEMATICS_CLOSE) || (COMPILE_MATHEMATICS_CLOSE & CLOSE_USE_MATHEMATICS_TEMPLATE_TEST) != CLOSE_USE_MATHEMATICS_TEMPLATE_TEST

// 是否编译为静态库
#ifdef BUILDING_STATIC
    #define BUILDING_MATHEMATICS_STATIC static_cast<void>(0)
#endif  // BUILDING_STATIC

#endif  // MATHEMATICS_HELPER_USER_MACRO_H

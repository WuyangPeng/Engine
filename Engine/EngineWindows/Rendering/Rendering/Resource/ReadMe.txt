渲染库模块

1.	Helper（帮助）

渲染库帮助模块。
目前包含：
（1）用户宏：用于判断是否使用静态库及其他用户设定。 
（2）渲染库宏：渲染库模块所使用的宏，按需要添加。
  
2.	DataTypes（数据类型）

封装了渲染库需要的数据类型。包括半浮点数、颜色管理、变换和范围类。
目前包含：
（1）半浮点数：封装一个半浮点数。
（2）颜色管理：封装颜色管理系统。
（3）转换：封装转换类。
（4）范围：封装转换类。

3.	Resources（资源）

封装了资源类。包括顶点、索引缓冲区和1D、2D、3D、Cube纹理对象以及顶点格式。
目前包含：
（1）顶点缓冲区：实现顶点缓冲区。
（2）索引缓冲区：实现索引缓冲区。
（3）1D纹理对象：实现1D纹理对象。
（4）2D纹理对象：实现2D纹理对象。
（5）3D纹理对象：实现3D纹理对象。
（6）Cube纹理对象：实现Cube纹理对象。
（7）顶点格式：实现顶点格式。

4.	SceneGraph（场景图）

包含抽象渲染API、相机对象、光照、纹理和图像、帧缓冲区和全局渲染状态，包括混合操作、面剔除操作、材质、多边形偏移、目标缓冲区状态、线框模式以及深度缓冲区机制。
支持场景图管理行为，包括树形结构、内部节点、叶节点、点-粒子图元、直线图元、三角形图元、包围体、转换操作、层次结构剔除机制、顶点缓冲区以及索引缓冲区。
目前包含：
（1）  相机对象：实现相机对象。
（2）  节点对象：实现节点对象。
（3）  光照对象：实现光照对象。
（4）  材质对象：实现材质对象。
（5）  点-粒子图元：实现点-粒子图元。
（6）  直线图元：实现直线图元。
（7）  三角形图元：实现三角形图元。
（8）  转换操作：实现转换操作。
（9）  层次结构剔除机制：实现层次结构剔除机制。
（10） 屏幕目标：实现屏幕目标。
（11） 标准网格：实现标准网格。

5.	Controllers（控制器）

各类动画控制器，例如关键帧动画、变形机制、皮肤-骨骼机制、点-粒子系统以及逆向动力学。
目前包含：
（1）  控制器对象：实现控制器对象。
（2）  转换控制器：实现转换控制器。
（3）  皮肤控制器：实现皮肤控制器。
（4）  点控制器：实现点控制器。
（5）  粒子控制器：实现粒子控制器。
（6）  变形控制器：实现变形控制器。
（7）  关键帧控制器：实现关键帧控制器。	 
（8）  混合转换控制器：实现混合转换控制器。
（9）  反向运动控制器：实现反向运动控制器。

6.	ShaderFloats（浮点着色器）

封装浮点着色器。包括摄像机、光源、材料、矩阵等着色器相关数据的更新。
目前包含：
（1） 摄像机浮点着色器：实现摄像机浮点着色器。
（2） 光源浮点着色器：实现光源浮点着色器。
（3） 材料浮点着色器：实现材料浮点着色器。
（4） 矩阵浮点着色器：实现矩阵浮点着色器。

7.	Detail（细节）

支持细分级别计算，包括离散计算、连续计算以及广告牌效果。
目前包含：
（1） 切换节点：实现切换节点。
（2） 广告牌效果：实现广告牌效果。
（3） 折叠记录：实现折叠记录。
（4） LOD网格：实现LOD网格。
（5） LOD节点：实现LOD节点。

8.	Shaders（着色器）

针对着色器和像素着色器提供了基本支持，其中包括着色器程序-着色器常量、
纹理采样器以及程序和纹理图像的共享机制。
目前包含：
（1） 数据：封装着色器所需的数据类。
（2） 像素着色器：封装像素着色器。
（3） 顶点着色器：封装顶点着色器。
（4） 状态：封装状态类。
（5） 视觉效果：封装视觉效果类。 

9.	LocalEffects（局部特效）

支持着色器局部特效计算，包括光照-材质、纹理机制、顶点着色。
待实现功能：
（1） 光照局部特效：封装光照局部特效。
（2） 材质局部特效：封装材质局部特效。
（3） 纹理局部特效：封装纹理局部特效。
（3） 顶点着色局部特效：封装顶点着色局部特效。

10.	GlobalEffects（全局特效）

支持着色器全局特效计算，包括平面反射以及平面投影阴影。
待实现功能：
（1） 平面反射特效：封装平面反射特效。
（2） 平面投影阴影特效：封装平面投影阴影特效。

11.	CurvesSurfaces（曲线曲面）

支持曲线细分和渲染操作。支持表面细分计算和渲染操作。
待实现功能：
（1）  浮点数组：封装浮点数组。
（2）  表面细分计算：封装表面细分计算。
（3）  盒子曲面：封装盒子曲面。
（4）  B样条曲面：封装B样条曲面。
（5）  曲线网格：封装曲线网格。
（6）  曲线线段：封装曲线线段。
（7）  曲线曲面：封装曲线曲面。
（8）  正方形曲面：封装正方形曲面。
（9）  管曲面：封装管曲面。
（10） 反转曲面：封装反转曲面。

12.	Illumination（光照）

封装了光照所需要的一些类。
待实现功能：
（1） 点光源：实现点光源。
（2） 聚光灯：实现聚光灯。
（3） 平行光：实现平行光。

13.	ImageProcessing（图像处理）

封装了图像处理。
待实现功能：
（1）  2D图像处理：实现2D图像处理。
（2）  3D图像处理：实现3D图像处理。

14.	Picture（图像）

封装了图像的读取和写入。
待实现功能：
（1）  图像的读取：实现图像的读取。
（2）  图像的写入：实现图像的写入。

15.	Sorting（排序）

支持渲染排序操作，其中包括二分空间树（BSP树）和入口结构。
待实现功能：
（1）  二分空间树：实现二分空间树。
（2）  入口结构：实现入口结构。

16.	Terrain（地形处理）

支持连续/非连续细分级别的地形处理。
待实现功能：
（1）  地形处理：实现地形处理。

17.	Vertex（顶点）

封装了顶点的实现。
待实现功能：
（1） 顶点：实现顶点的封装。

18.	TextFonts（文本及字体）

封装了文本及字体。
待实现功能：
（1） 文本及字体：实现文本及字体。

19.	ConsoleGraph（控制台图形）

封装了控制台图形的实现。
待实现功能：
（1） 控制台图形：实现控制台图形。

20.	OpenGLAPI（OpenGLAPI）

封装了OpenGL API的实现。
待实现功能：
（1） OpenGL API：实现OpenGL API。

21.	DirectAPI（DirectAPI）

封装了Direct API的实现。
待实现功能：
（1） Direct API：实现Direct API。

22.	Renderers（渲染器）

封装了基于各个环境实现的渲染器基类。包括渲染器无关的纹理对象，顶点缓冲区，索引缓冲区，顶点格式对象。
在各个渲染器中有相应的实现。
待实现功能：
（1） 渲染基础：实现渲染基础。
（2） 渲染参数：实现渲染参数。
（3） 顶点格式对象：实现顶点格式对象。
（4） 索引缓冲区：实现索引缓冲区。
（5） 顶点缓冲区：实现顶点缓冲区。
（6） 纹理对象：实现纹理对象。
（7） 缓冲管理：实现缓冲管理。
（8） 渲染目标：实现渲染目标。

23.	OpenGLRenderer（OpenGL渲染器）

封装了基于OpenGL的抽象API实现。包括纹理对象，顶点缓冲区，索引缓冲区，顶点格式对象等。
待实现功能：
（1）OpenGL映射：实现OpenGL映射。
（2）OpenGL纹理：实现OpenGL纹理。
（3）OpenGL顶点格式：实现OpenGL顶点格式。
（4）OpenGL渲染对象：实现OpenGL渲染对象。
（5）OpenGL位图 ：实现OpenGL位图。
（6）OpenGL缓冲区 ：实现OpenGL缓冲区。

24.	Dx9Renderer（Dx9渲染器）

封装了基于Direct3D的抽象API实现。
待实现功能：
（1）Direct3D映射：实现Direct3D映射。
（2）Direct3D纹理：实现Direct3D纹理。
（3）Direct3D顶点格式：实现Direct3D顶点格式。
（4）Direct3D渲染对象：实现Direct3D渲染对象。
（5）Direct3D位图 ：实现Direct3D位图。
（6）Direct3D缓冲区 ：实现Direct3D缓冲区。

25.	AglRenderer（Agl渲染器）

封装了基于Agl的抽象API实现。
待实现功能：
（1）渲染器：实现基于Agl的渲染器。

26.	GlutRenderer（Glut渲染器）

封装了基于Glut的抽象API实现。
待实现功能：
（1）渲染器：实现基于Glut的渲染器。

27.	GlxRenderer（Glx渲染器）

封装了基于Glx的抽象API实现。
待实现功能：
（1）渲染器：实现基于Glx的渲染器。

28.	WglRenderer（Wgl渲染器）

封装了基于Wgl的抽象API实现。
待实现功能：
（1）渲染器：实现基于Wgl的渲染器。

29.	Lib3ds（3ds）

封装了3ds的实现。
待实现功能：
（1）3ds：实现3ds的封装。

30.	Abuse（Abuse）

封装了Abuse的实现。
待实现功能：
（1）Abuse：实现Abuse的封装。

31.	Demogl（demogl） 

封装了demogl的实现。
待实现功能：
（1）demogl：实现demogl的封装。

32.	DevIL（DevIL）

封装了DevIL的实现。
待实现功能：
（1）DevIL：实现DevIL的封装。

33.	FBX（FBX）

封装了FBX的实现。
待实现功能：
（1）FBX：实现FBX的封装。

34.	JPEG（JPEG）

封装了JPEG的实现。
待实现功能：
（1）JPEG：实现JPEG的封装。

35.	TIFF（TIFF）

封装了TIFF的实现。
待实现功能：
（1）TIFF：实现TIFF的封装。

36.	Openvidia（openvidia）

封装了openvidia的实现。
待实现功能：
（1）openvidia：实现openvidia的封装。

37.	Nethack（nethack）

封装了nethack的实现。
待实现功能：
（1）nethack：实现nethack的封装。

38.	Wing（wing）

封装了wing的实现。
待实现功能：
（1）wing：实现wing的封装。

39.	Wargamer（wargamer）

封装了wargamer的实现。
待实现功能：
（1）wargamer：实现wargamer的封装。

40.	Nvtoolkit（nvtoolkit）

封装了nvtoolkit的实现。
待实现功能：
（1）nvtoolkit：实现nvtoolkit的封装。
/// Copyright (c) 2010-2023
/// Threading Core Render Engine
///
/// 作者：彭武阳，彭晔恩，彭晔泽
/// 联系作者：94458936@qq.com
///
/// 标准：std:c++20
/// 版本：1.0.0.2 (2023/12/08 15:48)

#ifndef RENDERING_HELPER_USER_MACRO_H
#define RENDERING_HELPER_USER_MACRO_H

#include "CoreTools/Helper/UserMacro.h"
#include "Mathematics/Helper/UserMacro.h"

#define RENDERING_ClOSE_BEGIN (0x01)

#define CLOSE_USE_RENDERING_TEMPLATE_TEST (RENDERING_ClOSE_BEGIN)  // 默认关闭
#define CLOSE_USE_RENDERING_EXPORT_TEMPLATE (RENDERING_ClOSE_BEGIN << 1)
#define CLOSE_USE_VALIDATE_COORDINATE_FRAME_ONCE (RENDERING_ClOSE_BEGIN << 2)
#define CLOSE_USE_RENDERING_PRECISION (RENDERING_ClOSE_BEGIN << 3)

#define RENDERING_ClOSE_END CLOSE_USE_RENDERING_PRECISION

#define CLOSE_RENDERING_MAX (((RENDERING_ClOSE_END) << 1) - 1)

// 编译测试（默认为0B0001，最大值为0B1111）
#define COMPILE_RENDERING_CLOSE 0B0000

static_assert(0 <= COMPILE_RENDERING_CLOSE, "COMPILE_RENDERING_CLOSE Must be greater than or equal 0.");
static_assert(COMPILE_RENDERING_CLOSE <= CLOSE_RENDERING_MAX, "COMPILE_RENDERING_CLOSE Must be less than or equal CLOSE_RENDERING_MAX.");

#ifdef _DEBUG

    #if !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_VALIDATE_COORDINATE_FRAME_ONCE) != CLOSE_USE_VALIDATE_COORDINATE_FRAME_ONCE

        // 对基向量进行一次正交性测试。这在调试构建中非常有用，可以捕获不正确指定的向量。
        #define RENDERING_USE_VALIDATE_COORDINATE_FRAME_ONCE static_cast<void>(0)

    #endif  // !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_VALIDATE_COORDINATE_FRAME_ONCE) != CLOSE_USE_VALIDATE_COORDINATE_FRAME_ONCE

#endif  // _DEBUG

#if !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_TEMPLATE_TEST) != CLOSE_USE_RENDERING_TEMPLATE_TEST

    #define RENDERING_TEMPLATE_TEST static_cast<void>(0)

#endif  // !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_TEMPLATE_TEST) != CLOSE_USE_RENDERING_TEMPLATE_TEST

#if !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_EXPORT_TEMPLATE) != CLOSE_USE_RENDERING_EXPORT_TEMPLATE

    #define RENDERING_EXPORT_TEMPLATE static_cast<void>(0)

#endif  // !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_EXPORT_TEMPLATE) != CLOSE_USE_RENDERING_EXPORT_TEMPLATE

#if !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_PRECISION) != CLOSE_USE_RENDERING_PRECISION

    // 启用精度更高的算法。
    #define RENDERING_USE_PRECISION static_cast<void>(0)

#endif  // !defined(COMPILE_RENDERING_CLOSE) || (COMPILE_RENDERING_CLOSE & CLOSE_USE_RENDERING_PRECISION) != CLOSE_USE_RENDERING_PRECISION

#ifdef RENDERING_EXPORT_TEMPLATE

    #define RENDERING_TEMPLATE_DEFAULT_DECLARE RENDERING_DEFAULT_DECLARE

#else  // !RENDERING_EXPORT_TEMPLATE

    #define RENDERING_TEMPLATE_DEFAULT_DECLARE

#endif  // RENDERING_EXPORT_TEMPLATE

#ifdef BUILDING_STATIC

    #define BUILDING_RENDERING_STATIC static_cast<void>(0)

#endif  // BUILDING_STATIC

#endif  // RENDERING_HELPER_USER_MACRO_H

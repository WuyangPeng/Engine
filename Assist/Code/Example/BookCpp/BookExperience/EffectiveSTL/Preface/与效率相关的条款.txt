涉及效率的条款

我考虑过在《Effective STL》中包含一章关于效率的，但我最后决定当前的组织是更好的。仍然，许多项目关注与减少空间和运行期需要。为了方便你的性能提高，这里有一张包含实际上关于效率的章节的表：
条款4：用empty来代替检查size()是否为0 
条款5：尽量使用区间成员函数代替它们的单元素兄弟
条款14：使用reserve来避免不必要的重新分配
条款15：小心string实现的多样性
条款23：考虑用有序vector代替关联容器1
条款24：当关乎效率时应该在map::operator[]和map-insert之间仔细选择
条款25：熟悉非标准散列容器
条款29：需要一个一个字符输入时考虑使用istreambuf_iterator 
条款31：了解你的排序选择
条款44：尽量用成员函数代替同名的算法
条款46：考虑使用函数对象代替函数作算法的参数
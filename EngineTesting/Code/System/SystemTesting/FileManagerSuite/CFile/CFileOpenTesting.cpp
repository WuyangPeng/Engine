///	Copyright (c) 2010-2023
///	Threading Core Render Engine
///
///	作者：彭武阳，彭晔恩，彭晔泽
///	联系作者：94458936@qq.com
///
///	标准：std:c++20
///	版本：0.9.1.4 (2023/08/31 17:23)

#include "CFileOpenTesting.h"
#include "System/FileManager/CFile.h"
#include "CoreTools/Helper/AssertMacro.h"
#include "CoreTools/Helper/ClassInvariant/SystemClassInvariantMacro.h"
#include "CoreTools/UnitTestSuite/UnitTestDetail.h"

System::CFileOpenTesting::CFileOpenTesting(const OStreamShared& stream)
    : ParentType{ stream }
{
    SYSTEM_SELF_CLASS_IS_VALID_9;
}

CLASS_INVARIANT_PARENT_IS_VALID_DEFINE(System, CFileOpenTesting)

void System::CFileOpenTesting::DoRunUnitTest()
{
    ASSERT_NOT_THROW_EXCEPTION_0(MainTest);
}

void System::CFileOpenTesting::MainTest()
{
    ASSERT_NOT_THROW_EXCEPTION_0(OpenSuccessTest);
    ASSERT_NOT_THROW_EXCEPTION_0(OpenErrorTest);
}

void System::CFileOpenTesting::OpenSuccessTest()
{
    auto file = OpenFile(SYSTEM_FILE_TEXT("r"));

    ASSERT_NOT_THROW_EXCEPTION_1(CloseFile, file);
}

void System::CFileOpenTesting::OpenErrorTest()
{
    const auto cFileErrorName = SYSTEM_FILE_TEXT("Resource/CFileTesting/CErrorFileTestingText.txt");

    FILE* file{ nullptr };
    ASSERT_FALSE(OpenCFile(file, cFileErrorName, SYSTEM_FILE_TEXT("r")));
    ASSERT_EQUAL_NULL_PTR(file);

    if (file != nullptr)
    {
        ASSERT_NOT_THROW_EXCEPTION_1(CloseFile, file);
    }
}

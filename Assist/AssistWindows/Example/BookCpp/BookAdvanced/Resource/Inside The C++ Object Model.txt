深度探索C++对象模型（Inside The C++ Object Model）

★
作者：Stanley B.Lippman
其他书籍：《C++ Primer》、《Essential C++》

知识点 
1.	C++ 基础知识。 

前言
	什么是C++对象模型
	本书组织
	预定的读者
	程序范例及其执行	
	参考书目
第1章 关于对象
	加上封装后的布局成本
	1.1 C++对象模式
		简单对象模型
		表格驱动对象模型
		C++对象模型
		对象模型如何影响程序
	1.2 关键词所带来的差异
		关键词的困扰  
		策略性正确的struct
	1.3 对象的差异
		指针的类型
		加上多态之后
第2章 构造函数语意学
	2.1 Default Constructor的构造操作  
		“带有Default Constructor”的Member Class Object  
		“带有Default Constructor”的Base Class  
		“带有一个Virtual Function”的Class  
		“带有一个Virtual Base Class”的Class  
		总结  
	2.2 Copy Constructor的构造操作  
		Default Memberwise Initialization  
		Bitwise Copy Semantics
		不要Bitwise Copy Semantics！  
		重新设定Virtual Table的指针  
		处理Virtual Base Class Subobject  
	2.3 程序转化语意学
		明确的初始化操作
		参数的初始化
		返回值的初始化
		在使用者层面做优化
		在编译器层面做优化
		Copy Constructor：要还是不要？  
		摘要  
	2.4 成员们的初始化队伍
第3章 Data语意学
	3.1 Data Member的绑定
	3.2 Data Member的布局
	3.3 Data Member的存取 
		Static Data Members 
		Nonstatic Data Members 
	3.4 “继承”与Data Member  
		只要继承不要多态 
		加上多态
		多重继承
		虚拟继承
	3.5 对象成员的效率
	3.6 指向Data Members的指针
		“指向Members的指针”的效率问题 
第4章 Function语意学
	4.1 Member的各种调用方式  
		Nonstatic Member Functions
		Virtual Member Functions
		Static Member Functions
	4.2 Virtual Member Functions
		多重继承下的Virtual Functions  
		虚拟继承下的Virtual Functions  
	4.3 函数的效能  
	4.4 指向Member Function的指针
		支持“指向Virtual Member Functions”的指针 
		在多重继承之下，指向Member Functions的指针 
		“指向Member Functions之指针”的效率 
	4.5 Inline Functions 
		形式参数
		局部变量
第5章 构造、解构、拷贝语意学
	纯虚函数的存在
	虚拟规格的存在
	虚拟规格中const的存在 
	重新考虑class的声明 
	5.1 “无继承”情况下的对象构造 
		抽象数据类型
		为继承做准备 
	5.2 继承体系下的对象构造  
		虚拟继承 
		vptr初始化语意学
	5.3 对象复制语意学
	5.4 对象的效能
	5.5 析构语意学
第6章 执行期语意学
	6.1 对象的构造和析构
		全局对象
		局部静态对象
		对象数组
		Default Constructors和数组 
	6.2 new和delete运算符  
		针对数组的new语意  
		Placement Operator new的语意  
	6.3 临时性对象
		临时性对象的迷思
第7章 站在对象模型的类端
	7.1 Template  
		Template的“实例化”行为
		Template的错误报告
		Template中的名称决议法
		Member Function的实例化行为
	7.2 异常处理
		Exception Handling快速检阅 
		对Exception Handling的支持 
	7.3 执行期类型识别
		Type-Safe Downcast
		Type-Safe Dynamic Cast
		References并不是Pointers 
		Typeid运算符 
	7.4 效率有了，弹性呢？ 
		动态共享函数库
		共享内存
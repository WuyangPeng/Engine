C++ 数据抽象和问题求解（Data Abstraction & Problem Solving with C++）
（第6版）

官方网站：
http://www.pearsonhighered.com/carrano。

○
作者：Frank M.Carrano、Timothy Henry

联系作者：
carrano@acm.org

致谢
前言
	联系我们
	学习注意事项
	本书组织结构
	内容一览表
	新内容
	增强学习的特性
	获取教师资源和学生资源
	教师资源
	学生资源
	章节概述
第1章 数据抽象：墙
	1.1 面向对象的概念
		1.1.1 面向对象分析与设计
		1.1.2 面向对象解决方案的特征
	1.2 获得更好的解决方案
		1.2.1 内聚
		1.2.2 耦合
	1.3 规范
		1.3.1 操作契约
		1.3.2 特殊情况
		1.3.3 抽象
		1.3.4 信息隐藏
		1.3.5 最小且完整的接口
	1.4 抽象数据类型
		1.4.1 设计ADT
		1.4.2 涉及其他ADT的ADT
	1.5 ADT包
		1.5.1 确定行为
		1.5.2 指定数据和操作
		1.5.3 ADT的模板接口
		1.5.4 使用ADT包
C++片段1 C++类
	C1.1 待解决的问题
		C1.1.1 私有数据字段
		C1.1.2 构造函数和析构函数
		C1.1.3 方法
		C1.1.4 防止编译错误
	C1.2 实现解决方案
	C1.3 模板
	C1.4 继承
		C1.4.1 基类和派生类
		C1.4.2 重写基类方法
	C1.5 虚方法和抽象类
		C1.5.1 虚方法
		C1.5.2 抽象类
第2章 递归：镜子
	2.1 递归解决方案
	2.2 返回值的递归
		2.2.1 递归值函数：n的阶乘
		2.2.2 箱式跟踪
	2.3 执行动作的递归
	2.4 递归与数组
		2.4.1 逆置数组项
		2.4.2 折半查找
		2.4.3 查找数组中的最大值
		2.4.4 查找数组中第k个最小值
	2.5 组织数据
	2.6 更多示例
		2.6.1 Fibonacci数列（兔子繁殖）
		2.6.2 组织游行队伍
		2.6.3 从n个事物中选出k个
	2.7 递归和效率
第3章 基于数组的实现
	3.1 办法
		3.1.1 核心方法
		3.1.2 使用大小固定的数组
	3.2 ADT包的基于数组的实现
		3.2.1 头文件
		3.2.2 定义核心方法
		3.2.3 测试核心方法
		3.2.4 实现更多方法
		3.2.5 删除项的方法
		3.2.6 测试
	3.3 在实现中使用递归
		3.3.1 getIndexOf方法
		3.3.2 getFrequencyOf方法
C++片段2 指针、多态和内存分配
	C2.1 变量的内存分配和方法的前期绑定
	C2.2 需要解决的问题
	C2.3 指针与程序的自由存储
		C2.3.1 释放内存
		C2.3.2 避免内存泄漏
		C2.3.3 避免悬挂指针
	C2.4 虚方法和多态
	C2.5 数组的动态分配
第4章 基于链表的实现
	4.1 预备知识
	4.2 ADT包的基于链表的实现
		4.2.1 头文件
		4.2.2 定义核心方法
		4.2.3 实现更多方法
	4.3 在基于链表的实现中使用递归
	4.4 测试多个ADT实现
	4.5 比较基于数组的实现和基于链表的实现
第5章 作为问题求解技术的递归
	5.1 定义语言
		5.1.1 语法知识基础
		5.1.2 两种简单的语言
	5.2 代数表达式
		5.2.1 代数表达式的类型
		5.2.2 前缀表达式
		5.2.3 后缀表达式
		5.2.4 完全括号化表达式
	5.3 回溯
		5.3.1 查找航线
		5.3.2 八皇后问题
	5.4 递归和数学归纳法的关系
		5.4.1 递归阶乘函数的正确性
		5.4.2 Hanoi塔的工作量
第6章 栈
	6.1 ADT栈
		6.1.1 在设计解决方案期间开发ADT
		6.1.2 ADT栈的规范
	6.2 栈的简单应用
		6.2.1 检查括号匹配
		6.2.2 识别语言中的字符串
	6.3 栈在代数表达式中的应用
		6.3.1 计算后缀表达式
		6.3.2 中缀表达式与后缀表达式的等价转换
	6.4 使用栈查找航班图
	6.5 栈和递归的关系
C++片段3 异常
	C3.1 背景知识
	C3.2 断言
	C3.3 抛出异常
	C3.4 处理异常
		C3.4.1 多个catch块
		C3.4.2 未捕获的异常
	C3.5 程序员定义的异常类
第7章 实现ADT栈
	7.1 基于数组的实现
	7.2 基于链表的实现
	7.3 在实现中使用异常
第8章 列表
	8.1 指定ADT列表
	8.2 使用列表操作
	8.3 ADT列表的模板接口
第9章 实现列表
	9.1 基于数组的ADT列表实现
		9.1.1 头文件
		9.1.2 实现文件
	9.2 基于链表的ADT列表实现
		9.2.1 头文件
		9.2.2 实现文件
		9.2.3 在LinkedList的方法中使用递归
	9.3 两种实现的比较
第10章 算法的效率
	10.1 什么是好的解决方案
	10.2 测量算法的效率
		10.2.1 算法的执行时间
		10.2.2 算法增长率
		10.2.3 分析与大O表示法
		10.2.4 正确分析问题
		10.2.5 查找算法的效率
第11章 排序算法及其效率
	11.1 基本排序算法
		11.1.1 选择排序
		11.1.2 起泡排序
		11.1.3 插入排序
	11.2 较快排序算法 
		11.2.1 归并排序
		11.2.2 快速排序
		11.2.3 基数排序
	11.3 各种排序算法的比较
C++片段4 类关系和重用
	C4.1 回顾继承
		C4.1.1 类的公有、私有和受保护部分
		C4.1.2 公有、私有和受保护继承
		C4.1.3 is-a和as-a关系
	C4.2 包含：has-a关系
	C4.3 回顾抽象基类
第12章 有序表及其实现
	12.1 指定ADT有序表
		12.1.1 ADT有序表的模板接口
		12.1.2 使用有序表的操作
	12.2 基于链表的实现
		12.2.1 头文件
		12.2.2 实现文件
		12.2.3 基于链表的实现的效率
	12.3 使用ADT列表的实现
		12.3.1 包含
		12.3.2 公有继承
		12.3.3 私有继承
第13章 队列和优先队列
	13.1 ADT队列
	13.2 ADT队列的简单应用
		13.2.1 读取字符串
		13.2.2 识别回文
	13.3 ADT优先队列
	13.4 应用：模拟
	13.5 面向位置和面向值的ADT
第14章 队列和优先队列的实现
	14.1 ADT队列的实现
		14.1.1 使用ADT列表的实现
		14.1.2 基于链表的实现
		14.1.3 基于数组的实现
		14.1.4 比较实现
	14.2 ADT优先队列的实现
C++片段5 运算符重载和友元访问
	C5.1 重载运算符
		C5.1.1 重载=进行赋值
		C5.1.2 重载+进行赋值
	C5.2 友元访问和<<的重载
第15章 树
	15.1 术语
		15.1.1 树的类型
		15.1.2 树的高度
		15.1.3 满二叉树、完全二叉树和平衡二叉树
		15.1.4 二叉树的最大和最小高度
	15.2 ADT二叉树
		15.2.1 二叉树的遍历
		15.2.2 二叉树的操作
		15.2.3 ADT二叉树的模板接口
	15.3 ADT二叉查找树
		15.3.1 二叉查找树的操作
		15.3.2 查找二叉查找树
		15.3.3 创建二叉查找树
		15.3.4 遍历二叉查找树
		15.3.5 二叉查找树操作的效率
第16章 树的实现
	16.1 二叉树中的节点
		16.1.1 基于数组的表示
		16.1.2 基于链表的表示
	16.2 ADT二叉树基于链表的实现
		16.2.1 头文件
		16.2.2 实现
	16.3 ADT二叉查找树基于链表的实现
		16.3.1 ADT二叉查找树操作的算法 
		16.3.2 BinarySearchTree类
	16.4 在文件中保存二叉查找树
	16.5 树排序
	16.6 一般树
C++片段6 迭代器
	C6.1 迭代器
		C6.1.1 常见的迭代器操作
		C6.1.2 使用迭代器操作
		C6.1.3 实现迭代器
	C6.2 迭代器的高级功能
第17章 堆
	17.1 ADT堆
	17.2 堆的基于数组的实现
		17.2.1 基于数组的堆操作的算法 
		17.2.2 实现
	17.3 ADT优先队列的堆实现
	17.4 堆排序
第18章 字典及其实现
	18.1 ADT字典
	18.2 可能的实现
		18.2.1 ADT基于数组的有序实现
		18.2.2 ADT字典的二叉查找树实现
	18.3 选择实现
	18.4 散列
		18.4.1 散列函数
		18.4.2 解决冲突
		18.4.3 散列的效率
		18.4.4 如何确立散列函数
		18.4.5 字典遍历：散列的低效操作
		18.4.6 使用散列和分离实现ADT字典
第19章 平衡查找树
	19.1 平衡查找树
	19.2 2-3树
		19.2.1 遍历2-3树
		19.2.2 查找2-3树
		19.2.3 在2-3树中插入数据
		19.2.4 从2-3树中删除数据
	19.3 2-3-4树
		19.3.1 查找和遍历2-3-4树
		19.3.2 在2-3-4树中插入数据
		19.3.3 从2-3-4树中删除数据
	19.4 红-黑树
		19.4.1 查找和遍历红-黑树
		19.4.2 红-黑树的插入和删除
	19.5 AVL树
第20章 图
	20.1 术语
	20.2 将图作为ADT
	20.3 图的遍历
		20.3.1 深度优先查找
		20.3.2 广度优先查找
	20.4 图的应用
		20.4.1 拓扑排序
		20.4.2 生成树
		20.4.3 最小生成树
		20.4.4 最短路径
		20.4.5 回路
		20.4.6 一些复杂问题
第21章 外部存储中的数据处理
	21.1 了解外部存储
	21.2 排序外部文件的数据
	21.3 外部字典
		21.3.1 确定外部文件的索引
		21.3.2 外部散列
		21.3.3 B-树
		21.3.4 遍历
		21.3.5 多索引
C++片段7 标准模板库
	C7.1 STL容器
		C7.1.1 STL容器适配器
		C7.1.2 顺序容器
		C7.1.3 关联容器
	C7.2 STL算法 
附录
	附录A 回顾C++基础
	附录B 编程中的重要主题
	附录C 统一建模语言
	附录D 软件生命周期
	附录E 数学归纳法
	附录F 算法验证
	附录G C++文件基础
	附录H C++头文件和标准函数
	附录I C++文档系统
	附录J ASCII字符代码
	附录K 针对Java编程人员的C++知识
	附录L 针对Python编程人员的C++知识
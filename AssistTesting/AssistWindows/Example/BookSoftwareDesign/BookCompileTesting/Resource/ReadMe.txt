书 软件设计 编译 模块 

1.  编程语言实现模式（Language Implementation Patterns）

官方网站：
http://www.pragprog.com/titles/tpdsl、 http://www.antlr.org/support.html 

☆
作者：Terence Parr  

第1部分 读取输入
第1章：初探语言应用
第2章：基本解析模式
第3章：高阶解析模式
第2部分 分析输入
第4章：从语法树构建中间表示
第5章：遍历并改写树形结构
第6章：记录并识别程序中的符号
第7章：管理数据聚集的符号表
第8章：静态类型检查
第3部分 解释执行
第9章：构建高级解释器
第10章：构建字节码解释器
第4部分 生成输出
第11章：语言的解释
第12章：使用模板生成DSL
第13章：知识汇总

2.  编译原理（Compilers Principles,techniques and Tools）
（第2版）

官方网站：
http://dragonbook.stanford.edu （已失效）

☆
作者： Alfred V.Aho

第1章：引论
第2章：一个简单的语法制导翻译器
第3章：词法分析
第4章：语法分析
第5章：语法制导的翻译
第6章：中间代码的生成
第7章：运行时刻环境
第8章：代码生成
第9章：机器无关优化
第10章：指令级并行性
第11章：并行性和局部性优化
第12章：过程间分析

3.  高级编译器设计与实现（Advanced Compiler Design and Implementation）

官方网站：
http://books.elsevier.com/us/mk/us/subindex.asp?maintarget=compaanions/defaultindividual.asp&isbn=1558603204 

☆
作者：Steven S.Muchnick 

第1章：高级主题介绍
第2章：非形式化编译算法表示
第3章：符号表结构
第4章：中间表示
第5章：运行时支持
第6章：自动产生代码生成器
第7章：控制流分析
第8章：数据流分析
第9章：依赖关系分析和依赖图
第10章：别名分析 
第11章：优化简介
第12章：前期优化
第13章：冗余删除
第14章：循环优化
第15章：过程优化
第16章：寄存器分配
第17章：代码调度
第18章：控制流和低级优化
第19章：过程间分析和优化
第20章：存储层次优化
第21章：编译器实例分析与未来的发展趋势

4.  现代编译原理――C语言描述（Modern Compiler Implementation in C）

官方网站：
http://www.cs.princetion.edu/~appel/modern/c （已失效）

☆
作者： Andrew W.Appel

第一部分 编译基本原理
第1章：绪论
第2章：词法分析
第3章：语法分析
第4章：抽象语法
第5章：语义分析
第6章：活动记录
第7章：翻译成中间代码
第8章：基本块和轨迹
第9章：指令选择
第10章：活跃分析
第11章：寄存器分配
第12章：整合成一体
第二部分 高级主题
第13章：垃圾收集
第14章：面向对象的语言
第15章：函数式程序设计语言
第16章：多态类型
第17章：数据流分析
第18章：循环优化
第19章：静态单赋值形式
第20章：流水和调度
第21章：存储层次


5.  计算机程序的构造和解释（Structure and Interpretation of Computer Programs）

官方网站：
http://www-mitpress.mit.edu/sicp （已失效）

☆
作者： Harold Abelson、Gerald Jay Sussman

第1章：构造过程抽象
第2章：构造数据抽象
第3章：模块化、对象和状态
第4章：元语言抽象
第5章：寄存器机器里的计算
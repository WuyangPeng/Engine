框架库模块

1.	Macro（宏）

系统宏。主要封装各个系统的main函数调用。
 待实现功能：
（1）用户宏：用于是否使用静态库及其他用户设定。
（2）框架库宏：框架库模块所使用的宏，按需要添加。
（3）主函数宏：框架库主函数所使用的宏。
（4）中间层宏：框架库中间层所使用的宏。

2.	MainFunctionHelper（主函数帮助）

主函数帮助类。封装了控制台、Windows、OpenGL、Android等操作系统的入口函数，
使得它们能在其他系统中正常运行。
待实现功能：
（1）控制台主函数帮助：封装控制台主函数帮助。
（2）Windows主函数帮助：封装Windows主函数帮助。
（3）OpenGL主函数帮助：封装OpenGL主函数帮助。
（4）Android主函数帮助：封装Android主函数帮助。
（5）环境目录：封装环境目录。

3.	WindowCreate（窗口创建）

封装了Windows的窗口创建。包括窗口标志、点、大小、创建参数、实例参数等相关类，
使得其他操作系统也能正常调用这些接口。
待实现功能：
（1）窗口大小：封装窗口大小。
（2）窗口点：封装窗口点。
（3）窗口参数：封装窗口参数。
（4）窗口句柄： 封装窗口句柄。

4.	WindowProcess（窗口进程）

封装了Windows的窗口进程。包括按键和鼠标类型、进程管理类、窗口消息、窗口循环和中间层的基类。
待实现功能：
（1） 消息循环：封装消息循环。
（2） 消息接口：封装消息接口。
（3） 消息管理：封装消息管理。
（4） 消息句柄：封装消息句柄。
（5） window消息单元测试：封装window消息单元测试。

5.	WindowRegister（窗口注册）

封装了Windows的窗口注册。包括窗口注册需要的各种参数：光标、图标、背景刷等。
待实现功能：
（1） 注册参数：封装注册参数。
（2） 注册画刷：封装注册画刷。
（3） 注册句柄：封装注册句柄。

6.	Application（应用）

封装了各个系统的键盘和鼠标的控制，各平台的应用基础信息和像素场景、摄像机运动、对象运动等应用相关的类。
待实现功能：
（1） 键盘和鼠标的控制：封装键盘和鼠标的控制。
（2） 性能测量：封装性能测量。
（3） 像素场景：封装像素场景。
（4） 摄像机运动：封装摄像机运动。
（5） 对象运动：封装对象运动。

7.	MiddleLayer（中间层）

封装了各个中间层类，包括模型、视图、控制器系统、含像素绘制的中间层、摄像机和对象运动的中间层和一个游戏系统管理器结构。
这个游戏系统管理器分为输入管理器、网络管理器、对象逻辑、物理模拟、消息管理器、事件管理器、系统管理器、资源管理器、音频管理器、相机系统、渲染管理器、GUI管理器构成。
待实现功能：
（1） 模型、视图、控制器系统：实现模型、视图、控制器系统。
（2） 游戏系统管理器系统：实现游戏系统管理器系统。

8.	WindowsAPIFrame（WindowsAPI框架）

封装了Windows API框架。使得其他系统也能正常调用Windows框架。
待实现功能：
（1）Windows API框架：实现Windows API框架。

9.	OpenGLGlutFrame（Glut框架）

封装了OpenGL Glut API框架。使得各种系统能正常调用OpenGL API框架。还包括回调、进程等相关类。
待实现功能：
（1）OpenGL Glut API框架：实现OpenGL Glut API框架。

10.	AndroidFrame（Android框架）

封装了Android框架。使得其他系统也能正常调用Windows框架。还包括回调、进程等相关类。
待实现功能：
（1）Android API框架：实现Android API框架。

11. LinuxFrame（Linux框架）

封装了Linux框架。使得其他系统也能正常调用Linux框架。
待实现功能：
（1）Linux API框架：实现Linux API框架。

12. MacintoshFrame（Macintosh框架）

封装了Macintos框架。使得其他系统也能正常调用Macintos框架。
待实现功能：
（1）Macintos API框架：实现Macintos API框架。
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="源文件">
      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
    </Filter>
    <Filter Include="头文件">
      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
      <Extensions>h;hh;hpp;hxx;hm;inl;inc;ipp;xsd</Extensions>
    </Filter>
    <Filter Include="资源文件">
      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
    </Filter>
    <Filter Include="资源文件\Todo">
      <UniqueIdentifier>{0cbb3d6c-c8df-4ce5-a8c7-b5c87781efe1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book">
      <UniqueIdentifier>{3ac52516-ecbf-48ea-b5fa-946257ab2515}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++">
      <UniqueIdentifier>{8a808920-e31e-4d49-9c91-ad8bf501fce4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）">
      <UniqueIdentifier>{aac700e3-f45a-4097-a61b-a23f25a72344}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）">
      <UniqueIdentifier>{41125b99-487f-4ea4-b07e-0888f87d1304}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++">
      <UniqueIdentifier>{700d8518-5d77-4c1b-be76-fa5a901e0f55}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++">
      <UniqueIdentifier>{305f1c60-615e-4761-9e2e-98571aa109ee}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL">
      <UniqueIdentifier>{ce48589a-b143-41f7-97de-ff7797447238}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++">
      <UniqueIdentifier>{77d7883d-cc85-406b-ba14-7dfa258b7c58}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）">
      <UniqueIdentifier>{5fa7f33d-33d5-4b36-8965-528f7b8543b9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++">
      <UniqueIdentifier>{661bcf4a-d14f-4e5b-8161-d4efe9a0b727}</UniqueIdentifier>
    </Filter>
    <Filter Include="Helper 头文件">
      <UniqueIdentifier>{3aeb00be-2c4c-49c2-ad74-e0b162a5ac05}</UniqueIdentifier>
    </Filter>
    <Filter Include="Placeholder 头文件">
      <UniqueIdentifier>{555e94a3-814d-4c5c-8e30-6f1ad21c29b8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Placeholder 源文件">
      <UniqueIdentifier>{a42b6aa9-bbdf-41da-ad46-2229aa8e0010}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言">
      <UniqueIdentifier>{dd1fbc5c-a4e5-4588-8fb4-e0c26d9a46b0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.1 序言">
      <UniqueIdentifier>{d9dc8d92-cbd5-454e-b570-5e331d3cd05b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.2 致谢">
      <UniqueIdentifier>{9be0f075-62c0-4ad4-8de4-daf73c2260db}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读">
      <UniqueIdentifier>{d409196a-b6f1-473b-b589-60f43c7bb801}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语">
      <UniqueIdentifier>{4622a86e-5ae6-481c-b80f-acad1b58d915}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读\0.3.2 命名习惯">
      <UniqueIdentifier>{c6f88b4a-1f51-4f90-b96d-4e83131d76f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读\0.3.3 关于线程">
      <UniqueIdentifier>{481d5e26-5212-4dbd-9c50-cbf5cd02ed0c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读\0.3.4 TR1和Boost">
      <UniqueIdentifier>{b81f7e22-df9d-41d7-b2c9-97839ac5709b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第1章 自己习惯C++">
      <UniqueIdentifier>{a4bf465c-761b-48af-ab69-4614358e6a96}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第1章 自己习惯C++\条款01 视C++为一个语言联邦">
      <UniqueIdentifier>{a3330d25-2bf8-4eaa-88bf-26acb615d2d3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第1章 自己习惯C++\条款02 尽量以const，enum，inline代替#define">
      <UniqueIdentifier>{f58eadb4-69f7-4459-8327-ce9c18950384}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第1章 自己习惯C++\条款03 尽可能使用const">
      <UniqueIdentifier>{6fc9e80a-8385-433b-9f9c-735a07f36af8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第1章 自己习惯C++\条款04 确定对象被使用前已先被初始化">
      <UniqueIdentifier>{f1b1ecd8-df7f-4a64-a371-3011711a7985}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算">
      <UniqueIdentifier>{a645a07b-cfe6-4a25-aadc-781c13cdf83d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款05 了解C++默默编写并调用哪些函数">
      <UniqueIdentifier>{476cdf4d-0b05-4db3-aa02-288092f872aa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款06 若不想使用编译器自动生成的函数，就该明确拒绝">
      <UniqueIdentifier>{a27653ff-3ce2-4b6a-b4e4-ab2ca1031bb2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款07 为多态基类声明virtual析构函数">
      <UniqueIdentifier>{e50679cb-cc64-438e-82e5-fb113384d131}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款08 别让异常逃离析构函数">
      <UniqueIdentifier>{d800c6df-9130-4604-b231-164de1abf9a7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款09 绝不在构造和析构过程中调用virtual函数">
      <UniqueIdentifier>{e7997ac4-7403-4e88-a8c3-172e03c742c6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款10 令operator=返回一个reference to %2athis">
      <UniqueIdentifier>{d71d7f33-7728-4aaa-8485-7f7b7348342c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款11 在operator=中处理“自我赋值”">
      <UniqueIdentifier>{e8131fcd-df53-4690-b79e-5217a0231271}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第2章 构造，析构，赋值运算\条款12 复制对象时勿忘其每一个成分">
      <UniqueIdentifier>{b20be434-ef92-406d-a165-24fcf8fc9594}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理">
      <UniqueIdentifier>{0c0e1a5b-dbfd-44ca-bddc-8c01e96a4332}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理\条款13 以对象管理资源">
      <UniqueIdentifier>{3cf00df4-081b-452f-b4c4-29fd4e268baf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理\条款14 在资源管理类中小心coping行为">
      <UniqueIdentifier>{e460c1c0-6cb3-4a0f-bb58-9453bee6e347}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理\条款15 在资源管理类中提供对原始资源的访问">
      <UniqueIdentifier>{2d582c59-1b38-440d-8e10-64f9861f0cd1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理\条款16 成对使用new和delete时要采取相同形式">
      <UniqueIdentifier>{ccb29ae4-df34-4212-8df1-b278210fe8f5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第3章 资源管理\条款17 以独立语句将newed对象置入智能指针">
      <UniqueIdentifier>{3cf3f715-c87b-445a-aaaa-d039e751f090}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明">
      <UniqueIdentifier>{4e5cedb7-f750-4897-8a3e-3907b9d22d3f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款18 让接口容易被正确使用，不易被误用">
      <UniqueIdentifier>{1b9dea5b-c910-4857-ade8-2aa6554504c7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款19 设计class犹如设计type">
      <UniqueIdentifier>{3d337ab2-63c8-42d4-9fce-96e13414b8e5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款20 宁以pass-by-reference-to-const替换pass-by-value">
      <UniqueIdentifier>{dee139bc-1249-4f91-bd2f-eda25efbe005}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款21 必须返回对象时，别妄想返回其reference">
      <UniqueIdentifier>{de7d53d7-e580-46f9-9596-d89229966248}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款22 将成员变量声明为private">
      <UniqueIdentifier>{47955d77-fded-41b4-915a-717975a46e33}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款23 字以non-member、non-friend替换member函数">
      <UniqueIdentifier>{f3eaa398-80c3-4c42-840f-60be7057cb21}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款24 若所有参数皆需类型转换，请为此采用non-member函数">
      <UniqueIdentifier>{cf330a49-7723-4e47-8764-d53b86f9ef32}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第4章 设计与声明\条款25 考虑写出一个不抛出异常的swap函数">
      <UniqueIdentifier>{d0a8dd6a-6990-4823-8f73-d6107a2098d2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现">
      <UniqueIdentifier>{b8bf3d19-ef14-41eb-88a0-7a53cdc4d771}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款26 尽可能延后变量定义式的出现时间">
      <UniqueIdentifier>{1f5180ee-30a7-4567-8e7b-bfef008f3a3e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款27 尽量少做转型动作">
      <UniqueIdentifier>{66dd1be6-8e24-4ffe-be81-4e59d3482083}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款28 避免返回handles指向对象内部成分">
      <UniqueIdentifier>{99be4bc9-07c8-4b66-a3e7-1af8538c6c1f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款29 为“异常安全”而努力是值得的">
      <UniqueIdentifier>{73a1b8e2-1207-48af-acad-8f356c11ff63}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款30 透彻了解inlining的里里外外">
      <UniqueIdentifier>{a0f6d008-3504-4039-9769-d7507b6374f9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第5章 实现\条款31 将文件间的编译依存关系降至最低">
      <UniqueIdentifier>{23f95f4a-7533-45bb-85d1-279497bcece5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计">
      <UniqueIdentifier>{19cd1e60-3ebd-421f-9bd1-4880cb571f71}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款32 确定你的public继承塑模出is-a关系">
      <UniqueIdentifier>{3b39d933-e295-4c8f-ad1f-308e2587c1dc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款33 避免遮掩继承而来的名称">
      <UniqueIdentifier>{9b19286d-9178-402b-a779-603299780435}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款34 区分接口继承和实现继承">
      <UniqueIdentifier>{5330388f-a7bc-4055-bbdd-d136cdab7e8a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款35 考虑virtual函数以外的其他选择">
      <UniqueIdentifier>{08de0d69-2432-41bc-9165-4b90d05921da}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款36 绝不重新定义继承而来的non-virtual函数">
      <UniqueIdentifier>{e69ae769-b7c1-4b8d-8410-a208b804fa58}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款37 绝不重新定义继承而来的缺省参数值">
      <UniqueIdentifier>{3b8cf5ab-b7f6-4228-a430-b5082d72bdc4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款38 通过复合塑模出has-a或“根据某物实现出”">
      <UniqueIdentifier>{36ad52a1-9ab9-4a02-8d19-5d0423c59237}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款39 明智而审慎地使用private继承">
      <UniqueIdentifier>{7adfea41-b49e-4adb-90cd-1c93b236a435}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第6章 继承与面向对象设计\条款40 明智而审慎地使用多重继承">
      <UniqueIdentifier>{87ec205c-0a08-460c-b7cb-4a5cf80d02f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程">
      <UniqueIdentifier>{bd9bfc88-c7a0-4ad4-972e-24dc2a9a92db}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款41 了解隐式接口和编译期多态">
      <UniqueIdentifier>{1f688a6f-e75f-474e-9439-bbd8d9bf5087}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款42 了解typename的双重意义">
      <UniqueIdentifier>{517e71b5-655d-4a0f-96ff-83a921cf4ddb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款43 学习处理模板化基类内的名称">
      <UniqueIdentifier>{10204e2d-f7a0-4ed6-879b-15fe7a4bb488}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款44 将与参数无关的代码抽离templates">
      <UniqueIdentifier>{2592bd11-7b00-48ac-ac51-5bbda893daa4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款45 运用成员函数模板接受所有兼容类型">
      <UniqueIdentifier>{30986dd2-3129-4eac-ab39-5299f5099637}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款46 需要类型转换时请为模板定义非成员函数">
      <UniqueIdentifier>{9bb98dbe-76be-42e9-a55d-7d422e322e27}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款47 请使用traits classes表现类型信息">
      <UniqueIdentifier>{1fa45a35-9ea8-44a4-9efd-fc377a394612}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第7章 模板与泛型编程\条款48 认识template元编程">
      <UniqueIdentifier>{83d4160d-d2d2-4df3-810c-e2a7448a80e2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第8章 定制new与delete">
      <UniqueIdentifier>{6b156e33-fbf2-4dd8-bb63-181211ea191a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第8章 定制new与delete\条款49 了解new-handler的行为">
      <UniqueIdentifier>{dd0178d3-66eb-4123-98d5-c33cd0981d9d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第8章 定制new与delete\条款50 了解new和delete的合理替换时机">
      <UniqueIdentifier>{931c625b-a8cf-4b77-8037-7dec366eb03a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第8章 定制new与delete\条款51 编写new和delete时需固守常规">
      <UniqueIdentifier>{0da473dc-24aa-46ad-b306-4e70a817e373}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第8章 定制new与delete\条款52 写了placement new 也要写placement delete">
      <UniqueIdentifier>{c104e34b-d18f-40fd-9161-594c56a8ffc8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第9章 杂项讨论">
      <UniqueIdentifier>{ad2653e2-46ca-4075-9a34-c9a3c092f69e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第9章 杂项讨论\条款53 不要轻忽编译器的警告">
      <UniqueIdentifier>{9f7ab3e9-333e-4fd6-8bbe-521dfc1f3714}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第9章 杂项讨论\条款54 让自己熟悉包括TR1在内的标准程序库">
      <UniqueIdentifier>{f85fbf51-6eef-43e7-baf0-f7072091c65e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\第9章 杂项讨论\条款55 让自己熟悉Boost">
      <UniqueIdentifier>{eb36e966-2147-42eb-ba73-4d2d33fde661}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\附录">
      <UniqueIdentifier>{ef7300cd-c45d-447d-879d-53a112cebab6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\附录\A 本书之外">
      <UniqueIdentifier>{f8fc7cc8-b77c-462a-bdf7-0f3ce05c2fe6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective C++\0. 前言\0.3 导读\0.3.0">
      <UniqueIdentifier>{d4f1c885-d4b3-4391-a3ee-900237b576d5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\0. 导读">
      <UniqueIdentifier>{08914dd0-ee43-461d-bba7-84e127b5990d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\0. 导读\0.0">
      <UniqueIdentifier>{71037682-6202-411c-8160-9d68e5475168}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\0. 导读\0.1 本书所谈的C++">
      <UniqueIdentifier>{a04dd0fb-2a4d-4bd6-8504-2be15f3d0ee8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\0. 导读\0.2 惯例和术语">
      <UniqueIdentifier>{ca8ff928-be75-448a-930c-55c6518fe55f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\0. 导读\0.3 臭虫报告，意见提供，内容更新">
      <UniqueIdentifier>{6830713f-3c18-4a55-8b4a-aad03ff0080f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\1. 基础议题">
      <UniqueIdentifier>{e240eb88-5dc6-454c-87c8-6f7e1121e9b1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\1. 基础议题\条款1 仔细区别pointers和references">
      <UniqueIdentifier>{388ab7ec-76ad-4193-a44d-4da99a9e8b08}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\1. 基础议题\条款2 最好使用C++转型操作符">
      <UniqueIdentifier>{267a48cf-f575-4d9d-ba84-bef8863b197e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\1. 基础议题\条款3 绝对不要以多态方式处理数组">
      <UniqueIdentifier>{8b34f017-7082-47da-acc0-74895648bf5f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\1. 基础议题\条款4 非必要不提供默认构造函数">
      <UniqueIdentifier>{1c1a5de9-4ab0-48c7-85a6-0f60b71219ea}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\2. 操作符">
      <UniqueIdentifier>{443489dd-caaf-4eee-a5f0-7bcc915bbf12}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\2. 操作符\条款5 对定制的“类型转换函数”保持警觉">
      <UniqueIdentifier>{ace5a085-4bb1-4c70-bfa1-34a64d6ef5b1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\2. 操作符\条款6 区别increment/decrement操作符的前置和后置形式">
      <UniqueIdentifier>{70a76dce-e299-48b9-ba4b-d5678d1b3102}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\2. 操作符\条款7 千万不要重载&amp;&amp;，||和,操作符">
      <UniqueIdentifier>{aa6172f0-eea6-4246-87d3-2d7fd4120dc3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\2. 操作符\条款8 了解各种不同意义的new和delete">
      <UniqueIdentifier>{ea8e4371-8c04-4850-9aa4-17db269c72a0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常">
      <UniqueIdentifier>{d8dc5679-f08d-4394-92aa-b05db1ef3b70}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款9 利用析构函数避免泄漏资源">
      <UniqueIdentifier>{0802bfc9-d7b4-48d6-afbb-09ee23140397}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款10 在构造函数内防止资源泄漏">
      <UniqueIdentifier>{55c7c4f5-32df-4bf0-92a2-aa9342bec3a1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款11 禁止异常流出析构函数之外">
      <UniqueIdentifier>{18a5be31-76e8-4efe-8f9e-897e773ff757}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款12 了解“抛出一个异常”与“传递一个参数”或“调用一个虚函数”之间的差异">
      <UniqueIdentifier>{e89f0eba-54ab-4b8a-90a6-24cc67ed960c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款13 以by reference方式捕捉异常">
      <UniqueIdentifier>{8259dc1a-7415-422c-9e3e-c9090f762d72}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款14 明智运用异常specifications">
      <UniqueIdentifier>{ccb5b823-945d-4bff-bbcf-c4cce9bb68e0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\3. 异常\条款15 了解异常处理的成本">
      <UniqueIdentifier>{2d895380-88d1-4bec-a77b-a9cc4bef9f9a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率">
      <UniqueIdentifier>{a19e17a4-05d9-4175-9c5c-8ef3d4d77cc9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款16 谨记80-20法则">
      <UniqueIdentifier>{211f84c2-f06c-4126-a97a-7d94e934a309}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款17 考虑使用缓式评估">
      <UniqueIdentifier>{1cdeea1d-4548-4fe4-94fc-f64856d42155}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款18 分期摊还预期的计算成本">
      <UniqueIdentifier>{1a7a3252-1fef-493c-8732-d4c1943f9a65}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款19 了解临时对象的来源">
      <UniqueIdentifier>{adfa7b38-02ab-466f-b919-f2dd293e87fc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款20 协助完成返回值优化">
      <UniqueIdentifier>{ebc06a7b-7661-401f-af42-41d1610b95ac}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款21 利用重载技术避免隐式类型转换">
      <UniqueIdentifier>{f02cb492-fe9a-4bf1-bebf-689e89a2fb07}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款22 考虑以操作符复合形式取代其独身形式">
      <UniqueIdentifier>{79a9f8b2-45f5-4e26-8dde-6d98d385478d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款23 考虑使用其他程序库">
      <UniqueIdentifier>{cddd3766-bfe6-4c93-ac44-b4e658f928dc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\4. 效率\条款24 了解virtual functions、multiple inheritance、virtual base classes、runtime type identification的成本">
      <UniqueIdentifier>{cea41ec4-b07d-47de-84e1-a1a6b96f5942}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术">
      <UniqueIdentifier>{b5d2e400-ef29-413f-b22b-59d770044bcf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款25 将constructor和non-member functions虚化">
      <UniqueIdentifier>{be674fdc-6277-49dd-80c1-45e1483f3a6a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款26 限制某个class所能产生的对象数量">
      <UniqueIdentifier>{d0b014c6-4844-4f88-9d97-8bd7fd53d521}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款27 要求（或禁止）对象产生于heap之中。">
      <UniqueIdentifier>{8b87a317-01a0-49f4-9bee-5869270416a7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款28 智能指针">
      <UniqueIdentifier>{aa7fecb3-9e42-429e-8969-0f93e1b9879a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款29 引用计数">
      <UniqueIdentifier>{3a851910-daa1-45e4-85a8-95a31a409f11}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款30 替身类、代理类">
      <UniqueIdentifier>{171f9c01-bbb2-4996-b4f8-f6775e6aefde}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\5. 技术\条款31 让函数根据一个以上的对象类型来决定如何虚化">
      <UniqueIdentifier>{28e50b65-a41d-4296-813b-a2ed94291753}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\6. 杂项讨论">
      <UniqueIdentifier>{b3a824f5-f4d9-410e-85ed-84d25e1b4bdf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\6. 杂项讨论\条款32 在未来时态下发展程序">
      <UniqueIdentifier>{e51d89a4-bdfa-4e83-820e-eceb795ff057}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\6. 杂项讨论\条款33 将非尾端类设计为抽象类">
      <UniqueIdentifier>{35892b7c-2931-4ba4-a689-80b55e8404c0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\6. 杂项讨论\条款34 如何在同一个程序中结合C++和C">
      <UniqueIdentifier>{21764dee-77f3-4fd6-96e1-4115ad3da966}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\6. 杂项讨论\条款35 让自己习惯于C++语言">
      <UniqueIdentifier>{dfebf9f8-8a64-4a9c-83f8-6800ad57a04b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\7. 推荐读物">
      <UniqueIdentifier>{6ea3bdff-e261-429f-b479-3f315484ba29}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Effective C++\8. auto_ptr实现代码">
      <UniqueIdentifier>{b961bde3-8bb5-4066-ae60-6b68ba493eb8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.">
      <UniqueIdentifier>{6cb7eb6d-ce79-4fc7-84ac-2ef7fd964dcf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.1 前言">
      <UniqueIdentifier>{492e4edc-187c-4e8f-a34e-55c112df32f8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.2 致谢">
      <UniqueIdentifier>{9a39ada4-6543-4503-91c8-16bc220ef4bb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言">
      <UniqueIdentifier>{e5f4cb5c-ca29-4d4c-85f6-0132203ba3d3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.1 定义、使用和扩展STL">
      <UniqueIdentifier>{57eb0f6e-0083-45e1-be92-3af248bf5859}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.0">
      <UniqueIdentifier>{f2356da9-e3ef-4ebe-84de-4e97a7b7bc7b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器">
      <UniqueIdentifier>{03c84787-72da-4ac9-b62d-584e9024a88b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第1条 慎重选择容器类型">
      <UniqueIdentifier>{237d0220-bea8-4dd7-a443-2afece1af4de}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第2条 不要试图编写独立于容器类型的代码">
      <UniqueIdentifier>{5cdba9c0-917d-4550-a029-98a666c6bf0a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第3条 确保容器中的对象拷贝正确而高效">
      <UniqueIdentifier>{34641ccf-2ad6-4ed3-9279-d48184d0f4b2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第4条 调用empty而不是检查size%28%29是否为0">
      <UniqueIdentifier>{996251d7-be04-48b3-bf50-8aca5d42327f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第5条 区间成员函数优先于与之对应的单元素成员函数">
      <UniqueIdentifier>{ca62bcae-120d-471e-884e-c46afefd25d5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第6条 当心C++编译器最烦人的分析机制">
      <UniqueIdentifier>{96fac365-a0b0-4726-9e7e-00e8f7efe9e2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第7条 如果容器中包含了通过new操作创建的指针，切记在容器对象析构前将指针delete掉">
      <UniqueIdentifier>{c3647f89-a11b-4bc7-9488-ccced8dfe3f9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第8条 切勿创建包含auto_ptr的容器对象">
      <UniqueIdentifier>{4ff83f50-b006-4833-8c27-26d85382464d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第9条 慎重选择删除元素的方法">
      <UniqueIdentifier>{6549c80f-7dd8-49ce-91d8-3915b62e9ed9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第10条 了解分配子的约定和限制">
      <UniqueIdentifier>{cc359701-7db6-42cc-ab1f-93e6bdbe3134}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第11条 理解自定义分配子的合理用法">
      <UniqueIdentifier>{aeb291e1-b117-465d-8099-37dc09e86338}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第1章 容器\第12条 切勿对STL容器的线程安全性有不切实际的依赖">
      <UniqueIdentifier>{3c274945-2d5d-428a-9340-714805e477eb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string">
      <UniqueIdentifier>{481eef76-8953-4ae0-b545-ffaa5f1a1336}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第13条 vector和string优先于动态分配的数组">
      <UniqueIdentifier>{bd7a3ef0-5477-46cd-b7f7-5b6fe29d1954}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第14条 使用reserve来避免不必要的重新分配">
      <UniqueIdentifier>{e5c779f8-0be4-4eb5-9c69-cc17fa4e5d81}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第15条 注意string实现的多样性">
      <UniqueIdentifier>{372f1391-d7a6-49be-8990-e2931bbdf850}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第16条 了解如何把vector和string数据传级旧的API">
      <UniqueIdentifier>{f5f31468-8165-46c9-a7a0-0ad81e9430a2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第17条 使用“swap技巧”除去多余的容量">
      <UniqueIdentifier>{82a3298c-68b6-489a-be6b-e96433e4dba8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第2章 vector和string\第18条 避免使用vector&lt;bool&gt;">
      <UniqueIdentifier>{489b5e61-d92f-4da1-bd02-6328e3c1e066}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器">
      <UniqueIdentifier>{b43bb305-b63c-4938-847f-546817089d9c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第19条 理解相等和等价的区别">
      <UniqueIdentifier>{4aaf400b-479c-4bb9-a901-f26b2cd7c919}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第20条 为包含指针的关联容器指定比较类型">
      <UniqueIdentifier>{a9d0375e-e8a0-43e4-b315-1d42417edf0a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第21条 总是让比较函数在等值情况下返回false">
      <UniqueIdentifier>{36731a77-b144-4274-96a2-77121a1523c0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第22条 切勿直接修改set或multiset中的键">
      <UniqueIdentifier>{2e17b89e-8a95-4000-9278-1f1e77aec71e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第23条 考虑用排序的vector替代关联容器">
      <UniqueIdentifier>{984613bd-63d8-49d4-848d-67f4150346eb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第24条 当效率至关重要时，请在map::operator[]与map::insert之间谨慎做出选择">
      <UniqueIdentifier>{fabbab29-a86e-429d-b9d2-ae9568f00a94}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第3章 关联容器\第25条 熟悉非标准的哈希容器">
      <UniqueIdentifier>{bd15f0e3-feec-46e2-9fd5-594942b81648}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第4章 迭代器">
      <UniqueIdentifier>{ca16729d-69f4-44e5-ab1c-008d9fb298dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第4章 迭代器\第26条 iterator优先于const_iterator、reverse_iterator以及const_reverse_iterator">
      <UniqueIdentifier>{cead8c66-d38a-47e8-b39e-1bd131ef1b33}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第4章 迭代器\第27条 使用distance和advance将容器的const_iterator转换成iterator">
      <UniqueIdentifier>{f0403d76-7e19-4905-9929-bb9568ae580f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第4章 迭代器\第28条 正确理解由reverse_iterator的base%28%29成员函数所产生的iterator的用法">
      <UniqueIdentifier>{8f1d2709-0da3-4214-9077-ebbf28f87b80}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第4章 迭代器\第29条 对于逐个字符的输入请考虑使用istreambut_iterator">
      <UniqueIdentifier>{f01ebc6e-1584-4fd7-a859-715680b3151c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法">
      <UniqueIdentifier>{8fcd308d-07ce-45da-b603-0b7dffecda21}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第30条 确保目标区间足够大">
      <UniqueIdentifier>{64b63a1f-d7ba-4602-bf5f-768d20c07874}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第31条 了解各种与排序有关的选择">
      <UniqueIdentifier>{cc066e7d-ce8b-40ae-b533-06f202ea3ddb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第32条 如果确实需要删除元素，则需要在remove这一类算法之后调用erase">
      <UniqueIdentifier>{fb264c1f-1b17-45a9-a3bb-fc12f712ee54}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第33条 对包含指针的容器使用remove这一类算法时要特别小心">
      <UniqueIdentifier>{d724c1db-b4a2-4470-bdd3-ebd0423748df}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第34条 了解哪些算法 要求使用排序的区间作为参数">
      <UniqueIdentifier>{88f56f7a-4121-4cf6-9248-29fae836fbe8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第35条 通过mismatch或lexicographical_compare实现简单的忽略大小写的字符串比较">
      <UniqueIdentifier>{523520ed-f1f6-4946-bda0-541b47414d22}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第36条 理解copy_if算法的正确实现">
      <UniqueIdentifier>{41b8d8c6-87c7-4648-98fd-27768c99c572}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第5章 算法\第37条 使用accumulate或者for_each进行区间统计。">
      <UniqueIdentifier>{e7bd8f75-2481-47e8-b508-1726e49c3359}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他">
      <UniqueIdentifier>{bef13f58-ba0f-4544-b412-4a7b50d48599}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他\第38条 遵循按值传递的原则来设计函数子类">
      <UniqueIdentifier>{a21ddcea-0e5a-47e0-880f-eeae06871461}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他\第39条 确保判别式是“纯函数”">
      <UniqueIdentifier>{3f811582-5072-46a7-bbc1-d55a070883f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他\第40条 若一个类是函数子，则应使它可配接">
      <UniqueIdentifier>{7023a64f-06aa-4e02-9299-65cef6f1da4b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他\第41条 理解ptr_fun、mem_fen和mem_fun_ref的来由">
      <UniqueIdentifier>{69d0a1ce-7ecd-448d-843a-6eb581e9037c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第6章 函数子、函数子类、函数及其他\第42条 确保less&lt;T&gt;与operator&lt;具有相同的语义">
      <UniqueIdentifier>{5ac732c2-5bf9-49c4-91a4-2fdfb784b67d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL">
      <UniqueIdentifier>{2156545a-2c95-4523-a7eb-4268b2bd7fa5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第43条 算法调用优先于手写的循环">
      <UniqueIdentifier>{4fb2df4d-2706-4011-af76-332d3dcc383a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第44条 容器的成员函数优先于同名的算法">
      <UniqueIdentifier>{40180b83-dbf6-45cb-bbe3-4711db4327ad}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第45条 正确区分count、find、binary_search、lower_bound、upper_bound和equal_range">
      <UniqueIdentifier>{7339ea8e-b874-4416-b7c2-1484a9f23ee3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第46条 考虑使用函数对象而不是函数作为STL算法的参数">
      <UniqueIdentifier>{89d1e278-f7d9-4a48-bc8e-84280b5e952d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第47条 避免产生“直写型”的代码">
      <UniqueIdentifier>{5fff16cb-f4b1-4c6f-8a53-d3089e43a995}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第48条 总是包含正确的头文件">
      <UniqueIdentifier>{ab687cb7-fb4e-4dee-8acb-aa23aed7e79b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第49条 学会分析与STL相关的编译器诊断信息">
      <UniqueIdentifier>{ab5d56f0-41e9-4bfc-94d1-5e28f1f49cda}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\第7章 在程序中使用STL\第50条 熟悉与STL相关的Web站点">
      <UniqueIdentifier>{9025d651-5ba7-4805-bccf-92314b89f137}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\附录">
      <UniqueIdentifier>{b2d8e7db-3def-4887-a290-e3a2a8135fde}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\附录\参考书目">
      <UniqueIdentifier>{20509e34-c8d5-448f-95a0-f99a759c0d98}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\附录\附录A 地域性与忽略大小写的字符串比较">
      <UniqueIdentifier>{c7271e09-bf95-4438-9bf0-66532bcf999d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\附录\附录B 对Microsoft的STL平台的说明">
      <UniqueIdentifier>{5ed5b71b-614f-423f-ab71-2ab6d9c47551}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.2 引文">
      <UniqueIdentifier>{b1a25e8c-50b2-4edf-b23e-16f1556f79e8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.3 STL和标准">
      <UniqueIdentifier>{4bfddb71-9247-413d-a093-3206de3b20a6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.4 引用计数">
      <UniqueIdentifier>{c22c35ca-efb2-4137-bf28-b515befaaefa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.5 string和wstring">
      <UniqueIdentifier>{791bf0f8-0d8e-4443-af8a-23b4cc844720}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.6 术语，术语，术语">
      <UniqueIdentifier>{a7d7e852-55d3-4c8a-a542-d48321bbd1b3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.7 代码例子">
      <UniqueIdentifier>{612e3800-5cd9-4085-a02e-d6b0f9b0c46e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.8 与效率相关的条款">
      <UniqueIdentifier>{e6e9dce9-d329-4773-a75e-f7c0c9dc4037}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective STL\0.\0.3 引言\0.3.9 本书的指导原则">
      <UniqueIdentifier>{4d62b403-48e0-4ca4-bc88-661ff69f9d34}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.">
      <UniqueIdentifier>{2c330b3f-9d6d-4ba0-b7bf-a61d059e6990}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.1 出版商的声明">
      <UniqueIdentifier>{ed9dc122-d47a-4498-821e-bfa8a4fd9318}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.1 出版商的声明\0.1.1 代码示例的使用">
      <UniqueIdentifier>{8989d395-2d1f-4790-b455-bad04880acf2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.1 出版商的声明\0.1.2 Safari Books Online">
      <UniqueIdentifier>{ba5862df-2290-42af-a59e-67907d162d7e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.1 出版商的声明\0.1.3 如何联系我们">
      <UniqueIdentifier>{f97ab6bd-2d30-492c-8b9e-6062c395a41e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.3 绪论">
      <UniqueIdentifier>{53f25679-659c-443a-8977-0908d728db2b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.2 致谢">
      <UniqueIdentifier>{5baac46c-97b1-4150-8d25-1412087696f3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.3 绪论\0.3.1 术语和惯例">
      <UniqueIdentifier>{b4767a63-cfed-4520-81f5-ad7cc1be1ba1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.3 绪论\0.3.2 提交缺陷报告和改进建议">
      <UniqueIdentifier>{c52f0397-4527-4407-98e2-c511dab0e606}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第1章 型别推导">
      <UniqueIdentifier>{d5a7cba4-b66e-41f4-a526-cadfaf328a64}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第1章 型别推导\条款1 理解模板型别推导">
      <UniqueIdentifier>{57b242af-8804-4cca-9966-3b27e2d28b09}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第1章 型别推导\条款2 理解auto型别推导">
      <UniqueIdentifier>{1297d25c-8b90-4a7e-9ad7-c5c792dfad7f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第1章 型别推导\条款3 理解decltype">
      <UniqueIdentifier>{2228790f-39b5-4158-8a93-e4776c69bb96}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第1章 型别推导\条款4 掌握查看型别推导结果的方法">
      <UniqueIdentifier>{b7eafe0a-ac22-4980-bb3f-26e266a77ac8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第2章 auto">
      <UniqueIdentifier>{3eadfd2f-9d8e-44f3-aee1-50e56b1a9a5e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第2章 auto\条款5 优先选用auto，而非显式型别声明">
      <UniqueIdentifier>{d0632c68-3998-4bdb-938d-5ffddfe09508}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第2章 auto\条款6 当auto推导的型别不符合要求时，使用带显式型别的初始化物惯用法">
      <UniqueIdentifier>{39f68043-e841-446a-a9d4-8528646de132}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++">
      <UniqueIdentifier>{d3aed3bc-edc9-478c-8431-0b31127e7a32}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款7 在创建对象时注意区分%28%29和{}">
      <UniqueIdentifier>{26c12219-6525-49b2-bd70-e18df2d704e3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款8 优先选用nullptr，面非0或NULL">
      <UniqueIdentifier>{b41f914c-ff2d-4711-a723-996d14208b06}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款9 优先选用别名声明，而非typedef">
      <UniqueIdentifier>{c5b3d0b6-a0f7-4dfb-903c-709270270894}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款10 优先选用限定作用域的枚举型别，而非不限作用域的枚举型别">
      <UniqueIdentifier>{e4eed773-9265-4b53-9e54-81e0e7819c59}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款11 优先选用删除函数，而非private未定义函数">
      <UniqueIdentifier>{b1ac7465-0fda-406b-a958-5d4f8b74b8b8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款12 为意在改写的函数添加override声明">
      <UniqueIdentifier>{341f6f53-1a08-4903-b391-1232f9ee6dc7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款13 优先选用const_iterator，而非iterator">
      <UniqueIdentifier>{e1dbd65d-8d84-4783-af25-d14cfb2109f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款14 只要函数不会发射异常，就为其加上noexcept声明">
      <UniqueIdentifier>{167c5537-8e8a-48a0-974a-4e3c208d4683}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款15 只要有可能使用constexpr，就使用它">
      <UniqueIdentifier>{1725ed9f-6e3b-40d4-b74e-a7740122c0d1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款16 保证const成员函数的线程安全性">
      <UniqueIdentifier>{4ad59f80-6609-4d16-95a8-7dffadbf3bc6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第3章 转向现代C++\条款17 理解特种成员函数的生成机制">
      <UniqueIdentifier>{16ee5cff-5f41-4eca-b46b-0895292a1160}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针">
      <UniqueIdentifier>{9b396e72-2c0f-4b1f-93e5-31c19a3b4f79}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\条款18 使用std::unique_ptr管理具备专属所有权的资源">
      <UniqueIdentifier>{0586dadd-96d8-4a22-8f13-6b9a1bdfcb3d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\条款19 使用std::shared_ptr管理具备共享所有权的资源">
      <UniqueIdentifier>{1010bb64-60e0-4e92-a1aa-19d9f0a79adb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\条款20 对于类似std::shared_ptr但有可能空悬的指针使用std::weak_ptr">
      <UniqueIdentifier>{d5426a0d-6375-4646-8903-0361bc659e37}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\条款21 优先选用std::make_unique和std::make_shared，而非直接使用new">
      <UniqueIdentifier>{d0ef7c2a-1546-4da1-be62-4d4ace4bb770}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\条款22 使用Pimpl习惯用法时，将特殊成员函数的定义放到实现文件中">
      <UniqueIdentifier>{f1007abd-a12c-44ab-8cb7-38ccbdb0e38e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发">
      <UniqueIdentifier>{68fe53ed-90d0-4c22-bf2c-1c9415aa7514}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款23 理解std::move和std::forward">
      <UniqueIdentifier>{5ad63128-6e95-46bb-b391-63959ddfe681}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款24 区别万能引用和右值引用">
      <UniqueIdentifier>{176a9dec-1010-41d3-9f48-04406d326b35}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款25 针对右值引用实施std::move，针对万能引用实施std::forward">
      <UniqueIdentifier>{f7b8d581-ff8c-4e19-a26f-f787296f27ae}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款26 避免依万能引用型别进行重载">
      <UniqueIdentifier>{5846a428-27b6-4e4c-a48f-e9e03bb1b1a7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款27 熟悉万能引用型别进行重载的替代方案">
      <UniqueIdentifier>{4f58bf26-b2ff-4b5a-9e31-31e27206d5b0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款28 理解引用折叠">
      <UniqueIdentifier>{eb45811c-7398-4105-be2d-4656a9568eec}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款29 假定移动操作不存在、成本高、未使用">
      <UniqueIdentifier>{f6325a48-31cb-4a33-ba80-0582e0d92de8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款30 熟悉完美转发的失败情形">
      <UniqueIdentifier>{674eedb0-9724-417e-983c-1adb0da069e9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第6章 lambda表达式">
      <UniqueIdentifier>{51edb837-8bbd-4d39-b4cb-5226c50dddb3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第6章 lambda表达式\条款31 避免默认捕获模式">
      <UniqueIdentifier>{0b3bb8e6-6e01-4e18-9ec3-e4fe27dc9068}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第6章 lambda表达式\条款32 使用初始化捕获将对象移入闭包">
      <UniqueIdentifier>{d5e76f2a-38d4-4910-9323-fd0e72600f28}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第6章 lambda表达式\条款33 对auto&amp;&amp;型别的形参使用decltype，以std::forward之">
      <UniqueIdentifier>{31eca195-3f33-42d4-84f5-17ae03706baa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第6章 lambda表达式\条款34 优先选用lambda式，而非std::bind">
      <UniqueIdentifier>{1b9140be-f3b5-4847-909b-c99d539ccaab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API">
      <UniqueIdentifier>{2a54a593-8f1a-41df-9ba2-bc13a1440094}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款35 优先选用基于任务而非基于线程的程序设计">
      <UniqueIdentifier>{046ce3a5-e6aa-41e5-ab60-ba429e974b9c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款36 如果异步是性要的，则指定std::launch::async">
      <UniqueIdentifier>{5b40677f-bdc0-4497-a448-1d52489deea7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款37 使std::thread型别对象在所有路径皆不可联结">
      <UniqueIdentifier>{0c3d47c6-2a84-40c1-a9e4-9b778bc4e18c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款38 对变化多端的线程句柄析构函数行为保持关注">
      <UniqueIdentifier>{28856552-845b-4894-86b0-22e233b1ef6c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款39 考虑针对一次性事件通信使用以void为模板型别实参的期望">
      <UniqueIdentifier>{be633243-0bae-40e7-8a37-990da7b52545}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第7章 并发API\条款40 对并发使用std::atomic，对特种内存使用volatile">
      <UniqueIdentifier>{13a618a4-b9ca-4e9c-909e-b158fb1a2bff}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第8章 微调">
      <UniqueIdentifier>{c714f727-6e72-4f51-a2e7-60e3751bfbb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第8章 微调\条款41 针对可复制的形参，在移动成本低并且一定会被复制的前提下，考虑将其按值传入">
      <UniqueIdentifier>{1f0e53e6-445b-429f-b10b-01d18fe69774}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第8章 微调\条款42 考虑置入而非插入">
      <UniqueIdentifier>{febcdee8-c2d1-46e1-a0f2-8707d15bdb25}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.">
      <UniqueIdentifier>{a2801b8a-0acb-4403-a99e-0b8fdae1c4a6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.1 序">
      <UniqueIdentifier>{8e6b2469-ff9e-45ad-931f-da2c25d0a1b5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.2 前言">
      <UniqueIdentifier>{ac859f73-c420-4a4b-9443-951e911ad12a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.2 前言\0.2.0">
      <UniqueIdentifier>{496848d2-43bd-4718-9b1d-ea13417990b0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.2 前言\0.2.1 怎么阅读本书？">
      <UniqueIdentifier>{71227476-de9a-403d-832a-5ca1a91ddc6c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.2 前言\0.2.2 本书的来龙去脉：GotW和PerDirect">
      <UniqueIdentifier>{cef550e8-aae1-466c-9155-293ef972797d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\0.\0.2 前言\0.2.3 致谢">
      <UniqueIdentifier>{3a17e3f3-2c75-4803-b8b0-19d2445501c0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\后记">
      <UniqueIdentifier>{b77fc172-731f-4587-9e99-5e6fefd275e5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库">
      <UniqueIdentifier>{26fdf534-25d6-41e9-883f-50d2532b9407}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术">
      <UniqueIdentifier>{54e55de9-7529-475d-bfa3-9e00e066bc14}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承">
      <UniqueIdentifier>{77961a67-7d54-44ec-8dac-65a993b002f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法">
      <UniqueIdentifier>{3cb16792-cda3-4bab-ac18-4c44e1056057}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第5章 名字查找、名字空间和接口规则">
      <UniqueIdentifier>{f0ff8f5d-48c0-40e8-ad0d-77f5223b6fb0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第6章 内存管理">
      <UniqueIdentifier>{d024ffa5-1396-4173-9355-6dc9597553f1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第7章 缺陷、陷阱和错误习惯用法">
      <UniqueIdentifier>{8c48aae1-7571-4b14-8154-bed4408a3870}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题">
      <UniqueIdentifier>{6ddbc1b9-8b52-4aba-9c0a-e46f2bdbf5a6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第1条 迭代器">
      <UniqueIdentifier>{c8c9e625-cc40-4cb1-81c4-c49d0f48918a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第2条 不区分大小写的字符串——之一">
      <UniqueIdentifier>{66460840-22bc-47e9-9644-3f0dde6ab7ef}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第3条 不区分大小写的字符串——之二">
      <UniqueIdentifier>{c87b0aba-5485-4b06-b01a-7d3930ef7e4c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第4条 最大可重用的泛型容器——之一">
      <UniqueIdentifier>{2aa83c63-2066-46f1-b8bf-bd61377bafec}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第5条 最大可重用的泛型容器——之二">
      <UniqueIdentifier>{1187df9a-c665-44e7-9cb3-663bb7356a12}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第6条 临时对象">
      <UniqueIdentifier>{40131e79-11d3-4f67-a6b6-dbb480ee6e3d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第1章 泛型程序设计与C++标准库\第7条 使用标准库（或称再谈临时对象）">
      <UniqueIdentifier>{4e88f58d-b37b-420c-ad86-07b75bfcb0af}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第8条 编写异常安全的代码——之一">
      <UniqueIdentifier>{e9354519-3969-4307-ac9a-d1122c30adf0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第9条 编写异常安全的代码——之二">
      <UniqueIdentifier>{88636c23-562d-4587-be98-43d95ae3b669}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第10条 编写异常安全的代码——之三">
      <UniqueIdentifier>{59b8639f-f6af-4d57-8893-b3cb5d1fe0b5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第11条 编写异常安全的代码——之四">
      <UniqueIdentifier>{a44ed054-5c82-4e36-9b2f-03741e1142f6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第12条 编写异常安全的代码——之五">
      <UniqueIdentifier>{e74e50f7-0366-4976-a59f-f0fd494a92dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第13条 编写异常安全的代码——之六">
      <UniqueIdentifier>{6a913ba8-b648-441c-88d5-d4bbafbfc358}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第14条 编写异常安全的代码——之七">
      <UniqueIdentifier>{517b3ace-0875-464c-aba7-c5c45c843438}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第15条 编写异常安全的代码——之八">
      <UniqueIdentifier>{3d671acb-db63-4378-9b92-ebef39fabcb9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第16条 编写异常安全的代码——之九">
      <UniqueIdentifier>{04393bd1-ce2e-49a9-8023-61aac26c6580}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第17条 编写异常安全的代码——之十">
      <UniqueIdentifier>{fba05266-eb7e-40cf-a15c-7b30111815c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第18条 代码复杂性——之一">
      <UniqueIdentifier>{ffaff6ce-4409-4bea-b911-9766d1af9650}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第2章 异常安全性问题与技术\第19条 代码复杂性——之二">
      <UniqueIdentifier>{5cf6679a-0374-40b2-8cd8-fbba1d5d95a8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第20条 类机制">
      <UniqueIdentifier>{50c062f4-ed54-47d8-9b3e-b7f3be277245}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第21条 重载虚函数">
      <UniqueIdentifier>{66732221-97dc-4839-a2c5-05d79539352f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第22条 类的关系——之一">
      <UniqueIdentifier>{2ee7aa98-bebf-427a-95ce-f8dd0628760d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第23条 类的关系——之二">
      <UniqueIdentifier>{e1fbfad6-fd66-485a-90ae-b746dcd11677}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第24条 继承的使用和滥用">
      <UniqueIdentifier>{86205fe6-fe66-4649-b511-15d1e46e56a4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第3章 类的设计与继承\第25条 面向对象程序设计">
      <UniqueIdentifier>{2dde3b5d-cc0b-4c0f-b703-556fd2ce1d75}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法\第26条 将编译期依存性减至最小——之一">
      <UniqueIdentifier>{0e958356-e1df-4309-bf32-30798fbab9bd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法\第27条 将编译期依存性减至最小——之二">
      <UniqueIdentifier>{64937f76-3d89-4ed1-89cd-e9268fd76e23}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法\第28条 将编译期依存性减至最小——之三">
      <UniqueIdentifier>{c5463c2c-272e-4baf-9d66-9fac83c2a248}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法\第29条 编译防火墙">
      <UniqueIdentifier>{6a448616-2116-4341-a580-598a9f7f28db}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第4章 编译器防火墙和Pimpl习惯用法\第30条 “Fast Pimpl”习惯用法">
      <UniqueIdentifier>{996dad78-3a43-469d-b886-d7faf2e36da3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第5章 名字查找、名字空间和接口规则\第31条 名字查找和接口规则——之一">
      <UniqueIdentifier>{50c7a930-a7ed-47fa-a47e-3ffd441ffc0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第5章 名字查找、名字空间和接口规则\第32条 名字查找和接口规则——之二">
      <UniqueIdentifier>{a2d1ae91-50d0-46da-bd7d-d89ad5f63e09}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第5章 名字查找、名字空间和接口规则\第33条 名字查找和接口规则——之三">
      <UniqueIdentifier>{7880ab95-e463-425f-8320-727fcc6b3ea1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第5章 名字查找、名字空间和接口规则\第34条 名字查找和接口规则——之四">
      <UniqueIdentifier>{94ce606f-2b64-4dbe-a5cc-cc5d514bf50b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第6章 内存管理\第35条 内存管理——之一">
      <UniqueIdentifier>{bbc86c27-2041-4451-bb04-3dcfe49bab5c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第6章 内存管理\第36条 内存管理——之二">
      <UniqueIdentifier>{7b3f66da-dc5e-4675-a904-747b134ae62f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第6章 内存管理\第37条 auto_ptr">
      <UniqueIdentifier>{fcc74b9d-59d7-4e28-a166-e5df309f55f4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第7章 缺陷、陷阱和错误习惯用法\第38条 对象标识">
      <UniqueIdentifier>{6438e086-bbeb-4791-b3ad-deeb96134173}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第7章 缺陷、陷阱和错误习惯用法\第39条 自动转换">
      <UniqueIdentifier>{2a9046ba-422f-4caf-bb5b-e1c1e211a90c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第7章 缺陷、陷阱和错误习惯用法\第40条 对象生存期——之一">
      <UniqueIdentifier>{8d016665-6d81-4965-825c-728afaf9ef5a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第7章 缺陷、陷阱和错误习惯用法\第41条 对象生存期——之二">
      <UniqueIdentifier>{f3bd1986-31aa-4e9e-b2dd-a57b94ab7228}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第42条 变量初始化">
      <UniqueIdentifier>{a3f8e02b-0ae5-4a89-a1c6-601552a8d945}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第43条 正确使用const">
      <UniqueIdentifier>{c4250d55-f760-492d-bd70-b4a2f9b67463}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第44条 类型转换">
      <UniqueIdentifier>{9dbc0b1e-042d-41bb-95f3-988615a77bef}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第45条 bool">
      <UniqueIdentifier>{868b17f1-6eb0-41c8-99a3-aa51405efb3b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第46条 转换调用函数">
      <UniqueIdentifier>{3a842d60-40b5-4986-a6b0-cf8488e241bc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++\第8章 其他主题\第47条 控制流">
      <UniqueIdentifier>{3fc4986a-dc27-4dc1-a67f-3cf493726e3c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.">
      <UniqueIdentifier>{e2b678b3-8b87-44a7-a6ab-37e555e95753}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.1 序">
      <UniqueIdentifier>{5e99ec1c-9491-4d59-b41a-7380e60019fb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言">
      <UniqueIdentifier>{4ffb04e6-0c3b-46ca-8398-2b4a02efe305}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.0">
      <UniqueIdentifier>{84fcac56-c5ee-4097-962b-0d546987d21d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.1 何为“More”">
      <UniqueIdentifier>{44c3639a-23a6-4f53-821b-3d76fcb6affa}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.2 你应该知道的">
      <UniqueIdentifier>{bc4c4892-8021-473e-8339-06ae79ab2f0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.3 如何阅读本书">
      <UniqueIdentifier>{1f73270c-a9a2-409c-af75-88764157f2ab}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.4 名字空间、typename、URL引用以及其它约定">
      <UniqueIdentifier>{f07f6e8c-2b04-4607-979f-1e4830678223}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\0.\0.2 前言\0.2.5 致谢">
      <UniqueIdentifier>{26ad4a9a-84ef-4c0f-9aa5-4be77ebbe1d9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库">
      <UniqueIdentifier>{6233bc23-5c44-4fae-9c55-72f95c62e0d8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款1 流">
      <UniqueIdentifier>{b9b6f5ec-19e4-4602-a60a-d38a408591cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款2 Predicates，之一：remove%28%29删除了什么？">
      <UniqueIdentifier>{c329848c-147d-4b0a-b739-88c99b90ccb1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款3 Predicates，之二：状态带来的问题">
      <UniqueIdentifier>{2dce409e-f823-47f4-ab99-7792ee756eae}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款4 可扩充的模板：使用继承还是traits？">
      <UniqueIdentifier>{f5a94408-0707-49d2-90a4-abd1f1ef9c7e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款5 typename">
      <UniqueIdentifier>{a15a615d-99d8-48ef-b273-e91f57bf8847}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款6 容器、指针和“不是容器的容器”">
      <UniqueIdentifier>{118c1268-6f84-45a3-9800-377b588cc2ca}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款7 使用vector和deque">
      <UniqueIdentifier>{88d42ae7-c71a-472d-9b36-c68e7165c251}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款8 使用set和map">
      <UniqueIdentifier>{44e9ef1a-0944-4f47-b057-afef16e1df8b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款9 等同的代码吗？">
      <UniqueIdentifier>{e06a6899-3fc2-43e3-b2e8-f1fc8dab0a9d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款10 模板特殊化与重载">
      <UniqueIdentifier>{1423a5ed-4d1e-40f7-b368-9ec277494dae}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\1. 泛型程序设计与C++标准库\条款11 Mastermindx">
      <UniqueIdentifier>{5d91acaf-8e80-4ff8-a136-b153077f907d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能">
      <UniqueIdentifier>{88d15d63-7063-4cca-96cb-8c9f66dea135}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能\条款12 内联">
      <UniqueIdentifier>{b0611fde-e672-4d95-8151-18cdf8ad5d8e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能\条款13 缓式优化，之一：一个普通的旧式String">
      <UniqueIdentifier>{4fdbf12c-1e2d-46c2-a0be-ff15bc1ca13f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能\条款14 缓式优化，之二：引入缓式优化">
      <UniqueIdentifier>{4d02301e-446a-4401-ad1f-c6a0dc05f4e3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能\条款15 缓式优化，之三：迭代器与引用">
      <UniqueIdentifier>{fffdcffd-315a-47bc-b409-d5df16216ae1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\2. 优化与性能\条款16 缓式优化，之四：多线程环境">
      <UniqueIdentifier>{b55057da-af0a-4672-9826-0ded9d75a13a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术">
      <UniqueIdentifier>{c194fc84-e7f5-4e3a-9678-132a1d03b597}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款17 构造函数失败，之一：对象生命期">
      <UniqueIdentifier>{237dbef7-e8d4-473d-af5c-6971ba49cc23}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款18 构造函数失败，之二：吸收异常？">
      <UniqueIdentifier>{540e750f-85b8-4f86-97b2-243125f3cfe9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款19 未捕获的异常">
      <UniqueIdentifier>{7a6fd143-05bf-4f38-a3df-1161286078fe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款20 未管理指针存在的问题，之一：参数求值">
      <UniqueIdentifier>{6823293e-f0dc-4627-9f0f-630048d667cd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款21 未管理指针存在的问题，之二：使用auto_ptr？">
      <UniqueIdentifier>{9de12574-b706-4902-9cd9-6b149706542e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款22 异常安全与类的设计，之一：拷贝赋值">
      <UniqueIdentifier>{e92ef876-56b0-4b74-b2dd-65e14961b386}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\3. 异常安全议题及技术\条款23 异常安全与类的设计，之二：继承">
      <UniqueIdentifier>{4de761c1-539c-47a5-a0e1-df9768593d2f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态">
      <UniqueIdentifier>{6918d20b-8571-4922-9e3d-d51b4c9a5a6b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态\条款24 为什么要使用多继承？">
      <UniqueIdentifier>{f7e9f45d-8187-4966-ad14-98c6be208c58}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态\条款25 模拟多继承">
      <UniqueIdentifier>{a8e0a6da-0d3c-43f0-be6e-07efa2318e04}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态\条款26 多继承与连体双婴问题">
      <UniqueIdentifier>{7cb3195d-0612-4e17-85dc-305b226f105e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态\条款27 （非）纯虚函数">
      <UniqueIdentifier>{77efd6d8-5f27-4dde-9893-1e253be37e9c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\4. 继承与多态\条款28 受控的多态">
      <UniqueIdentifier>{1cf22851-27d8-440a-b4d6-1b85d73e9d94}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\5. 内存及资源管理">
      <UniqueIdentifier>{86e242eb-7c29-4693-beb8-c923150bf428}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\5. 内存及资源管理\条款29 使用auto_ptr">
      <UniqueIdentifier>{410929c6-3f31-46de-8b7e-2b244e2383d1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\5. 内存及资源管理\条款30 智能指针成员，之一：auto_ptr存在的问题">
      <UniqueIdentifier>{39a8e298-b3dd-4fb2-adca-9dc42e05bc03}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\5. 内存及资源管理\条款31 智能指针成员，之二：设计ValuePtr">
      <UniqueIdentifier>{bad3ca0b-fdea-4d04-8f17-400b62ae9fa9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\6. 自由函数与宏">
      <UniqueIdentifier>{041d96a4-dfa5-4ba8-b87e-3b8b7367d391}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\6. 自由函数与宏\条款32 递归声明">
      <UniqueIdentifier>{e62fcfa3-f87d-4236-9faa-f33e917f2851}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\6. 自由函数与宏\条款33 模拟嵌套函数">
      <UniqueIdentifier>{8e57046d-0cfa-4f9d-b78a-cd25b7cb3ada}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\6. 自由函数与宏\条款34 预处理宏">
      <UniqueIdentifier>{e9a672c1-4ae1-4cb5-b386-fcd137c865c9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\6. 自由函数与宏\条款35 宏定义">
      <UniqueIdentifier>{59a28c7e-8de9-4aa9-909c-bab566992271}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题">
      <UniqueIdentifier>{f1f200da-1f9b-4c23-8e16-1bb5c4e42445}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题\条款36 初始化">
      <UniqueIdentifier>{17e5dbcb-d5ff-45dc-90ab-4bcb22a498f3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题\条款37 前置声明">
      <UniqueIdentifier>{b61f9308-5eb7-47e0-8a09-f9c42c1ce70a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题\条款38 typedef">
      <UniqueIdentifier>{d6567f81-89cf-4097-a2b7-f794d755b5e3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题\条款39 名字空间，之一：using声明和using指令">
      <UniqueIdentifier>{8c411905-10d2-43e7-868d-7b609158930b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\7. 杂项议题\每款40 名字空间，之二：迁徙到名字空间">
      <UniqueIdentifier>{94883e0a-9c1c-43dd-b049-13f2c0137a2f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\8. 后记">
      <UniqueIdentifier>{0101729b-9eb0-44bb-9b37-921ef11aae6e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\8. 后记\附录A （在多线程环境下）并非优化">
      <UniqueIdentifier>{e9a7781d-8060-4e5a-8997-6e1b40e8ce9b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\More Exceptional C++\8. 后记\附录B 单线程String实现与多线程安全String实现的对比测试结果">
      <UniqueIdentifier>{356bcba4-9211-45aa-81be-21aad289f210}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言">
      <UniqueIdentifier>{28db9ae1-25fa-46e3-94a5-bfb86b8b77dc}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.0">
      <UniqueIdentifier>{0892e5d2-72fd-4e0b-990f-11c5b4dd61e9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.1 风格还是实用">
      <UniqueIdentifier>{af29be95-2397-4bbd-94f9-0170085c90c9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.2 伟大的苏格拉底">
      <UniqueIdentifier>{946d7101-2ed0-4648-a694-4a0ebe747d7a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.3 预备知识">
      <UniqueIdentifier>{899feb1f-ed6d-43c2-b135-851858a2dba6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.4 如何阅读本书">
      <UniqueIdentifier>{f0bc9397-bb4d-4197-9b5a-e64cf0a4c3f3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.5 致谢">
      <UniqueIdentifier>{087613bb-17fd-45a1-bf5c-07c12027d32d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库">
      <UniqueIdentifier>{c10b0352-7dd9-4c46-9581-50912c69645b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第1条 vector的使用">
      <UniqueIdentifier>{93d7b475-a6f4-43d2-b445-596d73bfd25d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第2条 字符串格式化的“动物庄园”之一：sprintf">
      <UniqueIdentifier>{ab230ba2-9fa5-4d5f-a3dd-93383969a0d1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第3条 字符串格式化的“动物庄园”之二：标准的（或极度优雅的）替代方案">
      <UniqueIdentifier>{addee522-7608-45b9-bbed-8c95fb2cb2a5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第4条 标准库成员函数">
      <UniqueIdentifier>{069f89d7-1c5f-4664-8b28-c503b2cfe7eb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第5条 泛型性的风味之一：基础">
      <UniqueIdentifier>{01bdbf2f-5cab-439b-9238-e53d10d6a3d1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第6条 泛型性的风味之二：够“泛”了吗">
      <UniqueIdentifier>{49120ea7-0ab6-4a51-b573-b1429866d52e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第7条 为什么不特化函数模板">
      <UniqueIdentifier>{3197eda6-b884-453b-b1f5-581cfb27be39}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第8条 友元模板">
      <UniqueIdentifier>{9b455e74-cdae-4364-83ab-7fda64fb12cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第9条 导出限制之一：基础">
      <UniqueIdentifier>{d4cbe0e2-28e6-47f0-a212-1fb1d70db423}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\1. 泛型编程与C++标准库\第10条 导出限制之二：相互影响，可用性问题以及准则">
      <UniqueIdentifier>{fa1ca0c1-242b-4d1f-96b7-6bab02b57238}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\2. 异常安全问题及相关技术">
      <UniqueIdentifier>{bb8ceb23-40a8-4b88-8ade-d104140e6dcf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\2. 异常安全问题及相关技术\第11条 Try和Catch">
      <UniqueIdentifier>{6256a6bc-a7b0-4a36-9a37-9cebf7f0b786}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\2. 异常安全问题及相关技术\第12条 异常安全性：值得吗？">
      <UniqueIdentifier>{6b7628c2-25fb-4dae-8ff7-8eaf250b2a69}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\2. 异常安全问题及相关技术\第13条 对异常规格的实际考虑">
      <UniqueIdentifier>{036ee558-5849-4c2b-a5fe-b4798896e6c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态">
      <UniqueIdentifier>{7baad152-9484-4bf5-ad60-efd6e6d51464}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第14条 顺序，顺序！">
      <UniqueIdentifier>{cbbabe63-ab18-462d-b3c3-f1c77b80fb5c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第15条 访问权限的使用">
      <UniqueIdentifier>{8afaf9a8-bcc5-42fc-bfba-2b1d0877416b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第16条 （几乎）私有">
      <UniqueIdentifier>{3c11a12a-b26a-4613-8b16-818b6423b6d2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第17条 封装">
      <UniqueIdentifier>{2af7d6c9-5bf5-4d3d-8c9d-5f0a7dfa24a1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第18条 虚拟">
      <UniqueIdentifier>{4eaf2af1-1947-4fdd-90b4-db503839205e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\3. 类的设计、继承和多态\第19条 对派生类施加规则">
      <UniqueIdentifier>{3ee6efbb-1a18-4c45-83bf-4a7158c29d0f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\4. 内存和资源管理">
      <UniqueIdentifier>{d87f6914-cdbd-4c0a-b95f-02b94ae03b8d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\4. 内存和资源管理\第20条 内存中的容器之一：内存管理的层次">
      <UniqueIdentifier>{11edab91-2ed9-4fe5-a53b-afd4fd817046}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\4. 内存和资源管理\第21条 内存中的容器之二：它到底有多大？">
      <UniqueIdentifier>{dc25ac22-2cb2-4f52-a485-bc723d902c5e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\4. 内存和资源管理\第22条 进行new操作，也许会抛出异常之一：new的方方面面">
      <UniqueIdentifier>{f3a564a3-4d80-4e3a-8160-673f4fe9efe3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\4. 内存和资源管理\第23条 进行new操作，也许会抛出异常之二：内存管理中的实际问题">
      <UniqueIdentifier>{1d5ef490-0877-4540-b93b-d8ed84b61377}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\5. 优化和效率">
      <UniqueIdentifier>{254c583d-7973-4343-b1ff-235c3ad4ee3d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\5. 优化和效率\第24条 常量优化">
      <UniqueIdentifier>{bc4868f7-c3ab-479b-8e47-c2aefb07d8e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\5. 优化和效率\第25条 再论内联">
      <UniqueIdentifier>{048f4be0-b719-4d35-baf0-5e09d5e81031}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\5. 优化和效率\第26条 数据格式和效率之一：什么时候压缩是真正重要的">
      <UniqueIdentifier>{f7a5b240-84db-4195-8b4f-b22b3819e184}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\5. 优化和效率\第27条 数据格式和效率之二：（甚至更少的）位操纵">
      <UniqueIdentifier>{a8ec5e61-bb78-4c46-8ea1-a205a5ca4dbe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题">
      <UniqueIdentifier>{19e0f2a7-e45e-46f0-b8fd-2ebd4c6db337}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第28条 不是关键字的关键字（或者：另一种注释）">
      <UniqueIdentifier>{93fadc3c-7b03-4cd2-874c-9a5ffe5db55c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第29条 这是初始化么？">
      <UniqueIdentifier>{82e52640-b9d1-4f72-b170-82aca734be5f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第30条 要么double要么彻底完蛋">
      <UniqueIdentifier>{a61b8408-c062-492d-8da2-bceb162d04f0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第31条 狂乱的代码">
      <UniqueIdentifier>{72d6cd1e-9fe8-448e-a8a7-eacf5a37469b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第32条 小小的拼写错误？鬼画符似的语言以及其他奇形怪状的东西">
      <UniqueIdentifier>{ea853e81-b6a2-4347-8fcd-ccd3509e374a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\6. 陷阱、缺陷和谜题\第33条 操作符，无处不在的操作符">
      <UniqueIdentifier>{45d9acb0-9c3c-49d3-adb8-6b18c5efd334}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究">
      <UniqueIdentifier>{a34e20fe-89f0-444c-bd17-74273e8f03fb}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第34条 索引表">
      <UniqueIdentifier>{99d35373-39d8-43e0-9b53-a9f4ff4831b7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第35条 泛型回调">
      <UniqueIdentifier>{1f34008b-331a-4228-bc83-278140a56812}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第36条 构造式union">
      <UniqueIdentifier>{782df0ea-2a4c-4733-9cc8-9be21baff90f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第37条 分解std::string之一：概观std::string">
      <UniqueIdentifier>{74001e5c-94a8-4582-8804-5b324a287c4a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第38条 分解std::string之二：重构std::string">
      <UniqueIdentifier>{2b741a1e-9468-4104-91bf-233980e8df7a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第39条 分解std::string之三：给std::string瘦身">
      <UniqueIdentifier>{57f11c06-ec39-4159-868f-bc199f44c60b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Exceptional C++ Style（C++ 编程剖析）\7. 风格案例研究\第40条 分解std::string之四：再论std::string">
      <UniqueIdentifier>{1484cff6-0a14-40fa-b23e-751057c228e6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\0.">
      <UniqueIdentifier>{0e0fd462-f7b3-4f1e-9425-5c4a7dc4e4a4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\0.\0.1 前言">
      <UniqueIdentifier>{88eda107-a343-49f4-b18b-d70a83a344bd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\0.\0.2 致谢">
      <UniqueIdentifier>{feeb6548-d3b7-46b3-aa02-ee993b8c3656}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款1 数据抽象">
      <UniqueIdentifier>{36266ab9-6e85-4474-aa56-90e0edf329c1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款2 多态">
      <UniqueIdentifier>{b7fcfbf7-101c-4f5f-8204-a3fa6ed00b2a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款3 设计模式">
      <UniqueIdentifier>{cdf0068f-c735-45f6-82eb-c171c51fa13a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款4 STL">
      <UniqueIdentifier>{b0450b8f-3338-4ee7-ba6c-ebde33b72032}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款5 引用是别名而非指针">
      <UniqueIdentifier>{44439e25-05e3-4921-a9b2-7a6ebbd55946}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款6 数组形参">
      <UniqueIdentifier>{cc9ed1af-ef48-4e84-86e6-725803fe699f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款7 常量指针与指向常量的指针">
      <UniqueIdentifier>{6b1a9dfd-c5c9-4e32-a140-b5ebd5a34d29}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款8 指向指针的指针">
      <UniqueIdentifier>{133984f0-76b6-43fc-8a9c-d76b9a34d2d8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款9 新式转型操作符">
      <UniqueIdentifier>{d2333c38-d438-433f-b3d9-621d0f617a54}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款10 常量成员函数的含义">
      <UniqueIdentifier>{2048b0a8-57fc-42e0-b306-f88e94c4c8d9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款11 编译器会在类中放东西">
      <UniqueIdentifier>{19676990-e242-4658-99bf-b3fb1259e0e9}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款12 赋值和初始化并不相同">
      <UniqueIdentifier>{27821482-9e03-49e5-bf38-ff21cdd6cdd2}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款13 复制操作">
      <UniqueIdentifier>{575cbbe6-f032-40b1-aa70-315857e02058}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款14 函数指针">
      <UniqueIdentifier>{0aecaecd-3884-4c70-b63f-fd8a62200ef8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款15 指向类成员的指针并非指针">
      <UniqueIdentifier>{6861ea9a-3dbe-418c-8dc6-101bb05d8d4b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款16 指向成员函数的指针并非指针">
      <UniqueIdentifier>{7b90039a-0827-4cb0-a02e-3d2f077724e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款17 处理函数和数组声明">
      <UniqueIdentifier>{5a6b3273-c02f-4dd9-b570-51166d3bd704}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款18 函数对象">
      <UniqueIdentifier>{5545695a-b3d3-4288-876f-a9d116589fa4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款19 Command模式与好莱坞法则">
      <UniqueIdentifier>{3cbea683-b06c-4617-bc96-239ee2536a9f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款20 STL函数对象">
      <UniqueIdentifier>{a31d4745-644b-4394-987b-1aa320a0601b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款21 重载与重写并不相同">
      <UniqueIdentifier>{8e916f32-bb47-4d81-acb4-d03d0a7dff0e}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款22 Template Method模式">
      <UniqueIdentifier>{38cc1209-d8c5-46fa-aded-f9adff26bfce}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款23 名字空间">
      <UniqueIdentifier>{74b38473-5027-4fef-ab4b-e6de60cd5ae4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款24 成员函数查找">
      <UniqueIdentifier>{914713d4-1fd5-4fa7-9871-d5a96f1187cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款25 实参相依的查找">
      <UniqueIdentifier>{625ea850-30f4-4bc8-99fb-4b8304ebf95a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款26 操作符函数查找">
      <UniqueIdentifier>{78c8e986-e1b4-4ae0-95c5-8fd46c57b9c7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款27 能力查询">
      <UniqueIdentifier>{23d78cb7-1f9b-4236-a6a0-33f678c7a941}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款28 指针比较的含义">
      <UniqueIdentifier>{35244b3d-814a-476b-bb38-70558f7fb13a}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款29 虚构造函数与Prototype模式">
      <UniqueIdentifier>{dd0183de-80c5-4d2f-819b-60b3ace858a3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款30 Factory Method模式">
      <UniqueIdentifier>{e40cb620-8077-4469-abf2-d7eb06fb44fe}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款31 协变返回类型">
      <UniqueIdentifier>{76b1bb09-a2a6-466f-98ed-42e405068c41}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款32 禁止复制">
      <UniqueIdentifier>{11317a85-8060-4f9a-ad7f-47aec45be374}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款33 制造抽象基类">
      <UniqueIdentifier>{91a5e6df-5426-469c-8c9d-9a5dce8b9374}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款34 禁止或强制使用堆分配">
      <UniqueIdentifier>{ffaf0d81-17b6-4ebc-8a01-1c1553a5277b}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款35 placement new">
      <UniqueIdentifier>{e0bfd579-1a57-4cf3-b27d-ce0290997db1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款36 特定于类的内存管理">
      <UniqueIdentifier>{113a4478-76c5-44f2-ae0a-7e2a69f54f59}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款37 数组分配">
      <UniqueIdentifier>{9b0aeee1-dce3-4e4d-84a7-506d983f968f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款38 异常安全公理">
      <UniqueIdentifier>{edfce71b-3a7f-43a6-a147-34c9d6a26372}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款39 异常安全的函数">
      <UniqueIdentifier>{27cec2f9-ed80-48e5-8830-9b82b2b08e82}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款40 RAII">
      <UniqueIdentifier>{c40b55cd-6afa-4560-b56d-13f85ac7b35c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款41 new、构造函数和异常">
      <UniqueIdentifier>{094352c0-4e6f-4a9e-84d0-6e96e9cfaf97}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款42 智能指针">
      <UniqueIdentifier>{32130423-450e-4070-8f37-8ac20df44089}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款43 auto_ptr非同寻常">
      <UniqueIdentifier>{78ba9ebe-a3ad-4285-911a-a68386e84059}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款44 指针算术">
      <UniqueIdentifier>{6b919180-bcda-499a-a5aa-a828735feee1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款45 模板术语">
      <UniqueIdentifier>{0ce17b17-53e8-46fa-bc29-9d7dff0b17a8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款46 类模板显式特化">
      <UniqueIdentifier>{76c2e588-acf3-470c-a1c6-3c3f3f287ee3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款47 模板局部特化">
      <UniqueIdentifier>{5d95d4cc-6094-4cb0-8110-abd94593a515}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款48 类模板成员特化">
      <UniqueIdentifier>{b484c32f-1245-4316-8a62-fb7d4216aa7c}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款49 利用typename消除歧义">
      <UniqueIdentifier>{673d29cc-fddb-4f94-aa4b-84d925348fb8}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款50 成员模板">
      <UniqueIdentifier>{6c596c3e-1b75-444e-8a68-54b68b7286c3}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款51 采用template消除歧义">
      <UniqueIdentifier>{a1eb8928-5f36-434d-844a-b07c74b093ff}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款52 针对类型信息的特化">
      <UniqueIdentifier>{958ec6eb-52a8-4603-82f0-2fd0b87edf88}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款53 嵌入的类型信息">
      <UniqueIdentifier>{0fd2fad3-1722-473f-8c5c-948f5151cb82}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款54 traits">
      <UniqueIdentifier>{5b5f2601-ec1a-435c-8e54-cd3ca9c8a652}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款55 模板的模板参数">
      <UniqueIdentifier>{79334e34-61c3-460a-befc-c8c049e2f79d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款56 policy">
      <UniqueIdentifier>{a1945505-a1ae-47bc-a46b-4f2933d13f56}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款57 模板实参推导">
      <UniqueIdentifier>{e10cd41c-a955-4d51-a3a9-22b03444e8a6}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款58 重载函数模板">
      <UniqueIdentifier>{66050b2b-27c5-46db-91b0-028424247868}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款59 SFINAE">
      <UniqueIdentifier>{17d0a00e-7cbd-40d5-ba82-ffb141cb3296}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款60 泛型算法">
      <UniqueIdentifier>{08790e90-ec1d-4367-970d-97198dddefcf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款61 只实例化要用的东西">
      <UniqueIdentifier>{8345eba7-2d1a-4869-a85c-29bba7b85111}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款62 包含哨位">
      <UniqueIdentifier>{b72d3d8e-783c-4f8b-8a68-0a74acd403b0}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Common Knowledge（C++ 必知必会）\条款63 可选的关键字">
      <UniqueIdentifier>{98b7b1e1-7a8f-405d-a61c-2d7adc402f91}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言">
      <UniqueIdentifier>{f42da484-28a0-4260-afc4-7ceb5aee0da5}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.0">
      <UniqueIdentifier>{91348220-7100-4299-a3c9-baa20d2bd497}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.1 如何使用本书">
      <UniqueIdentifier>{ae32f415-c7f1-4ab5-b643-9dfb06e981dd}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.2 编程规范与人的关系">
      <UniqueIdentifier>{045623ad-8ad1-475d-8c31-9a08ac3b53cf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.3 关于本书">
      <UniqueIdentifier>{4ae56e02-e512-4670-b78e-b7851a386928}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.4 致谢">
      <UniqueIdentifier>{ab2bffa9-b37d-4927-8363-586d1e215daf}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题">
      <UniqueIdentifier>{e82cb9f7-aaf9-4b14-b583-98eb8303dd2d}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题\第0条 不要拘泥于小节">
      <UniqueIdentifier>{69073de0-b931-473d-929c-38e2c4015ce7}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题\第1条 在高警告级别干净利落地进行编译">
      <UniqueIdentifier>{eae2d6a5-f5e6-48ce-8bd5-0dc48166d544}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题\第2条 使用自动构建系统">
      <UniqueIdentifier>{69245874-e2e2-40d1-829d-7b135c5eff6f}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题\第3条 使用版本控制系统">
      <UniqueIdentifier>{7db796b7-a099-49f2-aec2-4b1d94ca7843}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\C++ Coding Standards（C++ 编程规范）\1. 组织和策略问题\第4条 在代码审查上投入">
      <UniqueIdentifier>{c7405040-cbe6-4361-94be-7fd1ab3531e4}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\0.\0.3 绪论\0.3">
      <UniqueIdentifier>{5e17d54a-8b2c-4564-8883-e487181623e1}</UniqueIdentifier>
    </Filter>
    <Filter Include="Book\Effective Modern C++\第4章 智能指针\第4章 智能指针">
      <UniqueIdentifier>{0e3366f7-ebf8-4e71-aac8-1641f7e86fef}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <Text Include="Resource\ReadMe.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Schedule.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 0.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 1.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 2.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 3.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 4.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 5.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 6.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 7.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 8.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\Todo\Level 9.txt">
      <Filter>资源文件\Todo</Filter>
    </Text>
    <Text Include="Resource\More Effective C++.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\More Exceptional C++.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\C++ Coding Standards.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\C++ Common Knowledge.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Effective C++.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Effective Modern C++.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Effective STL.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Exceptional C++ Style.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="Resource\Exceptional C++.txt">
      <Filter>资源文件</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreEffectiveCpp\Preface\本书所谈的C++.txt">
      <Filter>Book\More Effective C++\0. 导读\0.1 本书所谈的C++</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreEffectiveCpp\Preface\臭虫报告，意见提供，内容更新.txt">
      <Filter>Book\More Effective C++\0. 导读\0.3 臭虫报告，意见提供，内容更新</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreEffectiveCpp\Preface\导读.txt">
      <Filter>Book\More Effective C++\0. 导读\0.0</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreEffectiveCpp\Preface\惯例和术语.txt">
      <Filter>Book\More Effective C++\0. 导读\0.2 惯例和术语</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\前言.txt">
      <Filter>Book\Effective STL\0.\0.1 前言</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\STL和标准.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.3 STL和标准</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\string和wstring.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.5 string和wstring</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\本书的指导原则.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.9 本书的指导原则</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\代码例子.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.7 代码例子</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\定义、使用和扩展STL.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.1 定义、使用和扩展STL</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\术语，术语，术语.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.6 术语，术语，术语</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\引言.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.0</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\引用计数.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.4 引用计数</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\与效率相关的条款.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.8 与效率相关的条款</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\致谢.txt">
      <Filter>Book\Effective STL\0.\0.2 致谢</Filter>
    </Text>
    <Text Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\引文.txt">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.2 引文</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Preface\0.3 绪论.txt">
      <Filter>Book\Effective Modern C++\0.\0.3 绪论\0.3</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter1\条款1 理解模板型别推导.txt">
      <Filter>Book\Effective Modern C++\第1章 型别推导\条款1 理解模板型别推导</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter1\条款2 理解auto型别推导.txt">
      <Filter>Book\Effective Modern C++\第1章 型别推导\条款2 理解auto型别推导</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter1\条款3 理解decltype.txt">
      <Filter>Book\Effective Modern C++\第1章 型别推导\条款3 理解decltype</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter1\条款4 掌握查看型别推导结果的方法.txt">
      <Filter>Book\Effective Modern C++\第1章 型别推导\条款4 掌握查看型别推导结果的方法</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter2\条款5 优先选用auto，而非显式型别声明.txt">
      <Filter>Book\Effective Modern C++\第2章 auto\条款5 优先选用auto，而非显式型别声明</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter2\条款6 当auto推导的型别不符合要求时，使用带显式型别的初始化物惯用法.txt">
      <Filter>Book\Effective Modern C++\第2章 auto\条款6 当auto推导的型别不符合要求时，使用带显式型别的初始化物惯用法</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款7 在创建对象时注意区分()和{}.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款7 在创建对象时注意区分%28%29和{}</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款8 优先选用nullptr，面非0或NULL.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款8 优先选用nullptr，面非0或NULL</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款9 优先选用别名声明，而非typedef.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款9 优先选用别名声明，而非typedef</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款10 优先选用限定作用域的枚举型别，而非不限作用域的枚举型别.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款10 优先选用限定作用域的枚举型别，而非不限作用域的枚举型别</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款11 优先选用删除函数，而非private未定义函数.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款11 优先选用删除函数，而非private未定义函数</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款12 为意在改写的函数添加override声明.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款12 为意在改写的函数添加override声明</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款13 优先选用const_iterator，而非iterator.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款13 优先选用const_iterator，而非iterator</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款14 只要函数不会发射异常，就为其加上noexcept声明.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款14 只要函数不会发射异常，就为其加上noexcept声明</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款15 只要有可能使用constexpr，就使用它.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款15 只要有可能使用constexpr，就使用它</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款16 保证const成员函数的线程安全性.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款16 保证const成员函数的线程安全性</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter3\条款17 理解特种成员函数的生成机制.txt">
      <Filter>Book\Effective Modern C++\第3章 转向现代C++\条款17 理解特种成员函数的生成机制</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\条款18 使用unique_ptr管理具备专属所有权的资源.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\条款18 使用std::unique_ptr管理具备专属所有权的资源</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\条款19 使用shared_ptr管理具备共享所有权的资源.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\条款19 使用std::shared_ptr管理具备共享所有权的资源</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\条款20 对于类似shared_ptr但有可能空悬的指针使用weak_ptr.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\条款20 对于类似std::shared_ptr但有可能空悬的指针使用std::weak_ptr</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\条款21 优先选用make_unique和make_shared，而非直接使用new.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\条款21 优先选用std::make_unique和std::make_shared，而非直接使用new</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\条款22 使用Pimpl习惯用法时，将特殊成员函数的定义放到实现文件中.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\条款22 使用Pimpl习惯用法时，将特殊成员函数的定义放到实现文件中</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter4\第4章 智能指针.txt">
      <Filter>Book\Effective Modern C++\第4章 智能指针\第4章 智能指针</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款23 理解move和forward.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款23 理解std::move和std::forward</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款24 区别万能引用和右值引用.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款24 区别万能引用和右值引用</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款25 针对右值引用实施move，针对万能引用实施forward.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款25 针对右值引用实施std::move，针对万能引用实施std::forward</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款26 避免依万能引用型别进行重载.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款26 避免依万能引用型别进行重载</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款27 熟悉万能引用型别进行重载的替代方案.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款27 熟悉万能引用型别进行重载的替代方案</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款28 理解引用折叠.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款28 理解引用折叠</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款29 假定移动操作不存在、成本高、未使用.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款29 假定移动操作不存在、成本高、未使用</Filter>
    </Text>
    <Text Include="Resource\EffectiveModernCpp\Chapter5\条款30 熟悉完美转发的失败情形.txt">
      <Filter>Book\Effective Modern C++\第5章 右值引用、移动语义和完美转发\条款30 熟悉完美转发的失败情形</Filter>
    </Text>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperience.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceDll.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceExport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceFwd.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceImport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceLib.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\BookExperienceNoImport.h">
      <Filter>头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Helper\BookExperienceCustomAssertMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Helper\Helper.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Helper\HelperFwd.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Helper\UserMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Helper\BookExperienceClassInvariantMacro.h">
      <Filter>Helper 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Placeholder\Placeholder.h">
      <Filter>Placeholder 头文件</Filter>
    </ClInclude>
    <ClInclude Include="..\..\..\..\Code\Example\BookCpp\BookExperience\DllLib.h">
      <Filter>头文件</Filter>
    </ClInclude>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookExperience\DllLib.cpp">
      <Filter>源文件</Filter>
    </ClCompile>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookExperience\DllMain.cpp">
      <Filter>源文件</Filter>
    </ClCompile>
    <ClCompile Include="..\..\..\..\Code\Example\BookCpp\BookExperience\Placeholder\Placeholder.cpp">
      <Filter>Placeholder 源文件</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\序言（1）.png">
      <Filter>Book\Effective C++\0. 前言\0.1 序言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\序言（2）.png">
      <Filter>Book\Effective C++\0. 前言\0.1 序言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\致谢（1）.png">
      <Filter>Book\Effective C++\0. 前言\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\致谢（2）.png">
      <Filter>Book\Effective C++\0. 前言\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\致谢（3）.png">
      <Filter>Book\Effective C++\0. 前言\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\致谢（4）.png">
      <Filter>Book\Effective C++\0. 前言\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\导读（1）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\导读（2）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\导读（3）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\命名习惯（1）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.2 命名习惯</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\命名习惯（2）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.2 命名习惯</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（1）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（2）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（3）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（4）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（5）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\术语（6）.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.1 术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\关于线程.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.3 关于线程</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveCpp\Preface\TR1和Boost.png">
      <Filter>Book\Effective C++\0. 前言\0.3 导读\0.3.4 TR1和Boost</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\EffectiveSTL\Preface\代码例子.jpg">
      <Filter>Book\Effective STL\0.\0.3 引言\0.3.7 代码例子</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreEffectiveCpp\Preface\惯例和术语.jpg">
      <Filter>Book\More Effective C++\0. 导读\0.2 惯例和术语</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\序（1）.jpg">
      <Filter>Book\Exceptional C++\0.\0.1 序</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\序（2）.jpg">
      <Filter>Book\Exceptional C++\0.\0.1 序</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\前言.png">
      <Filter>Book\Exceptional C++\0.\0.2 前言\0.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\致谢.png">
      <Filter>Book\Exceptional C++\0.\0.2 前言\0.2.3 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\本书的来龙去脉：GotW和PerDirect（1）.png">
      <Filter>Book\Exceptional C++\0.\0.2 前言\0.2.2 本书的来龙去脉：GotW和PerDirect</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\本书的来龙去脉：GotW和PerDirect（2）.png">
      <Filter>Book\Exceptional C++\0.\0.2 前言\0.2.2 本书的来龙去脉：GotW和PerDirect</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCpp\Preface\怎么阅读本书？（2）.png">
      <Filter>Book\Exceptional C++\0.\0.2 前言\0.2.1 怎么阅读本书？</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\序（1）.png">
      <Filter>Book\More Exceptional C++\0.\0.1 序</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\序（2）.png">
      <Filter>Book\More Exceptional C++\0.\0.1 序</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\致谢.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.5 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\何为“More”.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.1 何为“More”</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\名字空间、typename、URL引用以及其它约定.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.4 名字空间、typename、URL引用以及其它约定</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\你应该知道的.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.2 你应该知道的</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\前言.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\MoreExceptionalCpp\Preface\如何阅读本书.png">
      <Filter>Book\More Exceptional C++\0.\0.2 前言\0.2.3 如何阅读本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\前言.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.0</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\风格还是实用（1）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.1 风格还是实用</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\风格还是实用（2）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.1 风格还是实用</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\如何阅读本书（1）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.4 如何阅读本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\如何阅读本书（2）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.4 如何阅读本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\预备知识.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.3 预备知识</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\伟大的苏格拉底（2）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.2 伟大的苏格拉底</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\伟大的苏格拉底（1）.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.2 伟大的苏格拉底</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\ExceptionalCppStyle\Preface\致谢.png">
      <Filter>Book\Exceptional C++ Style（C++ 编程剖析）\0. 前言\0.5 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\前言（1）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.1 前言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\前言（2）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.1 前言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\前言（3）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.1 前言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\前言（4）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.1 前言</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\致谢（1）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCommonKnowledge\Preface\致谢（2）.png">
      <Filter>Book\C++ Common Knowledge（C++ 必知必会）\0.\0.2 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\编程规范与人的关系（2）.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.2 编程规范与人的关系</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\编程规范与人的关系（1）.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.2 编程规范与人的关系</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\关于本书（1）.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.3 关于本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\关于本书（2）.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.3 关于本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\致谢.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.4 致谢</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\如何使用本书.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.1 如何使用本书</Filter>
    </Image>
    <Image Include="..\..\..\..\Code\Example\BookCpp\BookExperience\CppCodingStandards\Preface\前言.png">
      <Filter>Book\C++ Coding Standards（C++ 编程规范）\0. 前言\0.0</Filter>
    </Image>
  </ItemGroup>
</Project>
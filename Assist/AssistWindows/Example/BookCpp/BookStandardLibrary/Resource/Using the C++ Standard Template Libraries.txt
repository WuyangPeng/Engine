C++ 标准模板库编程实战（Using the C++ Standard Template Libraries）

官方网站：
http://www.nuonsoft.com/ 、https://www.apress.com/cn/book/9781484200056、
https://github.com/Apress/using-cpp-standard-template-libraries.git

★
作者：Ivor Horton
其他书籍：《Visual C++ 入门经典》、《C++17 入门经典》

作者简介
技术编辑简介
致谢
前言
	使用本书的先决条件
	如何使用本书
第1章 STL介绍 
	1.1 基本思想 
	1.2 模板 
	1.3 容器 
	1.4 迭代器 
		1.4.1 获取迭代器 
		1.4.2 迭代器的类别 
		1.4.3 流迭代器 
		1.4.4 迭代器适配器 
	1.5 迭代器上的运算 
	1.6 智能指针 
		1.6.1 使用unique_ptr指针 
		1.6.2 使用shared_ptr指针 
		1.6.3 weak_ptr指针 
	1.7 算法 
	1.8 将函数作为实参传入 
		1.8.1 函数对象 
		1.8.2 lambda表达式
	1.9 小结 
	练习 
第2章 使用序列容器 
	2.1 序列容器 
	2.2 使用array容器 
		2.2.1 访问元素 
		2.2.2 使用数组容器的迭代器
		2.2.3 比较数组容器 
	2.3 使用vector容器 
		2.3.1 创建vector容器 
		2.3.2 vector的容量和大小 
		2.3.3 访问元素 
		2.3.4 使用vector容器的迭代器 
		2.3.5 向vector容器中添加元素 
		2.3.6 删除元素 
		2.3.7 vector容器 
	2.4 使用deque容器 
		2.4.1 生成deque容器 
		2.4.2 访问元素 
		2.4.3 添加和移除元素 
		2.4.4 替换deque容器中的内容 
	2.5 使用list容器 
		2.5.1 生成list容器 
		2.5.2 添加元素 
		2.5.3 移除元素 
		2.5.4 排序和合并元素 
		2.5.5 访问元素 
	2.6 使用forward_list容器 
	2.7 自定义迭代器 
		2.7.1 STL迭代器的要求
		2.7.2 走进STL 
	2.8 本章小结 
	练习 
第3章 容器适配器 
	3.1 什么是容器适配器 
	3.2 创建和使用stack容器适配器 
	3.3 创建和使用queue容器适配器 
		3.3.1 queue操作 
		3.3.2 queue容器的实际使用 
	3.4 使用priority_queue容器适配器
		3.4.1 创建priority_queue
		3.4.2 priority_queue操作 
	3.5 堆 
		3.5.1 创建堆 
		3.5.2 堆操作 
	3.6 在容器中保存指针 
		3.6.1 在序列容器中保存指针
		3.6.2 在优先级队列中存储指针 
		3.6.3 指针的堆 
		3.6.4 基类指针的容器
		3.6.5 对指针序列应用算法
	3.7 本章小结 
	练习 
第4章 map容器 
	4.1 map容器介绍 
	4.2 map容器的用法 
		4.2.1 创建map容器 
		4.2.2 map元素的插入
		4.2.3 在map中构造元素 
		4.2.4 访问map中的元素 
		4.2.5 删除元素 
	4.3 pair<>和tuple<>的用法 
		4.3.1 pair的操作
		4.3.2 tuple的操作
		4.3.3 tuples和pairs实战 
	4.4 multimap容器的用法 
	4.5 改变比较函数 
		4.5.1 greater对象的用法 
		4.5.2 用自定义的函数对象来比较元素 
	4.6 哈希 
	4.7 unordered_map容器的用法 
		4.7.1 生成和管理unordered_map容器 
		4.7.2 调整格子个数 
		4.7.3 插入元素 
		4.7.4 访问元素 
		4.7.5 移除元素 
		4.7.6 访问格子 
	4.8 unordered_multimap容器的用法 
	4.9 本章小结 
	练习 
第5章 set的使用 
	5.1 理解set容器 
	5.2 使用set容器
		5.2.1 添加和移除元素
		5.2.2 访问元素 
		5.2.3 使用set 
		5.2.4 set迭代器 
		5.2.5 在set容器中保存指针 
	5.3 使用multiset容器 
		5.3.1 保存派生类对象的指针
		5.3.2 定义容器 
		5.3.3 定义示例的main()函数 
	5.4 unordered_set容器 
		5.4.1 添加元素 
		5.4.2 检索元素 
		5.4.3 删除元素 
		5.4.4 创建格子列表 
	5.5 使用unordered_multiset容器 
	5.6 集合运算 
		5.6.1 set_union()算法 
		5.6.2 set_intersection()算法 
		5.6.3 set_difference()算法 
		5.6.4 set_symmetric_difference()算法 
		5.6.5 includes()算法 
		5.6.6 集合运算的运用
	5.7 本章小结 
	练习 
第6章 排序、合并、搜索和分区 
	6.1 序列排序 
		6.1.1 排序以及相等元素的顺序 
		6.1.2 部分排序 
		6.1.3 测试排序序列 
	6.2 合并序列 
	6.3 搜索序列 
		6.3.1 在序列中查找元素
		6.3.2 在序列中查找任意范围的元素 
		6.3.3 在序列中查找多个元素
	6.4 分区序列 
		6.4.1 partition_copy()算法 
		6.4.2 partition_point()算法 
	6.5 二分查找算法 
		6.5.1 binary_search()算法 
		6.5.2 lower_bound()算法 
		6.5.3 equal_range()算法 
	6.6 本章小结 
	练习 
第7章 更多的算法 
	7.1 检查元素的属性 
	7.2 序列的比较 
		7.2.1 查找序列的不同之处
		7.2.2 按字典序比较序列
		7.2.3 序列的排列 
	7.3 复制序列 
		7.3.1 复制一定数目的元素
		7.3.2 条件复制 
	7.4 复制和反向元素顺序
	7.5 复制一个删除相邻重复元素的序列 
	7.6 从序列中移除相邻的重复元素 
	7.7 旋转序列 
	7.8 移动序列 
	7.9 从序列中移除元素 
	7.10 设置和修改序列中的元素 
		7.10.1 用函数生成元素的值
		7.10.2 转换序列 
		7.10.3 替换序列中的元素
	7.11 算法的应用 
	7.12 本章小结 
	练习 
第8章 生成随机数 
	8.1 什么是随机数 
	8.2 概率、分布以及熵 
		8.2.1 什么是概率 
		8.2.2 什么是分布 
		8.2.3 什么是熵 
	8.3 用STL生成随机数 
		8.3.1 生成随机数的种子
		8.3.2 获取随机种子 
		8.3.3 种子序列 
	8.4 分布类 
		8.4.1 默认随机数生成器
		8.4.2 创建分布对象 
		8.4.3 均匀分布 
		8.4.4 正态分布 
		8.4.5 对数分布 
		8.4.6 其他和正态分布相关的分布 
		8.4.7 抽样分布 
		8.4.8 其他分布 
	8.5 随机数生成引擎和生成器
		8.5.1 线性同余引擎 
		8.5.2 马特赛特旋转演算法引擎 
		8.5.3 带进位减法引擎
	8.6 重组元素序列 
	8.7 本章小结 
	练习 
第9章 流操作 
	9.1 流迭代器 
		9.1.1 输入流迭代器 
		9.1.2 输出流迭代器 
	9.2 重载插入和提取运算符
	9.3 对文件使用流迭代器
		9.3.1 文件流 
		9.3.2 文件流类的模板
		9.3.3 用流迭代器进行文件输入 
		9.3.4 用流迭代器来反复读文件 
		9.3.5 用流迭代器输出文件
	9.4 流迭代器和算法 
	9.5 流缓冲区迭代器 
		9.5.1 输入流缓冲区迭代器
		9.5.2 输出流缓冲区迭代器
		9.5.3 对文件流使用输出流缓冲区迭代器 
	9.6 string流、流，以及流缓冲区迭代器 
	9.7 本章小结 
	练习 
第10章 使用数值、时间和复数 
	10.1 数值计算 
	10.2 数值算法 
		10.2.1 保存序列中的增量值
		10.2.2 求序列的和 
		10.2.3 内积 
		10.2.4 相邻差 
		10.2.5 部分和 
		10.2.6 极大值和极小值
	10.3 保存和处理数值 
		10.3.1 valarray对象的基本操作 
		10.3.2 一元运算符 
		10.3.3 用于valarray对象的复合赋值运算符 
		10.3.4 valarray对象的二元运算 
		10.3.5 访问valarray对象中的元素 
		10.3.6 多个切片 
		10.3.7 选择多行或多列
		10.3.8 使用gslice对象 
		10.3.9 选择元素的任意子集
		10.3.10 有条件地选择元素
		10.3.11 有理数算法
	10.4 时序模板 
		10.4.1 定义duration
		10.4.2 时钟和时间点
	10.5 复数 
		10.5.1 生成表示复数的对象
		10.5.2 复数的运算 
		10.5.3 复数上的比较和其他运算 
		10.5.4 一个使用复数的简单示例 
	10.6 本章小结 
	练习 

$Copyright$

#ifndef $ModuleUppercase$_$ModuleUppercase$_HELPER_H
#define $ModuleUppercase$_$ModuleUppercase$_HELPER_H

#include "$ModuleName$Message.h"
#include "Framework/MainFunctionHelper/WindowMainFunctionHelper.h"
#include "Framework/WindowsAPIFrame/WindowsAPIFrameBuild.h"

namespace $ModuleName$
{
    using WindowMainFunctionHelperBase = Framework::WindowMainFunctionHelper<Framework::WindowsAPIFrameBuild, $ModuleName$MessageWindowProcessHandle>;

    class $ModuleName$Helper final : public WindowMainFunctionHelperBase
    {
    public:
        using ClassType = $ModuleName$Helper;
        using ParentType = WindowMainFunctionHelperBase;

        using EnvironmentDirectory = Framework::EnvironmentDirectory;
        using WindowApplicationInformation = Framework::WindowApplicationInformation;

    public:
        $ModuleName$Helper(WindowsHInstance instance, const char* commandLine, const WindowApplicationInformation& information, const EnvironmentDirectory& environmentDirectory);

        CLASS_INVARIANT_OVERRIDE_DECLARE;
    };
}

#endif  // $ModuleUppercase$_$ModuleUppercase$_HELPER_H

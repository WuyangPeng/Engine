C++ 多线程编程实战（C++ Multithreading Cookbook）

★★
作者：Milos Ljumovic

官方网站：
https://expert.its.me/ 、 https://milos.expert.its.me/

作者简介
致谢
审稿人简介
前言
	本书涵盖的内容
	本书必备软件
	本书的读者对象
	本书的体例
第1章　C++概念和特性简介　
	1.1　介绍　
	1.2　创建C++项目　
	1.3　程序结构、执行流和运行时对象　
	1.4　结构化编程方法　
	1.5　理解面向对象编程方法　
	1.6　解释继承、重载和覆盖　
	1.7　理解多态　
	1.8　事件处理器和消息传递接口　
	1.9　链表、队列和栈示例　
第2章　进程和线程的概念　
	2.1　简介　
	2.2　进程和线程　
	2.3　解释进程模型　
	2.4　进程的实现　
	2.5　进程间通信（IPC）　
	2.6　解决典型的IPC问题　
	2.7　线程模型的实现　
	2.8　线程的用法　
	2.9　在用户空间实现线程　
	2.10　在内核实现线程　
第3章　管理进程　
	3.1　介绍　
	3.2　进程和线程　
	3.3　协作式和抢占式多任务处理　
	3.4　解释Windows线程对象　
	3.5　基本线程管理　
	3.6　实现异步的线程　
	3.7　实现同步的线程　
	3.8　Win32同步对象和技术　
		3.8.1　同步对象：互斥量　
		3.8.2　同步对象：信号量　
		3.8.3　同步对象：事件　
		3.8.4　同步对象：临界区　
第4章　消息传递　
	4.1　介绍　
	4.2　解释消息传递接口　
	4.3　理解消息队列　
	4.4　使用线程消息队列　
	4.5　通过管道对象通信　
第5章　线程同步和并发操作　
	5.1　介绍　
	5.2　伪并行　
	5.3　理解进程和线程优先级　
	5.4　Windows分发器对象和调度　
	5.5　使用互斥量　
	5.6　使用信号量　
	5.7　使用事件　
	5.8　使用临界区　
	5.9　使用管道　
第6章　.NET框架中的线程　
	6.1　介绍　
	6.2　托管代码和非托管代码　
	6.3　如何在.NET中运行线程　
	6.4　前台线程和后台线程的区别　
	6.5　理解.NET同步要素　
	6.6　锁和避免死锁　
	6.7　线程安全和.NET框架的类型　
	6.8　事件等待
	6.9	 基于事件的异步模式
	6.10 BackgoundWorker类
	6.11 中断、中止和安全取消线程执行
	6.12 非阻塞同步
	6.13 Wait和Pulse触发
	6.14 Barrier类
第7章 理解并发代码设计
	7.1 介绍
	7.2 如何设计并行应用程序
	7.3 理解代码设计中的并行
	7.4 转向并行 
	7.5 改进性能因素
第8章 高级线程管理
	8.1 介绍
	8.2 使用线程池
	8.3 定制线程池分发器
	8.4 使用远程线程
附录A 
	A.1 安装MySQL Connector/C
	A.2 安装WinDDK-Driver开发套件
	A.3 设置驱动器编译的Visual Studio项目
	A.4 使用DebugView应用程序
	A.5 设置OpenMP编译的Visual Studio项目
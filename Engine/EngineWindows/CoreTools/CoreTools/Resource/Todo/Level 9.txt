TODO Level 9
 
0.0.5.1
 

2.  （LogManager）考虑修改AnalysisAppenderManager实现的设计，不返回解析完的类指针。
3.  （LogManager）考虑修改LogAppenderIOManagerImpl的指针设计。
4.  （LogManager）日志库的断言会产生日志，检查是否会无限递归。
5.  （LogManager）将日志库的名字的月份名改成数字。

2.  （ObjectSystems）使用智能指针重新设计对象系统。


8.  （TextParsing）完成TextParsing模块的相关内容：增加一个文本解析类，对配置进行读取。 
9.  （TextParsing）完成TextParsing模块的相关内容：增加一个二维表解析类，对二维表进行读取。 
10. （LogManager）日志库使用CFileManager或FileHandle代替目前的StreamManager，看是否可以取消独占式打开文件。考虑是否改成打开、写入、关闭的模式。
11. （LogManager）日志库在没有配置的情况下会死循环，需要修改。
12. （LogManager）检查日志库的多线程是否还存在问题。
13. （LogManager）使用ReadFileHandle和WriteFileHandle代替目前的fstream写日志。
14. （DataTypes）实现一个无锁数据结构。
15. （MemoryTools）读写锁用于单例需要细致编程，很容易导致死锁。 
16. （MemoryTools）目前类不变式调用无法加入读锁，又无法设为私有，目前只有考虑将类不变式类设为友元，并将IsValid函数设为私有一种解决方案。
17. （ObjectSystems）C++11保证局部静态变量只初始化一次，看需要不需要修改ObjectInterface的注册方式。
18.  （LogManager）支持日志库扩展性，可将日志写入数据库和将日志发送到日志服务器（包含日志原来的各种写入性）。 
19.  （LogManager）根据ACE的日志库重整，增加日志级别等内容。 
20.  （LogManager）使用单独的线程管理日志库。对同样的日志进行过滤。
21.  （LogManager）对不会打印的日志进行优化，不进行字符串拼接。
22.  （LogManager）将LogFilterManager返回的字符串改成配置。
23. （Time）增加获取当前时间相关的信息，如月份，零点时间，周日时间等。
24. （Time）创建一个类型安全的秒、毫秒和微秒类。

2.  （MemoryTools）重构类Memory的实现。
3.  （ObjectSystems）将模块使用的子类智能指针改成std::shared_ptr。
4.  （UnitTest）单元测试增加以随机顺序运行测试。



5.  （LogManager）日志是否打印到控制台改成配置。
6.  （DataTypes）对MinHeap进行性能优化。
7.  （ObjectSystems）使用单例封装InitTerm。用std::array代替原来的静态数组。
8.  （UnitTestSuite）单元测试增加对各个条件流程完整性运行进行判断的测试。
9.  （UnitTestSuite）单元测试增加是否打印正在进行哪个测试的配置。
10. （ObjectSystems）把GetStreamSize改成constexpr函数。
11.	（综合）程序复杂度的检测程序。（参考代码大全19.6）

3.  （LogManager）日志库过天，文件改变逻辑，看看有没有办法直接加在日志库中，而不是通过外部调用。
4.  （MemoryTools）内存库使用地址做键值，可能会导致错误。
5.  （MemoryTools）修改MD5类，使其更加安全。 
6.  （MemoryTools）修改内存池相关类，使用智能指针代替裸指针。
7.  （MemoryTools）使用atomic增加引用计数，而不是锁。
8.  （ObjectSystems）考虑ObjectRegister、BufferTarget、BufferSource、ObjectLink保留裸指针的接口是否必须。 
9.  （UnitTestSuite）单元测试打印正在运行的测试，顶层信息未打出。
10. （UnitTestSuite）单元测试打印测试的引擎、游戏版本号。
11. （UnitTestSuite）同名但不同文件的单元测试出现问题，需要修改。
12. （ResourceManager）将资源管理的键ID改成uint64_t。
13. （ModuleInitializerTerminator）增加一个需要加载模块配置类，对配置进行读取。 
14. （ModuleInitializerTerminator）增加一个模块自动加载及终止类。
15. （ModuleInitializerTerminator）终止已加载的模块，并加载新的模块。			  
16. （SyntacticParser）增加语法分析器。 
17. （PerformanceProfiler）增加性能剖析器。
18. （PerformanceProfiler）增加统计采集类。
19. （PerformanceProfiler）在框架各个循环监测各模块使用的时间。 
20. （EngineConfiguration）增加引擎配置类。
21. （CyclicRedundancyCheck）将SpecifyCheckSum和SpecifyCheckSum的数组改成array，并移到实现文件。
22. （RegularExpression）增加正则表达式解析类。
23. （Network）完成Network模块。 
24. （Properties）类MethodPropertySet的引用类型改成const引用类型。
25. （zlib）完成zlib库的封装。
26. （Freetype）完成Freetype库的封装。
1. （HandleManager）优化句柄管理类。
2. （ResourceManager）优化资源管理类。
3. （FrameMemorySystem）优化帧内存系统。
4. （BitArray）优化位数组类。
5. （Properties）优化属性类。
6. （MessageEvent）优化消息事件类。
7. （StateMachineManager）优化状态机类。
1.  （TextParsing）完成一个文本查询类，结合《C++ Primer》第4版的第10章和第15章，第5版的第12章和第15章。
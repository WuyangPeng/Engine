条款17 理解特种成员函数的生成机制
	★	特种成员函数是指那些C++会自行生成的成员函数。
	★	生成的特种成员函数都具有public访问层级且是inline的，而且它们都是非虚的，
		除非讨论的是一个析构函数，位于一个派生类中，并且基类的析构函数是个虚函数。
		在那种情况下，编译器为派生类生成的析构函数也是个虚函数。
	★	按成员移动是由两部分组成，一部分是在支持移动操作的成员上执行的移动操作，另一部分是在不支持移动操作的成员上执行的复制操作。
	★	声明一个移动构造函数会阻止编译器去生成移动赋值运算符，而声明一个移动赋值运算符也会阻止编译器去生成移动构造函数。
	★	一旦显式声明了复制操作，这个类也就不再会生成移动操作了。
	★	一旦声明了移动操作，编译器就会废除复制操作。
	★	只要用户声明了析构函数，就不会生成移动操作。
	★	移动操作的生成条件：
		1.	该类未声明任何复制操作。
		2.	该类未声明任何移动操作。
		3.	该类未声明任何析构函数。
	★	在已经存在复制操作或析构函数的条件下，仍然自动生成复制操作已经成为了被废弃的行为。
	★	将这些函数自行声明，并以“= default”作为它们的定义。
	★	默认构造函数：仅当类中不包含用户声明的构造函数时才生成。
	★	析构函数：析构函数默认为noexcept。仅当基类的析构函数为虚的，派生类的析构函数才是虚的。
	★	复制构造函数：按成员进行非静态数据成员的复制构造。仅当类中不包含用户声明的复制构造函数时才生成。
					  如果该类声明了移动操作，则复制构造函数将被删除。
					  在已经存在复制赋值运算符或析构函数的条件下，仍然生成复制构造函数已经成为了被废弃的行为。
	★	复制赋值运算符：按成员进行非静态数据成员的复制赋值，仅当类中不包含用户声明的复制赋值运算符时才生成。
						如果该类声明了移动操作，则复制赋值运算符将被删除。
						在已经存在复制构造函数或析构函数的条件下，仍然生成复制赋值运算符已经成为了被废弃的行为。
	★	移动构造函数和移动赋值运算符：都按成员进行非静态数据成员的移动操作。
									  仅当类中不包含用户声明的复制操作、移动操作和析构函数时才生成。
	★	特种成员函数是指那些C++会自行生成的成员函数：默认构造函数、析构函数、复制操作、以及移动操作。
	★	移动操作仅当类中未包含用户显式声明的复制操作、移动操作和析构函数时才生成。
	★	复制构造函数仅当类中不包含用户显式声明的复制构造函数时才生成，如果该类声明了移动操作则复制构造函数将被删除。
		复制赋值运算符仅当类中不包含用户显式声明的复制赋值运算符时才生成，如果该类声明了移动操作则复制赋值运算符将被删除。
		在已经存在显式声明的析构函数的条件下，生成复制操作已经成为了被废弃的行为。
	★	成员函数模板在任何情况下都不会抑制特种成员函数的生成。
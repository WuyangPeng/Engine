C++ 实践之路（C++ In Action:Industrial-Strength Programming Techniques）

★
作者：Bartosz Milewski

知识点 
1.	C++	基础知识。 
2.  C++ 基础练习知识。

代码 
1.  书籍代码。 

前言
	语言
	技术
		★ 为了编写强健可靠的应用程序，使用异常是最终的选择。
	Windows
	知识扩展
		★ 编程就是设计。设计、构建原型，一遍遍地测试，软件工业是最终的“设计工业”。
		★ 程序是为程序员而写的。
	如何使用本书
第一部分 语言
	第1章  对象和作用域
		1.1 全局作用域
		1.2 本地作用域
		1.3 嵌入对象
		1.4 继承
		1.5 成员函数和接口
		1.6 成员函数作用域
		1.7 类型
			1.7.1 小结
			1.7.2 练习
		1.8 抽象数据类型
	第2章  数组和引用
		2.1 引用
		2.2 运算符
			2.2.1 算术
			2.2.2 逻辑
			2.2.3 位逻辑运算符
		2.3 基于堆栈的计算器
			2.3.1 外部规范
			2.3.2 设计
			2.3.3 简短的实现
			2.3.4 实现
			2.3.5 练习
	第3章  指针
		3.1 指针的不利之处
		3.2 指针与引用 
		3.3 指针与数组
			3.3.1 谈谈汇编
			3.3.2 练习
		3.4 指针与动态内存分配 
		3.5 动态数据结构
			3.5.1 动态堆栈
			3.5.2 链表
			3.5.3 字符串表
			3.5.4 字符串缓冲器
			3.5.5 表查找
			3.5.6 哈希表
			3.5.7 测试程序
			3.5.8 练习
	第4章  多态
		4.1 is-a的意义
			4.1.1 谈谈实现
			4.1.2 开销
		4.2 解析树	
			4.2.1 谈谈C
			4.2.2 练习
	第5章  一个小型软件项目
		5.1 开始一个软件项目
			5.1.1 设计规范
			5.1.2 简短实现代码
			5.1.3 扩展程序片断
		5.2 扫描器
		5.3 符号表
		5.4 存储
		5.5 函数表
		5.6 节点
		5.7 解析器
		5.8 主函数
		5.9 聚集初始化
		5.10 过程化编程
		5.11 运算符重载
		5.12 按值传递
		5.13 值语义
第二部分 技术 
	第6章  清理
		6.1 输出解耦
		6.2 与“防错性编程”作斗争
		6.3 完备性编程的一个实例
		6.4 补充
		6.5 改进类之间的通信
		6.6 更正设计缺陷
	第7章  隐藏实现细节
		7.1 使用嵌入类
		7.2 组合类
		7.3 使用名字空间组合
		7.4 枚举中隐藏常量
		7.5 在本地变量中隐藏常量 
	第8章  共享
		8.1 分离全局程序参数
		8.2 增强包容性
		8.3 模板
	第9章  去掉限制
		9.1 动态数组
			9.1.1 动态MultiNode
			9.1.2 动态StringBuffer
			9.1.3 动态SymbolTable
			9.1.4 动态Store
		9.2 标准矢量
	第10章  资源管理
		10.1 异常
		10.2 堆栈展开
		10.3 资源
		10.4 资源所有权
		10.5 访问资源
		10.6 智能指针
		10.7 所有权转移：第一次尝试
		10.8 所有权转移：第二次尝试
		10.9 安全容器
		10.10 迭代器
		10.11 错误传播
		10.12 转换到资源管理
		10.13 结论
	第11章  使用标准模板库
		11.1 引用计数以及即写即复制
		11.2 结束限制
		11.3 去掉C-字符串
		11.4 探讨流
	第12章  持久性
		12.1 Calculator对象
		12.2 命令解析器
		12.3 串行化与反串行化
		12.4 内存中的串行化及反串行化
		12.5 多重继承
	第13章  重载运算符new
		13.1 特定类new 
			13.1.1 缓冲
			13.1.2 批量分配 
			13.1.3 数组new
		13.2 全局new
		13.3 跟踪内存泄漏
			13.3.1 调用输出
			13.3.2 方位new
		13.4 结论
第三部分 Windows
	第14章  库
	第15章  编程范例
		15.1 Hello Windows
		15.2 封装
	第16章  通过C++控制Windows
		16.1 模型——视图——控制器
			16.1.1 控制器
			16.1.2 客户代码
		16.2 异常定义
		16.3 清理
	第17章  绘图
		17.1 应用程序图标
		17.2 窗口绘图和视图对象
		17.3 画布
		17.4 WM_PAINT消息
		17.5 模型
		17.6 捕获鼠标
		17.7 添加颜色和修饰
	第18章  一个Windows应用程序
		18.1 把计算器移植到Windows环境下
		18.2 用户界面
		18.3 子窗口
		18.4 Windows控件
			18.4.1 静态文本
			18.4.2 编辑控件
			18.4.3 窗口子类
			18.4.4 插入计算器
			18.4.5 列表框控件
			18.4.6 模块——视图反馈环
		18.5 命令和菜单
		18.6 动态菜单
		18.7 对话框
第四部分 知识扩展
	第19章  关于软件
		19.1 复杂性
		19.2 软件的分形本质
		19.3 项目的灵活性
		19.4 程序员的灵活性
	第20章  设计策略
		20.1 自顶向下的面向对象设计
		20.2 用户界面
		20.3 需求规范
		20.4 体系结构规范
	第21章  团队工作
		21.1 生产效率
		21.2 团队策略
	第22章  实现策略
		22.1 确定全局
		22.2 自顶向下的面向对象实现方法
		22.3 程序修改
		22.4 代码继承
		22.5 多平台开发
	第23章  移植
		23.1 创建一个抽象层
		23.2 移植计算器
			23.2.1 消除简单的Windows依赖性
			23.2.2 特殊Windows依赖性
		23.3 移植的好处
附录
	附录A 练习答案
	附录B 事务处理

本书内容
读者可根据自己对C++的熟练程度，阅读感兴趣的部分。C++11 和C++14 引入的新概念散落在本
书各个相关的章节中。本书包含如下5 部分。
第1部分，“基本知识”，引导读者编写一些简单的C++应用程序，并介绍一些常见的C++关键字。
第2部分，“C++面向对象编程基础”，介绍类的概念，您将学习C++如何支持封装、抽象、继承和多态等重要的面向对象编程原则。第9 章将介绍C++11 新增的移动构造函数，而第12章将介绍移动赋值运算符。这些功能有助于避免不必要的复制步骤，从而提升应用程序的性能。第14 章是一个跳板，帮助您编写功能强大的C++通用代码。
第3部分，“学习标准模板库（STL）”，将帮助您使用STL string 类和容器编写高效而实用的C++代码。您将了解到，使用std::string 可安全而轻松地拼接字符串，您不再需要使用C 风格的字符串char*。您可使用STL 动态数组和链表，而无需自己编写这样的类。
第4部分，“再谈STL”，专注于算法，您将学习如何通过迭代器对vector 等容器进行sort 操作。在这部分，您将发现，通过使用C++11 新增的关键字auto，可极大地简化冗长的迭代器声明。第22 章将介绍C++11 新增的lambda 表达式，这可极大地简化使用STL 算法的代码。
第5部分，“高级C++概念”，阐述智能指针和异常处理等C++功能。对C++应用程序来说，这些功能并非必需的，但可极大地提高应用程序的稳定性和品质。在这部分的最后，简要地介绍了有助于编写杰出C++应用程序的最佳实践，还展望了下一个ISO 标准―C++17 有望引入
的新特性。
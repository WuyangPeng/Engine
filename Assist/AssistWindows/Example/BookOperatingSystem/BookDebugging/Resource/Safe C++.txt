C++ 编程调试秘笈 （Safe C++）

官方网站： 
https://github.com/vladimir-kushnir/SafeCPlusPlus
 
★★★
作者： Viadimir Kusbnir

知识点 
1.	调试基础知识。 

前言
第一部分 C++的缺陷捕捉策略         
	第1章 C++的缺陷来自哪里         
	第2章 什么时候捕捉缺陷        
		2.1 为什么编译器是捕捉缺陷的最好场合         
		2.2 怎样用编译器捕捉缺陷         
		2.3 处理类型的正确方式        
	第3章 在运行时遇见错误该怎么办        
第二部分 捕捉缺陷：一次处理一个缺陷        
	第4章 索引越界         
		4.1 动态数组         
		4.2 静态数组         
		4.3 多维数组         
	第5章 指针运算         
	第6章 无效的指针、引用和迭代器         
	第7章 未初始化的变量         
		7.1 初始化的数值（int、double等）         
		7.2 未初始化的布尔值         
	第8章 内存泄漏         
		8.1 引用计数指针         
		8.2 作用域指针         
		8.3 用智能指针实行所有权         
	第9章 解引用NULL指针         
	第10章 拷贝构造函数和赋值操作符         
	第11章 避免在析构函数中编写代码         
	第12章 怎样编写一致的比较操作符         
	第13章 使用标准C函数库的错误         
第三部分 捕捉缺陷的乐趣：从测试到调试到产品         
	第14章 基本的测试原则         
	第15章 调试错误的策略         
	第16章 使代码更容易调试         
	第17章 总结         
	附录A 本书所使用的scpp库的源代码         
	附录B scpp_assert.hpp和scpp_assert.cpp文件的源代码         
	附录C scpp_vector.hpp文件的源代码         
	附录D scpp_array.hpp文件的源代码         
	附录E scpp_matrix.hpp文件的源代码         
	附录F scpp_types.hpp文件的源代码         
	附录G scpp_refcountptr.hpp文件的源代码         
	附录H scpp_scopedptr.hpp文件的源代码         
	附录I scpp_ptr.hpp文件的源代码         
	附录J scpp_date.hpp和scpp_date.cpp文件的源代码    	
书 软件设计 模块

1.	书 UML
软件设计 UML。
目前包含：
（1） UML面向对象建模与设计。
（2） UML和模式应用。
（3） UML用户指南。
（4） UML精粹。 
（5） UML基础、案例与应用。 

2.	书 代码
软件设计 代码。
目前包含：
（1） 代码大全。
（2） 代码整洁之道。
（3） 代码质量。
（4） 代码阅读。 
（5） 编程匠艺：编写卓越的代码。 
（6） 代码之美。
（7） 编写可读代码的艺术。 
（8） 修改代码的艺术。 
（9） 梦断代码。 

3.	书 模式
软件设计 模式。
目前包含：
（1） 设计模式解析。
（2） 设计模式：可复用面向对象软件的基础。
（3） 程序设计的模式语言。
（4） 设计模式沉思录。 
（5） 面向模式的软件体系结构。 
（6） 企业应用架构模式。 

4.	书 重构
软件设计 重构。
目前包含：
（1） 重构：改善既有代码的设计。
（2） 重构与模式。
（3） 重构手册。 

5.	书 测试驱动
软件设计 测试驱动。
目前包含：
（1） 测试驱动开发。
（2） 测试驱动开发――实用指南。
（3） 测试驱动开发的艺术。 
（4） 测试驱动的面向对象软件开发。 

6.	书 敏捷开发
软件设计 敏捷开发。
目前包含：
（1） 敏捷软件开发：原则、模式与实践。
（2） 解析极限编程――拥抱变化。
（3） 敏捷建模：极限编程和统一过程的有效实践。 
（4） 高效程序员的45个习惯：敏捷开发修炼之道。 

7.	书 经验
软件设计 经验。
目前包含：
（1） 程序员修炼之道――从小工到专家。
（2） 程序员的思维修炼：开发认知潜能的九堂课。
（3） 人月神话。 
（4） 软件随想录：程序员部落酋长Joel谈软件。 

8.	书 面向对象
软件设计 面向对象。
目前包含：
（1） 面向对象分析与设计。
（2） 面向对象分析与设计（UML 2.0版）。
（3） 写给大家看的面向对象编程书。  

9.	书 软件工程
软件设计 软件工程。
目前包含：
（1） 灾难拯救：让软件项目重回轨道。
（2） 模糊测试强制性安全漏洞发掘。
（3） 代码优化：有效使用内存。  
（4） 持续集成：软件质量改进和风险降低之道。
（5） 架构之美。
（6） 领域驱动设计和模式实战。  
（7） 反模式：危机中软件、架构和项目的重构。
（8） 编写有效用例。
（9） 软件工程：实践者的研究方法。
（10）分析模式：可复用的对象模型。

10.	书 编译
软件设计 编译。
目前包含：
（1） 编程语言实现模式。
（2） 编译原理。
（3） 高级编译器设计与实现。  
（4） 现代编译原理――C语言描述。
（5） 计算机程序的构造和解释。

11.	书 人工智能
软件设计 人工智能。
目前包含：
（1） 人工智能：复杂问题求解的结构和策略。
（2） 人工智能――一种现代方法。
（3） 深度学习。   
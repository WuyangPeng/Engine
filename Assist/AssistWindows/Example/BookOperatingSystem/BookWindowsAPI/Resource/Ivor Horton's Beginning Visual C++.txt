Visual C++ 入门经典 （Ivor Horton's Beginning Visual C++）

官方网站： 
http://www.wrox.com、 http://www.tupwk.com.cn/downpage、 http://www.nuonsoft.com/blog

第5版 
○ 
作者：Ivor Horton
其他书籍：《C++17 入门经典》、《C++ 标准模板库编程实战》

知识点 
1.	C++ 基础知识。 
2.	CLI 基础知识。

代码 
1.  书籍代码。

前言
	0.1 使用C++语言编程
	0.2 开发Windows应用程序
	0.3 高级库功能 
	0.4 本书读者对象
	0.5 本书主要内容
	0.6 本书结构
	0.7 使用本书的前提
	0.8 源代码
	0.9 勘误表
	0.10 关于p2p.wrox.com网站
第1章 使用Visual C++ 2010编程
	1.1 .NET Framework
	1.2 CLR
	1.3 编写C++应用程序
	1.4 学习Windows编程
		1.4.1 学习C++
		1.4.2 C++标准
		1.4.3 属性
		1.4.4 控制台应用程序
		1.4.5 Windows编程概念
	1.5 集成开发环境简介
		1.5.1 编辑器
		1.5.2 编译器
		1.5.3 链接器
		1.5.4 库
	1.6 使用IDE
		1.6.1 工具栏选项
		1.6.2 可停靠的工具栏
		1.6.3 文档
		1.6.4 项目和解决方案
		1.6.5 设置Visual C++ 2010的选项
		1.6.6 创建和执行Windows应用程序
		1.6.7 创建Windows Forms应用程序
	1.7 小结
	1.8 本章主要内容
第2章 数据、变量和计算
	2.1 C++程序结构
		2.1.1 main()函数
		2.1.2 程序语句
		2.1.3 空白
		2.1.4 语句块
		2.1.5 自动生成的控制台程序
	2.2 定义变量
		2.2.1 命名变量
		2.2.2 声明变量
		2.2.3 变量的初始值
	2.3 基本数据类型
		2.3.1 整型变量
		2.3.2 字符数据类型
		2.3.3 整型修饰符
		2.3.4 布尔类型
		2.3.5 浮点类型
		2.3.6 字面值
		2.3.7 定义数据类型的同义词
		2.3.8 具有特定值集的变量
	2.4 基本的输入/输出操作
		2.4.1 从键盘输入
		2.4.2 到命令行的输出
		2.4.3 格式化输出
		2.4.4 转义序列
	2.5 C++中的计算
		2.5.1 赋值语句
		2.5.2 算术运算
		2.5.3 计算余数
		2.5.4 修改变量
		2.5.5 增量和减量运算符
		2.5.6 计算的顺序
	2.6 类型转换和类型强制转换
		2.6.1 赋值语句中的类型转换
		2.6.2 显式类型转换
		2.6.3 老式的类型强制转换
	2.7 AUTO关键字
	2.8 查看类型
	2.9 按位运算符
		2.9.1 按位AND运算符
		2.9.2 按位OR运算符
		2.9.3 按位EOR运算符
		2.9.4 按位NOT运算符
		2.9.5 移位运算符
	2.10 lvalue和rvalue
	2.11 了解存储时间和作用域
		2.11.1 自动变量
		2.11.2 决定变量声明的位置
		2.11.3 全局变量
		2.11.4 静态变量
	2.12 名称空间
		2.12.1 声明名称空间
		2.12.2 多个名称空间
	2.13 C++/CLI编程
		2.13.1 C++/CLI特有的基本数据类型
		2.13.2 命令行上的C++/CLI输出
		2.13.3 C++/CLI特有的功能——格式化输出
		2.13.4 C++/CLI的键盘输入
		2.13.5 使用safe_cast
		2.13.6 C++/CLI枚举
	2.14 查看C++/CLI类型
	2.15 小结
	2.16 练习
	2.17 本章主要内容
第3章 判断和循环
	3.1 比较数据值
		3.1.1 if语句
		3.1.2 嵌套的if语句
		3.1.3 嵌套的if-else语句
		3.1.4 逻辑运算符和表达式
		3.1.5 条件运算符
		3.1.6 switch语句
		3.1.7 无条件转移
	3.2 重复执行语句块
		3.2.1 循环的概念
		3.2.2 for循环的变体
		3.2.3 while循环
		3.2.4 do-while循环
		3.2.5 嵌套的循环
	3.3 C++/CLI编程
	3.4 小结
	3.5 练习
	3.6 本章主要内容
第4章 数组、字符串和指针
	4.1 处理多个相同类型的数据值
		4.1.1 数组
		4.1.2 声明数组
		4.1.3 初始化数组
		4.1.4 字符数组和字符串处理
		4.1.5 多维数组
	4.2 间接数据访问
		4.2.1 指针的概念
		4.2.2 声明指针
		4.2.3 使用指针
		4.2.4 初始化指针
		4.2.5 sizeof操作符
		4.2.6 常量指针和指向常量的指针
		4.2.7 指针和数组
	4.3 动态内存分配
		4.3.1 堆的别名——空闲存储器
		4.3.2 new和delete操作符
		4.3.3 为数组动态分配内存
		4.3.4 多维数组的动态分配
	4.4 使用引用
		4.4.1 引用的概念
		4.4.2 声明并初始化lvalue引用
		4.4.3 声明并初始化rvalue引用
	4.5 字符串的本地C++库函数
		4.5.1 查找以空字符结尾的字符串的长度
		4.5.2 连接以空字符结尾的字符串
		4.5.3 复制以空字符结尾的字符串
		4.5.4 比较以空字符结尾的字符串
		4.5.5 搜索以空字符结尾的字符串
	4.6 C++/CLI编程
		4.6.1 跟踪句柄
		4.6.2 CLR数组
		4.6.3 字符串
		4.6.4 跟踪引用
		4.6.5 内部指针
	4.7 小结
	4.8 练习
	4.9 本章主要内容
第5章 程序结构（1）
	5.1 理解函数
		5.1.1 需要函数的原因
		5.1.2 函数的结构
		5.1.3 使用函数
	5.2 给函数传递实参
		5.2.1 按值传递机制
		5.2.2 给函数传递指针实参
		5.2.3 给函数传递数组
		5.2.4 给函数传递引用实参
		5.2.5 使用const修饰符
		5.2.6 rvalue引用形参
		5.2.7 main()函数的实参
		5.2.8 接受数量不定的函数实参
	5.3 从函数返回值
		5.3.1 返回指针
		5.3.2 返回引用
		5.3.3 函数中的静态变量
	5.4 递归函数调用
	5.5 C++/CLI编程
		5.5.1 接受数量可变实参的函数
		5.5.2 main()的实参
	5.6 小结
	5.7 练习
	5.8 本章主要内容
第6章 程序结构（2）
	6.1 函数指针
		6.1.1 声明函数指针
		6.1.2 函数指针作为实参
		6.1.3 函数指针的数组
	6.2 初始化函数形参
	6.3 异常
		6.3.1 抛出异常
		6.3.2 捕获异常
		6.3.3 MFC中的异常处理
	6.4 处理内存分配错误
	6.5 函数重载
		6.5.1 函数重载的概念
		6.5.2 引用类型和重载选择
		6.5.3 何时重载函数
	6.6 函数模板
	6.7 使用decltype操作符
	6.8 使用函数的示例
		6.8.1 实现计算器
		6.8.2 从字符串中删除空格
		6.8.3 计算表达式的值
		6.8.4 获得项值
		6.8.5 分析数
		6.8.6 整合程序
		6.8.7 扩展程序
		6.8.8 提取子字符串
		6.8.9 运行修改过的程序
	6.9 C++/CLI编程
		6.9.1 理解泛型函数
		6.9.2 CLR版本的计算器程序
	6.10 小结
	6.11 练习
	6.12 本章主要内容
第7章 自定义数据类型
	7.1 C++中的结构
		7.1.1 结构的概念
		7.1.2 定义结构
		7.1.3 初始化结构
		7.1.4 访问结构的成员
		7.1.5 伴随结构的智能感知帮助
		7.1.6 RECT结构
		7.1.7 使用指针处理结构
	7.2 数据类型、对象、类和实例
		7.2.1 类的起源
		7.2.2 类的操作
		7.2.3 术语
	7.3 理解类
		7.3.1 定义类
		7.3.2 声明类的对象
		7.3.3 访问类的数据成员
		7.3.4 类的成员函数
		7.3.5 成员函数定义的位置
		7.3.6 内联函数
	7.4 类构造函数
		7.4.1 构造函数的概念
		7.4.2 默认的构造函数
		7.4.3 在类定义中指定默认的形参值
		7.4.4 在构造函数中使用初始化列表
		7.4.5 声明显式的构造函数
	7.5 类的私有成员
		7.5.1 访问私有类成员
		7.5.2 类的友元函数
		7.5.3 默认复制构造函数
	7.6 this指针
	7.7 类的const对象
		7.7.1 类的const成员函数
		7.7.2 类外部的成员函数定义
	7.8 类对象的数组
	7.9 类的静态成员
		7.9.1 类的静态数据成员
		7.9.2 类的静态函数成员
	7.10 类对象的指针和引用
		7.10.1 类对象的指针
		7.10.2 类对象的引用
	7.11 C++/CLI编程
		7.11.1 定义值类类型
		7.11.2 定义引用类类型
		7.11.3 定义引用类类型的复制构造函数
		7.11.4 类属性
		7.11.5 initonly字段
		7.11.6 静态构造函数
	7.12 小结
	7.13 练习
	7.14 本章主要内容
第8章 深入理解类
	8.1 类析构函数
		8.1.1 析构函数的概念
		8.1.2 默认的析构函数
		8.1.3 析构函数与动态内存分配
	8.2 实现复制构造函数
	8.3 在变量之间共享内存
		8.3.1 定义联合
		8.3.2 匿名联合
		8.3.3 类和结构中的联合
	8.4 运算符重载
		8.4.1 实现重载的运算符
		8.4.2 实现对比较运算符的完全支持
		8.4.3 重载赋值运算符
		8.4.4 重载加法运算符
		8.4.5 重载递增和递减运算符
		8.4.6 重载函数调用操作符
	8.5 对象复制问题
		8.5.1 避免不必要的复制操作
		8.5.2 应用rvalue引用形参
		8.5.3 使名的对象是lvalue
	8.6 类模板
		8.6.1 定义类模板
		8.6.2 根据类模板创建对象
		8.6.3 使用有多个形参的类模板
		8.6.4 函数对象模板
	8.7 使用类
		8.7.1 类接口的概念
		8.7.2 定义问题
		8.7.3 实现CBox类
	8.8 组织程序代码
	8.9 字符串的本地C++库类
		8.9.1 创建字符串对象
		8.9.2 连接字符串
		8.9.3 访问与修改字符串
		8.9.4 比较字符串
		8.9.5 搜索字符串
	8.10 C++/CLI编程
		8.10.1 在值类中重载运算符
		8.10.2 重载递增和递减运算符
		8.10.3 在引用类中重载运算符
		8.10.4 实现引用类型的赋值运算符
	8.11 小结
	8.12 练习
	8.13 本章主要内容
第9章 类继承和虚函数
	9.1 面向对象编程的基本思想
	9.2 类的继承
		9.2.1 基类的概念
		9.2.2 基类的派生类
	9.3 继承机制下的访问控制
		9.3.1 派生类中的构造函数的操作
		9.3.2 声明类的保护成员
		9.3.3 继承类成员的访问级别
	9.4 派生类中的复制构造函数
	9.5 友元类成员
		9.5.1 友元类
		9.5.2 对类友元关系的限制
	9.6 虚函数
		9.6.1 虚函数的概念
		9.6.2 使用指向类对象的指针
		9.6.3 使用引用处理虚函数
		9.6.4 纯虚函数
		9.6.5 抽象类
		9.6.6 间接基类
		9.6.7 虚析构函数
	9.7 类类型之间的强制转换
	9.8 嵌套类
	9.9 C++/CLI编程
		9.9.1 装箱与拆箱
		9.9.2 C++/CLI类的继承
		9.9.3 接口类
		9.9.4 定义接口类
		9.9.5 类和程序集
		9.9.6 被指定为new的函数
		9.9.7 委托和事件
		9.9.8 引用类的函数和终结器
		9.9.9 泛型类
	9.10 小结
	9.11 练习
	9.12 本章主要内容
第10章 标准模板库
	10.1 标准模板库的定义
		10.1.1 容器
		10.1.2 容器适配器
		10.1.3 迭代器
		10.1.4 算法
		10.1.5 STL中的函数对象
		10.1.6 函数适配器
	10.2 STL容器范围
	10.3 序列容器
		10.3.1 创建矢量容器
		10.3.2 矢量容器的容量和大小
		10.3.3 访问矢量中的元素
		10.3.4 在矢量中插入和删除元素
		10.3.5 在矢量中存储类对象
		10.3.6 排序矢量元素
		10.3.7 排序矢量中的指针
		10.3.8 双端队列容器
		10.3.9 使用列表容器
		10.3.10 使用其他序列容器
	10.4 关联容器
		10.4.1 使用映射容器
		10.4.2 使用多重映射容器
	10.5 关于迭代器的更多内容 
		10.5.1 使用输入流迭代器
		10.5.2 使用插入迭代器
		10.5.3 使用输出流迭代器
	10.6 关于函数对象的更多内容 
	10.7 关于算法的更多内容 
		10.7.1 fill()
		10.7.2 replace()
		10.7.3 find()
		10.7.4 transform()
	10.8 lambda表达式
		10.8.1 capture子句
		10.8.2 捕获特定的变量
		10.8.3 模板和lambda表达式
		10.8.4 包装lambda表达式
	10.9 C++/CLI程序中的STL
		10.9.1 STL/CLR容器
		10.9.2 使用序列容器
		10.9.3 使用关联容器
	10.10 C++/CLI中的lambda表达式
	10.11 小结
	10.12 练习
	10.13 本章主要内容 
第11章 调试技术
	11.1 理解调试
		11.1.1 程序故障
		11.1.2 常见故障
	11.2 基本的调试操作
		11.2.1 设置断点
		11.2.2 设置跟踪点
		11.2.3 启动调试模式
		11.2.4 修改变量的值
	11.3 添加调试代码 
		11.3.1 使用断言 
		11.3.2 添加自己的调试代码
	11.4 调试程序
		11.4.1 调用栈
		11.4.2 单步执行到出错位置 
	11.5 测试扩展的类
	11.6 调试动态内存
		11.6.1 检查空闲存储器的函数
		11.6.2 控制空闲存储器的调试操作
		11.6.3 空闲存储器的调试输出
	11.7 调试C++/CLI程序
		11.7.1 使用调试类Debug和跟踪类Trace
		11.7.2 在Windows Forms应用程序中获得跟踪输出
	11.8 小结
	11.9 本章主要内容
第12章 Windows编程的概念
	12.1 Windows编程的基础
		12.1.1 窗口的元素
		12.1.2 Windows程序与操作系统
		12.1.3 事件驱动型程序
		12.1.4 Windows消息
		12.1.5 Windows API
		12.1.6 Windows 数据类型
		12.1.7 Windows 程序中的符号
	12.2 Windows程序的结构
		12.2.1 WinMain()函数
		12.2.2 消息处理函数
		12.2.3 简单的Windows程序
	12.3 Windows程序的组织
	12.4 MFC
		12.4.1 MFC表示法
		12.4.2 MFC程序的组织方式
	12.5 使用Windows Forms
	12.6 小结
	12.7 本章主要内容
第13章 多核编程
	13.1 并行处理基本知识
	13.2 并行模式库
	13.3 并行处理算法
		13.3.1 使用parallel_for算法 
		13.3.2 使用parallel_for_each算法 
		13.3.3 使用parallel_invoke算法 
	13.4 真正的并行问题
	13.5 临界区
		13.5.1 使用critical_section对象
		13.5.2 锁定代码节或解除代码节锁定
	13.6 combinable类模板
	13.7 任务和任务组
	13.8 小结
	13.9 练习
	13.10 本章主要内容
第14章 使用MFC编写Windows程序
	14.1 MFC的文档/视图概念
		14.1.1 文档的概念
		14.1.2 文档界面
		14.1.3 视图的概念
		14.1.4 链接文档和视图
		14.1.5 应用程序和MFC
	14.2 创建MFC应用程序
		14.2.1 创建SDI应用程序
		14.2.2 MFC Application Wizard的输出
		14.2.3 创建MDI应用程序
	14.3 小结
	14.4 练习
	14.5 本章主要内容
第15章 处理菜单和工具栏
	15.1 与Windows进行通信
		15.1.1 了解消息映射
		15.1.2 消息类别
		15.1.3 处理程序中的消息
	15.2 扩展Sketcher程序
	15.3 菜单的元素
	15.4 为菜单消息添加处理程序
		15.4.1 选择处理菜单消息的类
		15.4.2 创建菜单消息函数
		15.4.3 编写菜单消息函数的代码
		15.4.4 添加更新用户界面的消息处理程序
	15.5 添加工具栏按钮
		15.5.1 编辑工具栏按钮的属性
		15.5.2 练习使用工具栏按钮
		15.5.3 添加工具提示
	15.6 C++/CLI程序中的菜单和工具栏
		15.6.1 理解Windows Forms
		15.6.2 理解Windows Forms应用程序
		15.6.3 在CLR Sketcher中添加菜单
		15.6.4 添加菜单项的事件处理程序
		15.6.5 实现事件处理程序
		15.6.6 设置菜单项复选
		15.6.7 添加工具栏
	15.7 小结
	15.8 练习
	15.9 本章主要内容
第16章 在窗口中绘图
	16.1 窗口绘图的基础知识
		16.1.1 窗口工作区
		16.1.2 Windows图形设备界面
	16.2 Visual C++中的绘图机制
		16.2.1 应用程序中的视图类
		16.2.2 CDC类
	16.3 实际绘制图形
	16.4 对鼠标进行编程
		16.4.1 鼠标发出的消息
		16.4.2 鼠标消息处理程序
		16.4.3 使用鼠标绘图
	16.5 练习使用Sketcher程序
		16.5.1 运行示例
		16.5.2 捕获鼠标消息
	16.6 在CLR中绘图
		16.6.1 在窗体上绘图
		16.6.2 添加鼠标事件处理程序
		16.6.3 定义C++/CLI元素类
		16.6.4 实现MouseMove事件处理程序
		16.6.5 实现MouseUp事件处理程序
		16.6.6 实现窗体的Paint事件处理程序
	16.7 小结
	16.8 练习
	16.9 本章主要内容
第17章 创建文档和改进视图
	17.1 创建草图文档 
	17.2 改进视图
		17.2.1 更新多个视图
		17.2.2 滚动视图
		17.2.3 使用MM_LOENGLISH映射模式
	17.3 删除和移动形状
	17.4 实现上下文菜单 
		17.4.1 关联菜单和类
		17.4.2 练习弹出菜单
		17.4.3 突出显示元素
		17.4.4 处理菜单消息
	17.5 处理屏蔽的元素
	17.6 扩展CLR Sketcher
		17.6.1 坐标系统转换
		17.6.2 定义草图类
		17.6.3 在Paint事件处理程序中绘制草图
		17.6.4 实现元素的突出显示
		17.6.5 创建上下文菜单 
	17.7 小结
	17.8 练习
	17.9 本章主要内容
第18章 使用对话框和控件
	18.1 理解对话框
	18.2 理解控件
	18.3 创建对话框资源
		18.3.1 给对话框添加控件
		18.3.2 测试对话框
	18.4 对话框的编程
		18.4.1 添加对话框类
		18.4.2 模态和非模态对话框
		18.4.3 显示对话框
	18.5 支持对话框控件
		18.5.1 初始化控件
		18.5.2 处理单选按钮消息
	18.6 完成对话框的操作
		18.6.1 给文档添加线宽
		18.6.2 给元素添加线宽
		18.6.3 在视图中创建元素
		18.6.4 练习使用对话框
	18.7 使用微调按钮控件
		18.7.1 添加Scale菜单项和工具栏按钮 
		18.7.2 创建微调按钮
		18.7.3 生成比例对话框类
		18.7.4 显示微调按钮
	18.8 使用缩放比例
		18.8.1 可缩放的映射模式
		18.8.2 设置文档的大小
		18.8.3 设置映射模式
		18.8.4 同时实现滚动与缩放
	18.9 使用CTaskDialog类
		18.9.1 显示任务对话框
		18.9.2 创建CTaskDialog对象
	18.10 使用状态栏
	18.11 使用列表框
		18.11.1 删除比例对话框
		18.11.2 创建列表框控件
	18.12 使用编辑框控件
		18.12.1 创建编辑框资源 
		18.12.2 创建对话框类
		18.12.3 添加Text菜单项
		18.12.4 定义文本元素
		18.12.5 实现CText类
	18.13 CLR Sketcher中的对话框和控件
		18.13.1 添加对话框
		18.13.2 创建文本元素
	18.14 小结
	18.15 练习
	18.16 本章主要内容
第19章 存储和打印文档
	19.1 了解序列化
	19.2 序列化文档 
		19.2.1 文档类定义中的序列化
		19.2.2 文档类实现中的序列化
		19.2.3 基于CObject的类的功能
		19.2.4 序列化的工作方式 
		19.2.5 如何实现类的序列化
	19.3 应用序列化
		19.3.1 记录文档修改
		19.3.2 序列化文档
		19.3.3 序列化元素类
	19.4 练习序列化
	19.5 打印文档 
	19.6 实现多页打印
		19.6.1 获取文档的总尺寸
		19.6.2 存储打印数据
		19.6.3 准备打印
		19.6.4 打印后的清除
		19.6.5 准备设备上下文
		19.6.6 打印文档 
		19.6.7 获得文档的打印输出
	19.7 CLR Sketcher中的序列化和打印
		19.7.1 了解二进制的序列化
		19.7.2 序列化草图
		19.7.3 打印草图
	19.8 小结
	19.9 练习
	19.10 本章主要内容
第20章 编写自己的DLL
	20.1 了解DLL
		20.1.1 DLL的工作方式 
		20.1.2 DLL的内容 
		20.1.3 DLL变体 
	20.2 决定放入DLL的内容
	20.3 编写DLL
	20.4 小结
	20.5 练习
	20.6 本章主要内容

第7版

○ 
作者：Ivor Horton
其他书籍：《C++17 入门经典》、《C++ 标准模板库编程实战》

知识点 
1.	C++ 基础知识。 
2.	MFC 基础知识。

代码 
1.  书籍代码。

作者简介
技术编辑简介
致谢
前言
	0.1 本书读者对象
	0.2 本书主要内容
	0.3 本书结构
	0.4 使用本书的前提
	0.5 源代码
	0.6 练习
	0.7 勘误表
	0.8 关于p2p.wrox.com网站
第1章 使用Visual C++ 编程
	1.1 使用Visual C++ 学习
	1.2 编写C++ 应用程序
	1.3 学习桌面应用程序的编程
		1.3.1 学习C++
		1.3.2 C++ 概念
		1.3.3 控制台应用程序
		1.3.4 Windows编程概念
	1.4 集成开发环境简介
		1.4.1 编辑器
		1.4.2 编译器
		1.4.3 链接器
		1.4.4 库
		1.4.5 标准C++ 库
		1.4.6 Microsoft库
	1.5 使用IDE
		1.5.1 工具栏选项
		1.5.2 可停靠的工具栏
		1.5.3 文档
		1.5.4 项目和解决方案
		1.5.5 设置Visual C++ 的选项
		1.5.6 创建和执行Windows应用程序
	1.6 小结
	1.7 本章主要内容
第2章 数据、变量和计算
	2.1 C++ 程序结构
		2.1.1 main()函数
		2.1.2 程序语句
		2.1.3 空白
		2.1.4 语句块
		2.1.5 自动生成的控制台程序
	2.2 定义变量
		2.2.1 命名变量
		2.2.2 关键字
		2.2.3 声明变量
		2.2.4 变量的初始值
	2.3 基本数据类型
		2.3.1 整型变量
		2.3.2 字符数据类型
		2.3.3 整型修饰符
		2.3.4 布尔类型
		2.3.5 浮点类型
		2.3.6 C++ 中的基本类型
		2.3.7 字面值
		2.3.8 定义类型的别名
	2.4 基本的输入/输出操作
		2.4.1 从键盘输入
		2.4.2 到命令行的输出
		2.4.3 格式化输出
		2.4.4 转义序列
	2.5 C++ 中的计算
		2.5.1 赋值语句
		2.5.2 算术运算
		2.5.3 计算余数
		2.5.4 修改变量
		2.5.5 增量和减量运算符
		2.5.6 计算的顺序
	2.6 类型转换和类型强制转换
		2.6.1 赋值语句中的类型转换
		2.6.2 显式类型转换
		2.6.3 老式的类型强制转换
	2.7 auto关键字
	2.8 类型的确定
	2.9 按位运算符
		2.9.1 按位AND运算符
		2.9.2 按位OR运算符
		2.9.3 按位XOR运算符
		2.9.4 按位NOT运算符
		2.9.5 移位运算符
	2.10 lvalue和rvalue
	2.11 了解存储时间和作用域
		2.11.1 自动变量
		2.11.2 决定变量声明的位置
		2.11.3 全局变量
		2.11.4 静态变量
	2.12 具有特定值集的变量
		2.12.1 旧枚举
		2.12.2 类型安全的枚举
	2.13 名称空间
		2.13.1 声明名称空间
		2.13.2 多个名称空间
	2.14 小结
	2.15 练习
	2.16 本章主要内容
第3章 判断和循环
	3.1 比较数据值
		3.1.1 if语句
		3.1.2 嵌套的if语句
		3.1.3 嵌套的if-else语句
		3.1.4 逻辑运算符和表达式
		3.1.5 条件运算符
		3.1.6 switch语句
		3.1.7 无条件转移
	3.2 重复执行语句块
		3.2.1 循环的概念
		3.2.2 for循环的变体
		3.2.3 while循环
		3.2.4 do-while循环
		3.2.5 基于范围的循环
		3.2.6 嵌套的循环
	3.3 小结
	3.4 练习
	3.5 本章主要内容
第4章 数组、字符串和指针
	4.1 处理多个相同类型的数据值
		4.1.1 数组
		4.1.2 声明数组
		4.1.3 初始化数组
		4.1.4 使用基于范围的for循环
		4.1.5 多维数组
	4.2 处理C样式的字符串
		4.2.1 字符串输入
		4.2.2 字符串字面量
		4.2.3 给字符串使用基于范围的for循环
	4.3 间接数据访问
		4.3.1 指针的概念
		4.3.2 声明指针 
		4.3.3 使用指针  
		4.3.4 初始化指针  
		4.3.5 指向char类型的指针  
		4.3.6 sizeof操作符  
		4.3.7 常量指针和指向常量的指针  
		4.3.8 指针和数组  
	4.4 动态内存分配  
		4.4.1 堆的别名——空闲存储器  
		4.4.2 new和delete操作符  
		4.4.3 为数组动态分配内存  
		4.4.4 多维数组的动态分配  
	4.5 使用引用  
		4.5.1 引用的概念  
		4.5.2 声明并初始化lvalue引用  
		4.5.3 在基于范围的for循环中使用引用  
		4.5.4 创建rvalue引用  
	4.6 字符串的库函数  
		4.6.1 确定以空字符结尾的字符串的长度  
		4.6.2 连接以空字符结尾的字符串  
		4.6.3 复制以空字符结尾的字符串  
		4.6.4 比较以空字符结尾的字符串  
		4.6.5 搜索以空字符结尾的字符串  
	4.7 小结  
	4.8 练习  
	4.9 本章主要内容  
第5章 程序结构（1）
	5.1 理解函数  
		5.1.1 需要函数的原因  
		5.1.2 函数的结构  
		5.1.3 替代的函数语法  
		5.1.4 使用函数  
	5.2 给函数传递实参  
		5.2.1 按值传递机制  
		5.2.2 给函数传递指针实参  
		5.2.3 给函数传递数组  
		5.2.4 给函数传递引用实参  
		5.2.5 使用const修饰符  
		5.2.6 rvalue引用形参  
		5.2.7 main()函数的实参  
		5.2.8 接受数量不定的函数实参  
	5.3 从函数返回值  
		5.3.1 返回指针  
		5.3.2 返回引用  
		5.3.3 函数中的静态变量  
	5.4 递归函数调用  
	5.5 小结  
	5.6 练习  
	5.7 本章主要内容  
第6章 程序结构（2）
	6.1 函数指针  
		6.1.1 声明函数指针  
		6.1.2 函数指针作为实参  
		6.1.3 函数指针的数组  
	6.2 初始化函数形参  
	6.3 异常  
		6.3.1 抛出异常  
		6.3.2 捕获异常  
		6.3.3 重新抛出异常  
		6.3.4 MFC中的异常处理  
	6.4 处理内存分配错误  
	6.5 函数重载  
		6.5.1 函数重载的概念  
		6.5.2 引用类型和重载选择  
		6.5.3 何时重载函数  
	6.6 函数模板  
	6.7 使用decltype操作符  
	6.8 使用函数的示例  
		6.8.1 实现计算器  
		6.8.2 从字符串中删除空格  
		6.8.3 计算表达式的值  
		6.8.4 获得项值  
		6.8.5 分析数  
		6.8.6 整合程序  
		6.8.7 扩展程序  
		6.8.8 提取子字符串  
		6.8.9 运行修改过的程序  
	6.9 小结  
	6.10 练习  
	6.11 本章主要内容  
第7章 自定义数据类型  
	7.1 C++中的结构  
		7.1.1 结构的概念  
		7.1.2 定义结构  
		7.1.3 初始化结构  
		7.1.4 访问结构的成员  
		7.1.5 伴随结构的智能感知帮助  
		7.1.6 RECT结构  
		7.1.7 使用指针处理结构  
	7.2 数据类型、对象、类和实例  
		7.2.1 类的起源  
		7.2.2 类的操作  
		7.2.3 术语  
	7.3 理解类  
		7.3.1 定义类  
		7.3.2 声明类的对象  
		7.3.3 访问类的数据成员  
		7.3.4 对象成员的初始化  
		7.3.5 初始化类成员  
		7.3.6 类的成员函数  
		7.3.7 在类的外部定义成员函数  
		7.3.8 内联函数  
	7.4 类构造函数  
		7.4.1 构造函数的概念  
		7.4.2 默认的构造函数  
		7.4.3 默认的形参值  
		7.4.4 在构造函数中使用初始化列表  
		7.4.5 声明显式的构造函数  
		7.4.6 委托构造函数  
	7.5 类的私有成员  
		7.5.1 访问私有类成员  
		7.5.2 类的友元函数  
		7.5.3 默认复制构造函数  
	7.6 this指针  
	7.7 类的const对象  
		7.7.1 类的const成员函数  
		7.7.2 类外部的成员函数定义  
	7.8 类对象的数组  
	7.9 类的静态成员  
		7.9.1 类的静态数据成员  
		7.9.2 类的静态函数成员  
	7.10 类对象的指针和引用  
		7.10.1 类对象的指针  
		7.10.2 类对象的引用  
	7.11 小结  
	7.12 练习  
	7.13 本章主要内容  
第8章 深入理解类  
	8.1 类析构函数  
		8.1.1 析构函数的概念  
		8.1.2 默认的析构函数  
		8.1.3 析构函数与动态内存分配  
	8.2 实现复制构造函数  
	8.3 运算符重载  
		8.3.1 实现重载的运算符  
		8.3.2 实现对比较运算符的完全支持  
		8.3.3 重载赋值运算符  
		8.3.4 重载加法运算符  
		8.3.5 重载递增和递减运算符  
		8.3.6 重载函数调用操作符  
	8.4 对象复制问题  
		8.4.1 避免不必要的复制操作  
		8.4.2 应用rvalue引用形参  
		8.4.3 命名的对象是lvalue  
	8.5 默认的类成员  
	8.6 类模板  
		8.6.1 定义类模板  
		8.6.2 根据类模板创建对象  
		8.6.3 有多个形参的类模板  
		8.6.4 函数对象模板  
	8.7 完美转发  
	8.8 模板形参的默认实参  
		8.8.1 函数模板的默认实参  
		8.8.2 类模板的默认实参  
	8.9 类模板的别名  
	8.10 模板特例  
	8.11 使用类  
		8.11.1 类接口的概念  
		8.11.2 定义问题  
		8.11.3 实现CBox类  
	8.12 组织程序代码  
	8.13 字符串的库类  
		8.13.1 创建字符串对象  
		8.13.2 连接字符串  
		8.13.3 访问与修改字符串  
		8.13.4 比较字符串  
		8.13.5 搜索字符串  
	8.14 小结  
	8.15 练习  
	8.16 本章主要内容  
第9章 类继承和虚函数  
	9.1 面向对象编程的基本思想  
	9.2 类的继承  
		9.2.1 基类的概念  
		9.2.2 基类的派生类  
	9.3 继承机制下的访问控制  
		9.3.1 派生类中构造函数的操作  
		9.3.2 声明类的保护成员  
		9.3.3 继承类成员的访问级别  
	9.4 派生类中的复制构造函数  
	9.5 禁止派生类  
	9.6 友元类成员  
		9.6.1 友元类  
		9.6.2 对类友元关系的限制  
	9.7 虚函数  
		9.7.1 虚函数的概念  
		9.7.2 确保虚函数的正确执行  
		9.7.3 禁止重写函数  
		9.7.4 使用指向类对象的指针  
		9.7.5 使用引用处理虚函数  
		9.7.6 纯虚函数  
		9.7.7 抽象类  
		9.7.8 间接基类  
		9.7.9 虚析构函数  
	9.8 类类型之间的强制转换  
		9.8.1 定义转换运算符  
		9.8.2 显式类型转换运算符  
	9.9 嵌套类  
	9.10 小结  
	9.11 练习  
	9.12 本章主要内容  
第10章 标准模板库  
	10.1 标准模板库的定义  
		10.1.1 容器  
		10.1.2 容器适配器  
		10.1.3 迭代器  
	10.2 智能指针  
	10.3 算法  
	10.4 STL中的函数对象  
	10.5 STL容器范围  
	10.6 序列容器  
		10.6.1 创建矢量容器  
		10.6.2 矢量容器的容量和大小  
		10.6.3 访问矢量中的元素  
		10.6.4 在矢量中插入和删除元素  
		10.6.5 在矢量中存储类对象  
		10.6.6 矢量元素的排序  
		10.6.7 存储矢量中的指针  
		10.6.8 双端队列容器  
		10.6.9 使用列表容器  
		10.6.10 使用forward_list容器  
		10.6.11 使用其他序列容器  
		10.6.12 tuple<>类模板  
	10.7 关联容器  
		10.7.1 使用映射容器   
		10.7.2 使用多重映射容器  
	10.8 关于迭代器的更多内容  
		10.8.1 使用输入流迭代器  
		10.8.2 使用插入迭代器  
		10.8.3 使用输出流迭代器  
	10.9 关于函数对象的更多内容  
	10.10 关于算法的更多内容  
	10.11 类型特质和静态断言  
	10.12 λ表达式  
		10.12.1 capture子句  
		10.12.2 捕获特定的变量  
		10.12.3 模板和λ表达式  
		10.12.4 命名λ表达式  
	10.13 小结  
	10.14 练习  
	10.15 本章主要内容  
第11章 Windows编程的概念  
	11.1 Windows编程基础  
		11.1.1 窗口的元素  
		11.1.2 Windows程序与操作系统  
		11.1.3 事件驱动型程序  
		11.1.4 Windows消息  
		11.1.5 WindowsAPI  
		11.1.6 Windows数据类型  
		11.1.7 Windows程序中的符号  
	11.2 Windows程序的结构  
		11.2.1 WinMain()函数  
		11.2.2 处理Windows消息  
	11.3 MFC  
		11.3.1 MFC表示法  
		11.3.2 MFC程序的组织方式  
	11.4 小结  
	11.5 本章主要内容  
第12章 使用MFC编写Windows程序  
	12.1 MFC的文档/视图概念  
		12.1.1 文档的概念  
		12.1.2 文档界面  
		12.1.3 视图的概念  
		12.1.4 链接文档和视图  
		12.1.5 应用程序和MFC  
	12.2 创建MFC应用程序  
		12.2.1 创建SDI应用程序  
		12.2.2 MFCApplicationWizard的输出  
		12.2.3 创建MDI应用程序  
	12.3 小结  
	12.4 练习  
	12.5 本章主要内容  
第13章 处理菜单和工具栏  
	13.1 与Windows通信  
		13.1.1 了解消息映射  
		13.1.2 消息类别  
		13.1.3 处理程序中的消息  
	13.2 扩展Sketcher程序  
	13.3 菜单的元素  
	13.4 为菜单消息添加处理程序  
		13.4.1 选择处理菜单消息的类  
		13.4.2 创建菜单消息函数  
		13.4.3 编写菜单消息函数的代码 
		13.4.4 添加更新菜单消息的处理程序 
	13.5 添加工具栏按钮 
		13.5.1 编辑工具栏按钮的属性 
		13.5.2 练习使用工具栏按钮 
		13.5.3 添加工具提示 
	13.6 小结 
	13.7 练习 
	13.8 本章主要内容 
第14章 在窗口中绘图 
	14.1 窗口绘图的基础知识 
		14.1.1 窗口客户区 
		14.1.2 Windows图形设备界面 
	14.2 MFC的绘图机制 
		14.2.1 应用程序中的视图类 
		14.2.2 CDC类 
	14.3 实际绘制图形 
	14.4 对鼠标进行编程 
		14.4.1 鼠标发出的消息 
		14.4.2 鼠标消息处理程序 
		14.4.3 使用鼠标绘图 
	14.5 绘制草图 
		14.5.1 运行示例 
		14.5.2 捕获鼠标消息 
	14.6 小结 
	14.7 练习题 
	14.8 本章主要内容 
第15章 改进视图 
	15.1 Sketcher应用程序的缺陷 
	15.2 改进视图 
		15.2.1 更新多个视图 
		15.2.2 滚动视图 
		15.2.3 使用MM_LOENGLISH映射模式 
	15.3 删除和移动元素 
	15.4 实现上下文菜单 
		15.4.1 关联菜单和类 
		15.4.2 选中上下文菜单项 
	15.5 标识位于光标下的元素 
		15.5.1 练习弹出菜单 
		15.5.2 突出显示元素 
		15.5.3 实现移动和删除功能 
	15.6 处理屏蔽的元素 
	15.7 小结 
	15.8 练习 
	15.9 本章主要内容 
第16章 使用对话框和控件 
	16.1 理解对话框 
	16.2 理解控件 
	16.3 创建对话框资源 
		16.3.1 给对话框添加控件 
		16.3.2 测试对话框 
	16.4 对话框的编程 
		16.4.1 添加对话框类 
		16.4.2 模态和非模态对话框 
		16.4.3 显示对话框 
	16.5 支持对话框控件 
		16.5.1 初始化对话框控件 
		16.5.2 处理单选按钮消息 
	16.6 完成对话框的操作 
		16.6.1 给文档添加线宽 
		16.6.2 给元素添加线宽 
		16.6.3 在视图中创建元素 
		16.6.4 练习使用对话框 
	16.7 使用微调按钮控件 
		16.7.1 添加Scale菜单项和工具栏按钮 
		16.7.2 创建微调按钮 
		16.7.3 生成比例对话框类 
		16.7.4 显示微调按钮 
	16.8 使用缩放比例 
		16.8.1 可缩放的映射模式 
		16.8.2 设置文档的大小 
		16.8.3 设置映射模式 
		16.8.4 同时实现滚动与缩放 
	16.9 使用状态栏 
		16.9.1 给框架窗口添加状态栏 
		16.9.2 CString类 
	16.10 使用编辑框控件 
		16.10.1 创建编辑框资源 
		16.10.2 创建对话框类 
		16.10.3 添加Text菜单项 
		16.10.4 定义文本元素 
		16.10.5 实现CText类 
	16.11 小结 
	16.12 练习 
	16.13 本章主要内容 
第17章 存储和打印文档 
	17.1 了解序列化 
	17.2 序列化文档 
		17.2.1 文档类定义中的序列化 
		17.2.2 文档类实现中的序列化 
		17.2.3 基于CObject的类的功能 
		17.2.4 序列化的工作方式  
		17.2.5 如何实现类的序列化  
	17.3 应用序列化  
		17.3.1 记录文档修改  
		17.3.2 序列化文档  
		17.3.3 序列化元素类  
	17.4 练习序列化  
	17.5 打印文档  
	17.6 实现多页打印  
		17.6.1 获取文档的总尺寸  
		17.6.2 存储打印数据  
		17.6.3 准备打印  
		17.6.4 打印后的清除  
		17.6.5 准备设备上下文  
		17.6.6 打印文档  
		17.6.7 获得文档的打印输出  
	17.7 小结  
	17.8 练习  
	17.9 本章主要内容  
第18章 编写Windows8应用程序  
	18.1 WindowsStore应用程序  
	18.2 开发WindowsStore应用程序  
	18.3 WindowsRuntime的概念  
		18.3.1 WinRT名称空间  
		18.3.2 WinRT对象  
	18.4 C++/CX 730
		18.4.1 C++/CX名称空间  
		18.4.2 定义WinRT类类型  
		18.4.3 ref类类型的变量  
		18.4.4 访问ref类对象的成员  
		18.4.5 事件处理程序  
		18.4.6 转换ref类引用的类型  
	18.5 XAML  
		18.5.1 XAML元素  
		18.5.2 XAML中的UI元素  
		18.5.3 附加属性  
		18.5.4 父元素和子元素  
		18.5.5 控件元素  
		18.5.6 布局元素  
		18.5.7 处理UI元素的事件  
	18.6 创建WindowsStore应用程序  
		18.6.1 应用程序文件  
		18.6.2 定义用户界面  
		18.6.3 创建标题  
		18.6.4 添加游戏控件  
		18.6.5 创建包含纸牌的网格  
		18.6.6 实现游戏的操作  
		18.6.7 初始化MainPage对象  
		18.6.8 初始化一副纸牌  
		18.6.9 建立cardGrid的子元素  
		18.6.10 初始化游戏  
		18.6.11 洗牌  
		18.6.12 突出显示UI纸牌  
		18.6.13 处理翻牌事件  
		18.6.14 处理图形事件  
		18.6.15 确认赢家  
		18.6.16 处理游戏控件的按钮事件  
	18.7 缩放UI元素  
	18.8 平移  
		18.8.1 应用程序的启动动画  
		18.8.2 故事板动画  
	18.9 小结  
	18.10 本章主要内容  


现代C++白皮书（Thriving in a Crowded and Changing World）

官方网站：
https://www.cpp-summit.org

★★
作者：Bjarne Stroustrup

1.	前言
	1.1	年表
	1.2	概述
2.	背景：C++的1979-2006
	2.1	第一个十年
	2.2	第二个十年
		2.2.1 语言特性
		2.2.2 标准库组件
	2.3 C++的2006
	2.4	其他语言
3.	C++标准委员会
	3.1 标准
	3.2 组织
	3.3 对设计的影响
	3.4 提案检查清单
4.	C++11：感觉像是门新语言
	4.1 C++11：并发支持
		4.1.1 内存模型
		4.1.2 线程和锁
		4.1.3 期值
	4.2 C++11：简化使用
		4.2.1 auto和decltype
		4.2.2 范围for
		4.2.3 移动语义
		4.2.4 资源管理指针
		4.2.5 统一初始化
		4.2.6 nullptr
		4.2.7 constexpr函数
		4.2.8 用户定义字面量
		4.2.9 原始字符串字面量
		4.2.10 属性
		4.2.11 垃圾收集
	4.3 C++11：改进对泛型编程的支持
		4.3.1 lambda表达式
		4.3.2 变参模板
		4.3.3 别名
		4.3.4 tuple
	4.4 C++11：提高静态类型安全
	4.5	C++11：支持对库的开发
		4.5.1 实现技巧
		4.5.2 元编程支持
		4.5.3 noexcept规约
	4.6 C++11：标准库组件
5. C++14：完成C++11
	5.1 数字分隔符
	5.2 变量模板
	5.3 函数返回类型推导
	5.4 泛型lambda表达式
	5.5 constexpr函数中的局部变量
6. 概念
	6.1 概念的早期历史
	6.2 C++0x概念
		6.2.1 概念定义
		6.2.2 概念使用
		6.2.3 概念映射
		6.2.4 定义检查
		6.2.5 教训
		6.2.6 哪里出错了？
	6.3 Concepts TS
		6.3.1 定义检查
		6.3.2 概念使用
		6.3.3 概念的定义
		6.3.4 概念名称引导器
		6.3.5 概念和类型
		6.3.6 改进
		6.3.7 等效语法
		6.3.8 为什么在C++17中没有概念？
	6.4 C++20概念
	6.5 概念的命名
7. 错误处理
	7.1 背景
	7.2 现实中的问题
	7.3 noexcept规约
	7.4 类型系统的支持
	7.5 回归基础
8. C++17：大海迷航
	8.1 构造函数模板参数推导
	8.2 结构化绑定
	8.3 variant、optional和any
	8.4 并发
	8.5 并行STL
	8.6 文件系统
	8.7 条件的显式测试
	8.8 C++17中未包含的提议 
		8.8.1 网络库
		8.8.2 点运算符
		8.8.3 统一调用语法
		8.8.4 缺省的比较
9. C++20：方向之争
	9.1 设计原则
	9.2 我的C++17清单
	9.3 C++20特性
		9.3.1 模块
		9.3.2 协程
		9.3.3 编译期计算支持
		9.3.4 <==>
		9.3.5 范围
		9.3.6 日期和时区
		9.3.7 格式化
		9.3.8 跨度
	9.4 并发
	9.5 次要特性
	9.6 进行中的工作
		9.6.1 契约
		9.6.2 静态反射
10. 2020年的C++
	10.1 C++用来做什么？
	10.2 C++社区
	10.3 教育和研究
	10.4 工具
	10.5 编程风格
		10.5.1 泛型编程
		10.5.2 元编程
	10.6 编码指南
		10.6.1 一般方法
		10.6.2 静态分析
11. 回顾
	11.1 C++模型
	11.2 技术上的成功 
	11.3 需要工作的领域
	11.4 教训
	11.5 未来 
致谢